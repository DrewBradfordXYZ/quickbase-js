[
  {
    "op": "remove",
    "path": "/groups"
  },
  {
    "op": "remove",
    "path": "/operations"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/responses/200/schema/$ref",
    "value": "#/definitions/generateDocument200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/13"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/12"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/11"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/10/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/10/schema"
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/10/description",
    "value": "Your Quickbase domain, for example demo.quickbase.com"
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/10/name",
    "value": "realm"
  },
  {
    "op": "add",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/10/type",
    "value": "string"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/9/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/9/schema"
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/9/description",
    "value": "Page orientation. Default is \"portrait\". Add to override the value set in the template builder."
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/9/name",
    "value": "orientation"
  },
  {
    "op": "add",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/9/type",
    "value": "string"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/8/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/8/schema"
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/8/description",
    "value": "Page size. Default is \"A4\". Add to override the value set in the template builder."
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/8/name",
    "value": "pageSize"
  },
  {
    "op": "add",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/8/required",
    "value": false
  },
  {
    "op": "add",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/8/type",
    "value": "string"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/7/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/7/schema"
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/7/description",
    "value": "Unit of measurement for the margin. Default is \"in\". Add to override the value set in the template builder."
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/7/in",
    "value": "query"
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/7/name",
    "value": "unit"
  },
  {
    "op": "add",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/7/type",
    "value": "string"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/6/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/6/schema"
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/6/description",
    "value": "Margin formatted as top right bottom left, separated by spaces. Add to override the value set in the template builder."
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/6/in",
    "value": "query"
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/6/name",
    "value": "margin"
  },
  {
    "op": "add",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/6/type",
    "value": "string"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/5/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/5/in",
    "value": "query"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/5/required"
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/5/description",
    "value": "The format of the file that is returned. Default is \"pdf\"."
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/5/name",
    "value": "format"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/4/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/4/schema"
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/4/description",
    "value": "The content-type of the response. application/json will return a JSON payload with a base64 encoded file. application/octet-stream will download the file directly."
  },
  {
    "op": "replace",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/4/name",
    "value": "accept"
  },
  {
    "op": "add",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/4/type",
    "value": "string"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/3/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/2/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1docTemplates~1{templateId}~1generate/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/responses/4xx~15xx/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/responses/4xx~15xx/schema/$ref",
    "value": "#/definitions/changesetSolutionFromRecord4xx_5xxResponse"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/responses/401~1403/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/responses/401~1403/schema/$ref",
    "value": "#/definitions/changesetSolutionFromRecord401_403Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/responses/404/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/responses/404/schema/$ref",
    "value": "#/definitions/changesetSolutionFromRecord404Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/responses/400/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/responses/400/schema/$ref",
    "value": "#/definitions/changesetSolutionFromRecord400Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/responses/200/schema/$ref",
    "value": "#/definitions/changesetSolutionFromRecord200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/parameters/7"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/parameters/6"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/parameters/4/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/parameters/4/name",
    "value": "xQBLErrorsAsSuccess"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/parameters/3/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/parameters/2/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset~1fromrecord/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/responses/4xx~15xx/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/responses/4xx~15xx/schema/$ref",
    "value": "#/definitions/changesetSolution4xx_5xxResponse"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/responses/401~1403/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/responses/401~1403/schema/$ref",
    "value": "#/definitions/changesetSolution401_403Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/responses/404/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/responses/404/schema/$ref",
    "value": "#/definitions/changesetSolution404Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/responses/400/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/responses/400/schema/$ref",
    "value": "#/definitions/changesetSolution400Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/responses/200/schema/$ref",
    "value": "#/definitions/changesetSolution200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/parameters/2/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/parameters/2/name",
    "value": "xQBLErrorsAsSuccess"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1changeset/put/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/responses/4xx~15xx/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/responses/4xx~15xx/schema/$ref",
    "value": "#/definitions/updateSolutionToRecord4xx_5xxResponse"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/responses/401~1403/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/responses/401~1403/schema/$ref",
    "value": "#/definitions/updateSolutionToRecord401_403Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/responses/404/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/responses/404/schema/$ref",
    "value": "#/definitions/updateSolutionToRecord404Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/responses/400/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/responses/400/schema/$ref",
    "value": "#/definitions/updateSolutionToRecord400Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/responses/200/schema/$ref",
    "value": "#/definitions/updateSolutionToRecord200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/parameters/7"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/parameters/6"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/parameters/4/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/parameters/4/name",
    "value": "xQBLErrorsAsSuccess"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/parameters/3/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/parameters/2/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1fromrecord/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1fromrecord/get/responses/4xx~15xx/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1fromrecord/get/responses/4xx~15xx/schema/$ref",
    "value": "#/definitions/createSolutionFromRecord4xx_5xxResponse"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1fromrecord/get/responses/401~1403/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1fromrecord/get/responses/401~1403/schema/$ref",
    "value": "#/definitions/createSolutionFromRecord401_403Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1fromrecord/get/responses/404/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1fromrecord/get/responses/404/schema/$ref",
    "value": "#/definitions/createSolutionFromRecord404Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1fromrecord/get/responses/400/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1fromrecord/get/responses/400/schema/$ref",
    "value": "#/definitions/createSolutionFromRecord400Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1fromrecord/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1fromrecord/get/responses/200/schema/$ref",
    "value": "#/definitions/createSolutionFromRecord200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1fromrecord/get/parameters/6"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1fromrecord/get/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1fromrecord/get/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1fromrecord/get/parameters/3/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1solutions~1fromrecord/get/parameters/3/name",
    "value": "xQBLErrorsAsSuccess"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1fromrecord/get/parameters/2/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1fromrecord/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1fromrecord/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/responses/4xx~15xx/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/responses/4xx~15xx/schema/$ref",
    "value": "#/definitions/exportSolutionToRecord4xx_5xxResponse"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/responses/401~1403/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/responses/401~1403/schema/$ref",
    "value": "#/definitions/exportSolutionToRecord401_403Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/responses/404/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/responses/404/schema/$ref",
    "value": "#/definitions/exportSolutionToRecord404Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/responses/400/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/responses/400/schema/$ref",
    "value": "#/definitions/exportSolutionToRecord400Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/responses/200/schema/$ref",
    "value": "#/definitions/exportSolutionToRecord200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/parameters/7"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/parameters/6"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/parameters/4/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/parameters/4/required",
    "value": false
  },
  {
    "op": "replace",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/parameters/4/description",
    "value": "The QBL version to be used for the export. If not specified the default would be used."
  },
  {
    "op": "replace",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/parameters/4/name",
    "value": "qBLVersion"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/parameters/3/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/parameters/3/name",
    "value": "xQBLErrorsAsSuccess"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/parameters/2/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}~1torecord/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions/post/responses/4xx~15xx/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions/post/responses/4xx~15xx/schema/$ref",
    "value": "#/definitions/createSolution4xx_5xxResponse"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions/post/responses/401~1403/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions/post/responses/401~1403/schema/$ref",
    "value": "#/definitions/createSolution401_403Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions/post/responses/400/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions/post/responses/400/schema/$ref",
    "value": "#/definitions/createSolution400Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions/post/responses/200/schema/$ref",
    "value": "#/definitions/createSolution200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions/post/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1solutions/post/parameters/1/name",
    "value": "xQBLErrorsAsSuccess"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/put/responses/4xx~15xx/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}/put/responses/4xx~15xx/schema/$ref",
    "value": "#/definitions/updateSolution4xx_5xxResponse"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/put/responses/401~1403/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}/put/responses/401~1403/schema/$ref",
    "value": "#/definitions/updateSolution401_403Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/put/responses/400/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}/put/responses/400/schema/$ref",
    "value": "#/definitions/updateSolution400Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/put/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}/put/responses/200/schema/$ref",
    "value": "#/definitions/updateSolution200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/put/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/put/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/put/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/put/parameters/2/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1solutions~1{solutionId}/put/parameters/2/name",
    "value": "xQBLErrorsAsSuccess"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/put/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/get/responses/4xx~15xx/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}/get/responses/4xx~15xx/schema/$ref",
    "value": "#/definitions/exportSolution4xx_5xxResponse"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/get/responses/401~1403/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}/get/responses/401~1403/schema/$ref",
    "value": "#/definitions/exportSolution401_403Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/get/responses/404/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}/get/responses/404/schema/$ref",
    "value": "#/definitions/exportSolution404Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/get/responses/400/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}/get/responses/400/schema/$ref",
    "value": "#/definitions/exportSolution400Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1solutions~1{solutionId}/get/responses/200/schema/$ref",
    "value": "#/definitions/exportSolution200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/get/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/get/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/get/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1solutions~1{solutionId}/get/parameters/1/name",
    "value": "qBLVersion"
  },
  {
    "op": "remove",
    "path": "/paths/~1solutions~1{solutionId}/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1events~1summaries/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1events~1summaries/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1events~1summaries/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1events~1summaries/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1analytics~1events~1summaries/post/responses/200/schema/$ref",
    "value": "#/definitions/platformAnalyticEventSummaries200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/1/type"
  },
  {
    "op": "replace",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "replace",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/1/description"
  },
  {
    "op": "add",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/1/schema",
    "value": {
      "example": {
        "start": "2023-12-01T12:00:00.000-05:00",
        "end": "2023-12-31T12:00:00.000-05:00",
        "groupBy": "user",
        "nextToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJvZmZzZXQiOjEwMCwiaWF0IjoxNzA2NzE1OTI3LCJleHAiOjE3MDY4MDIzMjd9.aWGZCv5vJIai0Dw6sVcQ9FT70PHcqWcqP9sGdKBJeco",
        "where": [
          {
            "id": "58351651.xc1",
            "type": "user"
          },
          {
            "id": "bpqe82s1",
            "type": "app"
          }
        ]
      },
      "properties": {
        "start": {
          "description": "The start date and time of the requested summaries in ISO 8601 time format.",
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "description": "The end date and time of the requested summaries in ISO 8601 time format.",
          "format": "date-time",
          "type": "string"
        },
        "groupBy": {
          "description": "How the events should be grouped.",
          "enum": [
            "app",
            "user"
          ],
          "type": "string"
        },
        "nextToken": {
          "description": "A pagination token from a previous response. Used to fetch the next page.",
          "type": "string"
        },
        "where": {
          "description": "A list of items to filter events by. Only events which match ALL criteria will be included in the results.",
          "items": {
            "properties": {
              "id": {
                "description": "Id of the item to filter by - the hash uid if filtering a user, or the app id if filtering an app.",
                "type": "string"
              },
              "type": {
                "description": "The type of item to filter by.",
                "enum": [
                  "app",
                  "user"
                ],
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ],
            "type": "object"
          },
          "maxItems": 10,
          "type": "array"
        }
      },
      "required": [
        "start",
        "end",
        "groupBy"
      ],
      "type": "object"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/0/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/0/type",
    "value": "number"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/0/required"
  },
  {
    "op": "replace",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/0/name",
    "value": "accountId"
  },
  {
    "op": "replace",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/0/in",
    "value": "query"
  },
  {
    "op": "replace",
    "path": "/paths/~1analytics~1events~1summaries/post/parameters/0/description",
    "value": "The ID of the account to query. If no value is specified, the first account matching the provided domain is chosen."
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1reads/get/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1reads/get/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1reads/get/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1reads/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1reads/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1analytics~1reads/get/responses/200/schema/$ref",
    "value": "#/definitions/platformAnalyticReads200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1reads/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1reads/get/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1reads/get/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1analytics~1reads/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/responses/202/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/responses/202/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/responses/202/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/responses/202/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/responses/202/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1audit/post/responses/202/schema/$ref",
    "value": "#/definitions/audit202Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1audit/post/responses/200/schema/$ref",
    "value": "#/definitions/audit200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/parameters/0/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/parameters/0/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1audit/post/parameters/0/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/parameters/0/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1audit/post/parameters/0/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1audit/post/parameters/0/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1audit/post/parameters/0/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1audit/post/parameters/0/schema",
    "value": {
      "example": {
        "date": "2022-05-20",
        "topics": [
          "login",
          "login_fail"
        ]
      },
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "nextToken": {
          "description": "Token specifying start of page. For first page don't supply this.",
          "example": "6a.f12x",
          "type": "string"
        },
        "numRows": {
          "description": "Number of logs to return per page, default is 10000, minimum is 1000, max is 50000.",
          "example": 10000,
          "type": "integer"
        },
        "queryId": {
          "description": "The query id of an audit log request. This id is needed to fetch subsequent paged results of a single query.",
          "example": "c41aa90e-0db6-4732-8e22-2ef80fe4092a",
          "type": "string"
        },
        "date": {
          "description": "The date for which audit logs need to be fetched. This must be date-time only, as YYYY-MM-DD, and a valid date in the past.",
          "example": "2022-05-23",
          "type": "string",
          "format": "date"
        },
        "topics": {
          "type": "array",
          "maxItems": 20,
          "description": "An array that may contain up to 20 [topics](https://resources.quickbase.com/nav/app/budurkasx/action/showpage/2b2941e4-f34d-4d41-9b0e-db790d20e9ab?pageIdV2=quickbase.com-DashboardGroup-15760d74-2243-4ce9-9495-7cc8790f12e7) to filter by. If empty, all topics are returned.",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/responses/200/schema/$ref",
    "value": "#/definitions/removeSubgroupsFromGroup200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/RemoveSubgroupsFromGroupRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/delete/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/responses/200/schema/$ref",
    "value": "#/definitions/addSubgroupsToGroup200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/AddSubgroupsToGroupRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1subgroups/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1managers/delete/responses/200/schema/$ref",
    "value": "#/definitions/removeManagersFromGroup200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1groups~1{gid}~1managers/delete/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1groups~1{gid}~1managers/delete/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1managers/delete/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1managers/delete/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/RemoveManagersFromGroupRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/delete/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1managers/post/responses/200/schema/$ref",
    "value": "#/definitions/addManagersToGroup200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1groups~1{gid}~1managers/post/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1groups~1{gid}~1managers/post/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1managers/post/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1managers/post/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/AddManagersToGroupRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1managers/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1members/delete/responses/200/schema/$ref",
    "value": "#/definitions/removeMembersFromGroup200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1groups~1{gid}~1members/delete/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1groups~1{gid}~1members/delete/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1members/delete/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1members/delete/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/RemoveMembersFromGroupRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/delete/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1members/post/responses/200/schema/$ref",
    "value": "#/definitions/addMembersToGroup200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1groups~1{gid}~1members/post/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1groups~1{gid}~1members/post/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1members/post/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1groups~1{gid}~1members/post/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/AddMembersToGroupRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1groups~1{gid}~1members/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1users~1undeny/put/responses/200/schema/$ref",
    "value": "#/definitions/undenyUsers200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1users~1undeny/put/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1users~1undeny/put/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1users~1undeny/put/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1users~1undeny/put/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/UndenyUsersRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1undeny/put/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/responses/200/schema/$ref",
    "value": "#/definitions/denyUsersAndGroups200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/2/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/2/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/2/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/2/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/2/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/2/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/2/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/2/schema",
    "value": {
      "$ref": "#/definitions/DenyUsersAndGroupsRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny~1{shouldDeleteFromGroups}/put/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1users~1deny/put/responses/200/schema/$ref",
    "value": "#/definitions/denyUsers200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1users~1deny/put/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1users~1deny/put/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1users~1deny/put/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1users~1deny/put/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/DenyUsersRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1users~1deny/put/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/responses/200/schema/x-amf-examples"
  },
  {
    "op": "add",
    "path": "/paths/~1users/post/responses/200/schema/$ref",
    "value": "#/definitions/getUsers200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1users/post/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1users/post/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1users/post/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1users/post/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/GetUsersRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1users/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/delete/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/delete/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/delete/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/delete/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/delete/responses/200/schema/$ref",
    "value": "#/definitions/deleteFile200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/delete/parameters/6"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/delete/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/delete/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/delete/parameters/3/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/delete/parameters/2/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/delete/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/delete/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/get/responses/200/schema/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/get/responses/200/schema/description"
  },
  {
    "op": "add",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/get/responses/200/schema/$ref",
    "value": "#/definitions/downloadFile200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/get/parameters/6"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/get/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/get/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/get/parameters/3/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/get/parameters/2/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1files~1{tableId}~1{recordId}~1{fieldId}~1{versionNumber}/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken/delete/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken/delete/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken/delete/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken/delete/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1usertoken/delete/responses/200/schema/$ref",
    "value": "#/definitions/deleteUserToken200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken/delete/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken/delete/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken/delete/parameters/0"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1deactivate/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1deactivate/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1deactivate/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1deactivate/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1usertoken~1deactivate/post/responses/200/schema/$ref",
    "value": "#/definitions/deactivateUserToken200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1deactivate/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1deactivate/post/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1deactivate/post/parameters/0"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1transfer/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1transfer/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1transfer/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1transfer/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1usertoken~1transfer/post/responses/200/schema/$ref",
    "value": "#/definitions/transferUserToken200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1transfer/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1transfer/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1transfer/post/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1transfer/post/parameters/0/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1transfer/post/parameters/0/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1usertoken~1transfer/post/parameters/0/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1transfer/post/parameters/0/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1transfer/post/parameters/0/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1usertoken~1transfer/post/parameters/0/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1usertoken~1transfer/post/parameters/0/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1usertoken~1transfer/post/parameters/0/schema",
    "value": {
      "example": {
        "id": 17658,
        "from": "62341.tr3s",
        "to": "123456.ab1s"
      },
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "number",
          "description": "The id of the user token to transfer"
        },
        "from": {
          "type": "string",
          "description": "The id of the user to transfer the user token from"
        },
        "to": {
          "type": "string",
          "description": "The id of the user to transfer the user token to"
        }
      }
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1clone/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1clone/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1clone/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1clone/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1usertoken~1clone/post/responses/200/schema/$ref",
    "value": "#/definitions/cloneUserToken200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1clone/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1clone/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1clone/post/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1clone/post/parameters/0/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1clone/post/parameters/0/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1usertoken~1clone/post/parameters/0/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1clone/post/parameters/0/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1usertoken~1clone/post/parameters/0/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1usertoken~1clone/post/parameters/0/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1usertoken~1clone/post/parameters/0/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1usertoken~1clone/post/parameters/0/schema",
    "value": {
      "example": {
        "name": "My cloned user token",
        "description": "Cloned from user token A"
      },
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The new name for the cloned user token.",
          "type": "string"
        },
        "description": {
          "description": "The description for the cloned user token.",
          "type": "string"
        }
      }
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1oauth~1token/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1oauth~1token/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1oauth~1token/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1oauth~1token/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1auth~1oauth~1token/post/responses/200/schema/$ref",
    "value": "#/definitions/exchangeSsoToken200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1oauth~1token/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1oauth~1token/post/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1oauth~1token/post/parameters/0/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1oauth~1token/post/parameters/0/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1auth~1oauth~1token/post/parameters/0/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1oauth~1token/post/parameters/0/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1oauth~1token/post/parameters/0/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1auth~1oauth~1token/post/parameters/0/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1auth~1oauth~1token/post/parameters/0/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1auth~1oauth~1token/post/parameters/0/schema",
    "value": {
      "example": {
        "grant_type": "urn:ietf:params:oauth:grant-type:token-exchange",
        "requested_token_type": "urn:quickbase:params:oauth:token-type:temp_ticket",
        "subject_token": "PHNhbWxwOlJlc3BvbnNlDQogICAgeG1sbnM6c2FtbHA9bjp...",
        "subject_token_type": "urn:ietf:params:oauth:token-type:saml2"
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "grant_type",
        "subject_token",
        "subject_token_type",
        "requested_token_type"
      ],
      "properties": {
        "grant_type": {
          "type": "string",
          "description": "The value `urn:ietf:params:oauth:grant-type:token-exchange` indicates that a token exchange is being performed.",
          "enum": [
            "urn:ietf:params:oauth:grant-type:token-exchange"
          ]
        },
        "requested_token_type": {
          "type": "string",
          "description": "An identifier for the type of the requested security token. For the RESTful API, use `urn:quickbase:params:oauth:token-type:temp_token`. For the XML or SCIM APIs use `urn:quickbase:params:oauth:token-type:temp_ticket`.",
          "enum": [
            "urn:quickbase:params:oauth:token-type:temp_ticket",
            "urn:quickbase:params:oauth:token-type:temp_token"
          ]
        },
        "subject_token": {
          "type": "string",
          "description": "A security token that represents the identity of the party on behalf of whom the request is being made. For SAML 2.0, the value should be a base64url-encoded SAML 2.0 assertion."
        },
        "subject_token_type": {
          "type": "string",
          "description": "An identifier that indicates the type of the security token in the `subject_token` parameter.",
          "enum": [
            "urn:ietf:params:oauth:token-type:saml2"
          ]
        }
      }
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1temporary~1{dbid}/get/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1temporary~1{dbid}/get/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1temporary~1{dbid}/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1temporary~1{dbid}/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1auth~1temporary~1{dbid}/get/responses/200/schema/$ref",
    "value": "#/definitions/getTempTokenDBID200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1temporary~1{dbid}/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1temporary~1{dbid}/get/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1temporary~1{dbid}/get/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1auth~1temporary~1{dbid}/get/parameters/1/required",
    "value": false
  },
  {
    "op": "replace",
    "path": "/paths/~1auth~1temporary~1{dbid}/get/parameters/1/description",
    "value": "Your Quickbase app token"
  },
  {
    "op": "replace",
    "path": "/paths/~1auth~1temporary~1{dbid}/get/parameters/1/name",
    "value": "qBAppToken"
  },
  {
    "op": "remove",
    "path": "/paths/~1auth~1temporary~1{dbid}/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1records~1query/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1records~1query/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1records~1query/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1records~1query/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1records~1query/post/responses/200/schema/$ref",
    "value": "#/definitions/runQuery200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1records~1query/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1records~1query/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1records~1query/post/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1records~1query/post/parameters/0/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1records~1query/post/parameters/0/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1records~1query/post/parameters/0/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1records~1query/post/parameters/0/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1records~1query/post/parameters/0/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1records~1query/post/parameters/0/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1records~1query/post/parameters/0/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1records~1query/post/parameters/0/schema",
    "value": {
      "$ref": "#/definitions/RunQueryRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1records/delete/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/delete/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/delete/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/delete/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1records/delete/responses/200/schema/$ref",
    "value": "#/definitions/deleteRecords200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/delete/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/delete/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/delete/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/delete/parameters/0/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/delete/parameters/0/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1records/delete/parameters/0/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/delete/parameters/0/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/delete/parameters/0/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1records/delete/parameters/0/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1records/delete/parameters/0/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1records/delete/parameters/0/schema",
    "value": {
      "$ref": "#/definitions/DeleteRecordsRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/400/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/400/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/400/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/400/schema/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/400/schema/description"
  },
  {
    "op": "add",
    "path": "/paths/~1records/post/responses/400/schema/$ref",
    "value": "#/definitions/upsert400Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/207/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/207/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/207/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/207/schema/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/207/schema/description"
  },
  {
    "op": "add",
    "path": "/paths/~1records/post/responses/207/schema/$ref",
    "value": "#/definitions/upsert207Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/200/schema/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/responses/200/schema/description"
  },
  {
    "op": "add",
    "path": "/paths/~1records/post/responses/200/schema/$ref",
    "value": "#/definitions/upsert200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/parameters/0/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/parameters/0/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1records/post/parameters/0/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/parameters/0/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1records/post/parameters/0/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1records/post/parameters/0/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1records/post/parameters/0/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1records/post/parameters/0/schema",
    "value": {
      "$ref": "#/definitions/UpsertRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1formula~1run/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1formula~1run/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1formula~1run/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1formula~1run/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1formula~1run/post/responses/200/schema/$ref",
    "value": "#/definitions/runFormula200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1formula~1run/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1formula~1run/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1formula~1run/post/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1formula~1run/post/parameters/0/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1formula~1run/post/parameters/0/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1formula~1run/post/parameters/0/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1formula~1run/post/parameters/0/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1formula~1run/post/parameters/0/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1formula~1run/post/parameters/0/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1formula~1run/post/parameters/0/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1formula~1run/post/parameters/0/schema",
    "value": {
      "description": "The following example will execute a Sum() for '20' and the value in a record with id 1 for the field with label 'NumericField'. Since this API is able to run any type of formula, all results will be returned as a string.",
      "example": {
        "from": "bck7gp3q2",
        "formula": "Sum([NumericField],20)",
        "rid": 1
      },
      "type": "object",
      "additionalProperties": false,
      "required": [
        "formula",
        "from"
      ],
      "properties": {
        "formula": {
          "description": "The formula to run. This must be a valid Quickbase formula.",
          "type": "string"
        },
        "rid": {
          "description": "The record ID to run the formula against. Only necessary for formulas that are run in the context of a record. For example, the formula User() does not need a record ID.",
          "type": "integer"
        },
        "from": {
          "description": "The unique identifier (dbid) of the table.",
          "example": "bck7gp3q2",
          "type": "string"
        }
      }
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage~1{fieldId}/get/responses/200/schema/items"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage~1{fieldId}/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage~1{fieldId}/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1fields~1usage~1{fieldId}/get/responses/200/schema/$ref",
    "value": "#/definitions/getFieldUsage200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage~1{fieldId}/get/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage~1{fieldId}/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage~1{fieldId}/get/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage~1{fieldId}/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage~1{fieldId}/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage/get/responses/200/schema/items"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1fields~1usage/get/responses/200/schema/$ref",
    "value": "#/definitions/getFieldsUsage200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage/get/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage/get/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage/get/parameters/2/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1usage/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1fields~1{fieldId}/post/responses/200/schema/$ref",
    "value": "#/definitions/updateField200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/2/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/2/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/2/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/2/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/2/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/2/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/2/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/2/schema",
    "value": {
      "$ref": "#/definitions/UpdateFieldRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/get/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/get/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/get/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1fields~1{fieldId}/get/responses/200/schema/$ref",
    "value": "#/definitions/getField200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/get/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/get/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/get/parameters/2/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields~1{fieldId}/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1fields/delete/responses/200/schema/$ref",
    "value": "#/definitions/deleteFields200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1fields/delete/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1fields/delete/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1fields/delete/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1fields/delete/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/DeleteFieldsRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/delete/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1fields/post/responses/200/schema/$ref",
    "value": "#/definitions/createField200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1fields/post/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1fields/post/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1fields/post/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1fields/post/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/CreateFieldRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/get/responses/200/schema/items"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1fields/get/responses/200/schema/$ref",
    "value": "#/definitions/getFields200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/get/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/get/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1fields/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1reports~1{reportId}~1run/post/responses/200/schema/$ref",
    "value": "#/definitions/runReport200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/7"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/6"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/4/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/4/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/4/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/4/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/4/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/4/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/4/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/4/schema",
    "value": {}
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/3/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/2/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}~1run/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}/get/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}/get/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1reports~1{reportId}/get/responses/200/schema/$ref",
    "value": "#/definitions/getReport200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}/get/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}/get/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports~1{reportId}/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports/get/responses/200/schema/items"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports/get/responses/200/schema/description"
  },
  {
    "op": "add",
    "path": "/paths/~1reports/get/responses/200/schema/$ref",
    "value": "#/definitions/getTableReports200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports/get/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports/get/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1reports/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/delete/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/delete/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/delete/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/delete/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/delete/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/delete/responses/200/schema/$ref",
    "value": "#/definitions/deleteRelationship200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/delete/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/delete/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/delete/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/delete/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/delete/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/responses/200/schema/$ref",
    "value": "#/definitions/updateRelationship200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/2/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/2/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/2/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/2/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/2/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/2/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/2/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/2/schema",
    "value": {
      "$ref": "#/definitions/UpdateRelationshipRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship~1{relationshipId}/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/responses/200/schema/$ref",
    "value": "#/definitions/createRelationship200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/CreateRelationshipRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationship/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationships/get/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationships/get/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationships/get/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationships/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationships/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}~1relationships/get/responses/200/schema/$ref",
    "value": "#/definitions/getRelationships200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationships/get/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationships/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationships/get/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationships/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}~1relationships/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/delete/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/delete/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/delete/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/delete/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}/delete/responses/200/schema/$ref",
    "value": "#/definitions/deleteTable200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/delete/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/delete/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/delete/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/delete/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/delete/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}/post/responses/200/schema/$ref",
    "value": "#/definitions/updateTable200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/parameters/5"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/parameters/2/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/parameters/2/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1tables~1{tableId}/post/parameters/2/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/parameters/2/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/parameters/2/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1tables~1{tableId}/post/parameters/2/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}/post/parameters/2/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}/post/parameters/2/schema",
    "value": {
      "$ref": "#/definitions/UpdateTableRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/get/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/get/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1tables~1{tableId}/get/responses/200/schema/$ref",
    "value": "#/definitions/getTable200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/get/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/get/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/get/parameters/1/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables~1{tableId}/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/get/responses/200/schema/items"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1tables/get/responses/200/schema/$ref",
    "value": "#/definitions/getAppTables200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/get/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/get/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1tables/post/responses/200/schema/$ref",
    "value": "#/definitions/createTable200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/post/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/post/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1tables/post/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/post/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/post/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1tables/post/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1tables/post/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1tables/post/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/CreateTableRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1tables/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1apps~1{appId}~1copy/post/responses/200/schema/$ref",
    "value": "#/definitions/copyApp200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1apps~1{appId}~1copy/post/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1apps~1{appId}~1copy/post/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1apps~1{appId}~1copy/post/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1apps~1{appId}~1copy/post/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/CopyAppRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1copy/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1events/get/responses/200/schema/items"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1events/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1events/get/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1apps~1{appId}~1events/get/responses/200/schema/$ref",
    "value": "#/definitions/getAppEvents200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1events/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1events/get/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1events/get/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}~1events/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/delete/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/delete/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/delete/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/delete/responses/200/schema/example"
  },
  {
    "op": "add",
    "path": "/paths/~1apps~1{appId}/delete/responses/200/schema/$ref",
    "value": "#/definitions/deleteApp200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/delete/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/delete/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/delete/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/delete/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/delete/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1apps~1{appId}/delete/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/delete/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/delete/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1apps~1{appId}/delete/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1apps~1{appId}/delete/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1apps~1{appId}/delete/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/DeleteAppRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/delete/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/responses/200/schema/x-amf-examples"
  },
  {
    "op": "add",
    "path": "/paths/~1apps~1{appId}/post/responses/200/schema/$ref",
    "value": "#/definitions/updateApp200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/parameters/4"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/parameters/1/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/parameters/1/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1apps~1{appId}/post/parameters/1/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/parameters/1/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/parameters/1/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1apps~1{appId}/post/parameters/1/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1apps~1{appId}/post/parameters/1/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1apps~1{appId}/post/parameters/1/schema",
    "value": {
      "$ref": "#/definitions/UpdateAppRequest"
    }
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/post/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/get/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/get/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/get/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/get/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/get/responses/200/schema/x-amf-examples"
  },
  {
    "op": "add",
    "path": "/paths/~1apps~1{appId}/get/responses/200/schema/$ref",
    "value": "#/definitions/getApp200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/get/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/get/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/get/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps~1{appId}/get/parameters/0/example"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps/post/responses/200/schema/properties"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps/post/responses/200/schema/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps/post/responses/200/schema/additionalProperties"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps/post/responses/200/schema/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps/post/responses/200/schema/x-amf-examples"
  },
  {
    "op": "add",
    "path": "/paths/~1apps/post/responses/200/schema/$ref",
    "value": "#/definitions/createApp200Response"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps/post/parameters/3"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps/post/parameters/2"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps/post/parameters/1"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps/post/parameters/0/type"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps/post/parameters/0/example"
  },
  {
    "op": "replace",
    "path": "/paths/~1apps/post/parameters/0/in",
    "value": "body"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps/post/parameters/0/required"
  },
  {
    "op": "remove",
    "path": "/paths/~1apps/post/parameters/0/description"
  },
  {
    "op": "replace",
    "path": "/paths/~1apps/post/parameters/0/name",
    "value": "generated"
  },
  {
    "op": "add",
    "path": "/paths/~1apps/post/parameters/0/x-amf-mediaType",
    "value": "application/json"
  },
  {
    "op": "add",
    "path": "/paths/~1apps/post/parameters/0/schema",
    "value": {
      "$ref": "#/definitions/CreateAppRequest"
    }
  },
  {
    "op": "add",
    "path": "/definitions",
    "value": {
      "CreateAppRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the app."
          },
          "description": {
            "type": "string",
            "description": "A description for the app."
          },
          "assignToken": {
            "type": "boolean",
            "description": "Whether to assign the user token."
          }
        },
        "required": [
          "name",
          "assignToken"
        ],
        "description": "Create an app"
      },
      "UpdateAppRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the app."
          },
          "description": {
            "type": "string",
            "description": "A description for the app."
          },
          "assignToken": {
            "type": "boolean",
            "description": "Whether to assign the user token."
          }
        },
        "required": [
          "name",
          "assignToken"
        ],
        "description": "Update an app"
      },
      "DeleteAppRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the app."
          },
          "description": {
            "type": "string",
            "description": "A description for the app."
          },
          "assignToken": {
            "type": "boolean",
            "description": "Whether to assign the user token."
          }
        },
        "required": [
          "name",
          "assignToken"
        ],
        "description": "Delete an app"
      },
      "CopyAppRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the new app."
          },
          "description": {
            "type": "string",
            "description": "A description for the new app."
          },
          "properties": {
            "type": "object",
            "properties": {
              "keepData": {
                "type": "boolean",
                "description": "Whether to copy data."
              },
              "excludeFiles": {
                "type": "boolean",
                "description": "Whether to exclude files."
              },
              "usersAndRoles": {
                "type": "boolean",
                "description": "Whether to copy users and roles."
              },
              "assignUserToken": {
                "type": "boolean",
                "description": "Whether to assign the user token."
              }
            },
            "description": "Options for customizing the app copy process."
          }
        },
        "required": [
          "name"
        ],
        "description": "Copy an app"
      },
      "CreateTableRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name for the table.",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "description": "The description for the table..."
          },
          "singleRecordName": {
            "type": "string",
            "description": "The singular noun for records..."
          },
          "pluralRecordName": {
            "type": "string",
            "description": "The plural noun for records..."
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": true,
        "description": "Create a table"
      },
      "UpdateTableRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The updated name of the table."
          },
          "description": {
            "type": "string",
            "description": "The updated description for the table."
          }
        },
        "required": [],
        "additionalProperties": true,
        "description": "Update a table"
      },
      "CreateRelationshipRequest": {
        "type": "object",
        "properties": {
          "parentTableId": {
            "type": "string",
            "description": "The parent table id for the relationship."
          },
          "foreignKeyField": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "The label for the foreign key field."
              }
            },
            "additionalProperties": true
          },
          "lookupFieldIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Array of field ids..."
          },
          "summaryFields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "summaryFid": {
                  "type": "number",
                  "description": "The field id to summarize."
                },
                "label": {
                  "type": "string",
                  "description": "The label for the summary field."
                },
                "accumulationType": {
                  "type": "string",
                  "enum": [
                    "AVG",
                    "SUM",
                    "MAX",
                    "MIN",
                    "STD-DEV",
                    "COUNT",
                    "COMBINED-TEXT",
                    "COMBINED-USER",
                    "DISTINCT-COUNT"
                  ],
                  "description": "The accumulation type..."
                },
                "where": {
                  "type": "string",
                  "description": "The filter..."
                }
              },
              "required": [
                "accumulationType"
              ],
              "additionalProperties": true
            },
            "description": "Array of summary field objects..."
          }
        },
        "required": [
          "parentTableId"
        ],
        "additionalProperties": false,
        "description": "Create a relationship"
      },
      "UpdateRelationshipRequest": {
        "type": "object",
        "properties": {
          "parentTableId": {
            "type": "string",
            "description": "The updated parent table id..."
          },
          "foreignKeyField": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "The updated label..."
              }
            },
            "additionalProperties": true
          },
          "lookupFieldIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Updated array of field ids..."
          },
          "summaryFields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "summaryFid": {
                  "type": "number"
                },
                "label": {
                  "type": "string"
                },
                "accumulationType": {
                  "type": "string",
                  "enum": [
                    "AVG",
                    "SUM",
                    "MAX",
                    "MIN",
                    "STD-DEV",
                    "COUNT",
                    "COMBINED-TEXT",
                    "COMBINED-USER",
                    "DISTINCT-COUNT"
                  ]
                },
                "where": {
                  "type": "string"
                }
              },
              "required": [
                "accumulationType"
              ],
              "additionalProperties": true
            }
          }
        },
        "required": [],
        "additionalProperties": false,
        "description": "Update a relationship"
      },
      "CreateFieldRequest": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "The label of the field"
          },
          "fieldType": {
            "type": "string",
            "description": "The type of the field",
            "enum": [
              "text",
              "text-multiple-choice",
              "text-multi-line",
              "rich-text",
              "numeric",
              "currency",
              "percent",
              "rating",
              "date",
              "date-time",
              "time-of-day",
              "duration",
              "checkbox",
              "user",
              "multi-user",
              "address",
              "email",
              "phone",
              "url",
              "file",
              "record-id"
            ]
          },
          "fieldHelp": {
            "type": "string",
            "description": "Help text for the field",
            "nullable": true
          },
          "addToForms": {
            "type": "boolean",
            "description": "Whether to add the field to forms",
            "nullable": true
          },
          "permissions": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Permission"
                }
              },
              {
                "type": "null"
              }
            ],
            "description": "Custom permissions for the field"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the field is required",
            "nullable": true
          },
          "unique": {
            "type": "boolean",
            "description": "Whether the field must have unique values",
            "nullable": true
          },
          "noWrap": {
            "type": "boolean",
            "description": "Whether text wrapping is disabled",
            "nullable": true
          },
          "bold": {
            "type": "boolean",
            "description": "Whether the field is bolded",
            "nullable": true
          },
          "appearsByDefault": {
            "type": "boolean",
            "description": "Whether the field appears by default in reports",
            "nullable": true
          },
          "findEnabled": {
            "type": "boolean",
            "description": "Whether the field is searchable",
            "nullable": true
          },
          "doesDataCopy": {
            "type": "boolean",
            "description": "Whether the field copies data",
            "nullable": true
          },
          "audited": {
            "type": "boolean",
            "description": "Whether changes to the field are audited",
            "nullable": true
          }
        },
        "required": [
          "label",
          "fieldType"
        ],
        "description": "Create a field"
      },
      "DeleteFieldsRequest": {
        "type": "object",
        "properties": {
          "fieldIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "fieldIds"
        ],
        "description": "Delete field(s)"
      },
      "UpdateFieldRequest": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "The label of the field"
          },
          "fieldType": {
            "type": "string",
            "description": "The type of the field",
            "enum": [
              "text",
              "text-multiple-choice",
              "text-multi-line",
              "rich-text",
              "numeric",
              "currency",
              "percent",
              "rating",
              "date",
              "date-time",
              "time-of-day",
              "duration",
              "checkbox",
              "user",
              "multi-user",
              "address",
              "email",
              "phone",
              "url",
              "file",
              "record-id"
            ]
          },
          "fieldHelp": {
            "type": "string",
            "description": "Help text for the field",
            "nullable": true
          },
          "addToForms": {
            "type": "boolean",
            "description": "Whether to add the field to forms",
            "nullable": true
          },
          "permissions": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Permission"
                }
              },
              {
                "type": "null"
              }
            ],
            "description": "Custom permissions for the field"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the field is required",
            "nullable": true
          },
          "unique": {
            "type": "boolean",
            "description": "Whether the field must have unique values",
            "nullable": true
          },
          "noWrap": {
            "type": "boolean",
            "description": "Whether text wrapping is disabled",
            "nullable": true
          },
          "bold": {
            "type": "boolean",
            "description": "Whether the field is bolded",
            "nullable": true
          },
          "appearsByDefault": {
            "type": "boolean",
            "description": "Whether the field appears by default in reports",
            "nullable": true
          },
          "findEnabled": {
            "type": "boolean",
            "description": "Whether the field is searchable",
            "nullable": true
          },
          "doesDataCopy": {
            "type": "boolean",
            "description": "Whether the field copies data",
            "nullable": true
          },
          "audited": {
            "type": "boolean",
            "description": "Whether changes to the field are audited",
            "nullable": true
          }
        },
        "required": [
          "label",
          "fieldType"
        ],
        "description": "Update a field"
      },
      "UpsertRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Record"
            }
          },
          "to": {
            "type": "string"
          },
          "fieldsToReturn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "from"
        ],
        "description": "Insert/Update record(s)"
      },
      "DeleteRecordsRequest": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string"
          },
          "where": {
            "type": "string"
          }
        },
        "required": [
          "from"
        ],
        "description": "Delete record(s)"
      },
      "RunQueryRequest": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "The table identifier."
          },
          "select": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "An array of field ids..."
          },
          "where": {
            "type": "string",
            "description": "The filter, using the Quickbase query language..."
          },
          "sortBy": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fieldId": {
                  "type": "integer"
                },
                "order": {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC",
                    "equal-values"
                  ]
                }
              },
              "required": [
                "fieldId",
                "order"
              ]
            },
            "description": "An array of field IDs and sort directions..."
          },
          "groupBy": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fieldId": {
                  "type": "integer"
                },
                "grouping": {
                  "type": "string",
                  "enum": [
                    "equal-values"
                  ]
                }
              },
              "required": [
                "fieldId",
                "grouping"
              ]
            },
            "description": "An array that contains the fields to group the records by."
          },
          "options": {
            "type": "object",
            "properties": {
              "skip": {
                "type": "integer"
              },
              "top": {
                "type": "integer"
              },
              "compareWithAppLocalTime": {
                "type": "boolean"
              }
            },
            "description": "Additional query options."
          }
        },
        "required": [
          "from"
        ],
        "description": "Query for data"
      },
      "GetUsersRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userIds"
        ],
        "description": "Get users"
      },
      "DenyUsersRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userIds"
        ],
        "description": "Deny users"
      },
      "DenyUsersAndGroupsRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userIds"
        ],
        "description": "Deny and remove users from groups"
      },
      "UndenyUsersRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userIds"
        ],
        "description": "Undeny users"
      },
      "AddMembersToGroupRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userIds"
        ],
        "description": "Add members"
      },
      "RemoveMembersFromGroupRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userIds"
        ],
        "description": "Remove members"
      },
      "AddManagersToGroupRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userIds"
        ],
        "description": "Add managers"
      },
      "RemoveManagersFromGroupRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userIds"
        ],
        "description": "Remove managers"
      },
      "AddSubgroupsToGroupRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userIds"
        ],
        "description": "Add child groups"
      },
      "RemoveSubgroupsFromGroupRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userIds"
        ],
        "description": "Remove child groups"
      },
      "Record": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "required": [
            "value"
          ]
        },
        "description": "A generic QuickBase record with field ID-value pairs"
      },
      "Permission": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "The role name"
          },
          "permissionType": {
            "type": "string",
            "description": "Permission type (e.g., View, Modify)"
          },
          "roleId": {
            "type": "integer",
            "description": "The role identifier"
          }
        },
        "required": [
          "role",
          "permissionType",
          "roleId"
        ],
        "description": "A single permission entry for a field"
      },
      "createApp200Response": {
        "x-amf-examples": {
          "Simple Application": {
            "created": "2020-03-27T18:34:12Z",
            "dateFormat": "MM-DD-YYYY",
            "description": "My testing app",
            "hasEveryoneOnTheInternet": true,
            "id": "bpqe82s1",
            "memoryInfo": {
              "estMemory": 1,
              "estMemoryInclDependentApps": 2
            },
            "name": "Testing App",
            "securityProperties": {
              "allowClone": false,
              "allowExport": false,
              "enableAppTokens": false,
              "hideFromPublic": false,
              "mustBeRealmApproved": true,
              "useIPFilter": true
            },
            "timeZone": "(UTC-08:00) Pacific Time (US & Canada)",
            "updated": "2020-04-03T19:12:20Z",
            "dataClassification": "Confidential"
          },
          "Application with defined variables": {
            "description": "This examples shows the response of an application that contains one or more variables.",
            "value": {
              "created": "2020-03-27T18:34:12Z",
              "dateFormat": "MM-DD-YYYY",
              "description": "My testing app",
              "hasEveryoneOnTheInternet": true,
              "id": "bpqe82s1",
              "memoryInfo": {
                "estMemory": 1,
                "estMemoryInclDependentApps": 2
              },
              "name": "Testing App",
              "securityProperties": {
                "allowClone": false,
                "allowExport": false,
                "enableAppTokens": false,
                "hideFromPublic": false,
                "mustBeRealmApproved": true,
                "useIPFilter": true
              },
              "timeZone": "(UTC-08:00) Pacific Time (US & Canada)",
              "variables": [
                {
                  "name": "Project End Date",
                  "value": "7-16-2025"
                },
                {
                  "name": "Project Manager Email",
                  "value": "p.diaz@company.com"
                }
              ],
              "updated": "2020-04-03T19:12:20Z"
            }
          }
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "description": "The app name. You are allowed to create multiple apps with the same name, in the same realm, because they will have different dbid values. We urge you to be careful about doing this.",
            "type": "string"
          },
          "description": {
            "description": "The description for the app. If this property is left out, the app description will be blank.",
            "type": "string"
          },
          "created": {
            "description": "The time and date the app was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "updated": {
            "description": "The time and date the app was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "dateFormat": {
            "description": "A description of the format used when displaying date values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the API Guide for how time values are returned in API calls. See [About Localizing Dates](https://help.quickbase.com/user-assistance/about_localizing_dates_numbers.html) to set the app’s date format.",
            "type": "string"
          },
          "timeZone": {
            "description": "A description of the time zone used when displaying time values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the portal for how time values are returned in API calls. See [Set the Time Zone for Both the Application and the Account](https://help.quickbase.com/user-assistance/application_local_timezone.html) to set the application’s time zone.",
            "type": "string"
          },
          "memoryInfo": {
            "type": "object",
            "description": "Application memory info",
            "additionalProperties": false,
            "properties": {
              "estMemory": {
                "type": "number",
                "description": "The estimated memory of this application in gigabytes"
              },
              "estMemoryInclDependentApps": {
                "type": "number",
                "description": "The estimated memory of this application and all dependent applications in gigabytes"
              }
            }
          },
          "id": {
            "description": "The unique identifier for this application.",
            "type": "string"
          },
          "hasEveryoneOnTheInternet": {
            "description": "Indicates whether app includes Everyone On The Internet access. See [Sharing apps with Everyone on the Internet (EOTI).](https://help.quickbase.com/user-assistance/share_with_everyone_on_internet.html)",
            "type": "boolean"
          },
          "variables": {
            "description": "The app variables. See [About Application Variables](https://help.quickbase.com/user-assistance/variables.html)",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "name": {
                  "description": "Variable name.",
                  "type": "string"
                },
                "value": {
                  "description": "Variable value.",
                  "type": "string"
                }
              }
            }
          },
          "dataClassification": {
            "description": "The Data Classification label assigned to the application. If Data Classification is not turned on, this will not be returned. If Data Classification is turned on, but application is not labeled, we return “None\".  Data Classification labels can be added in the Admin Console by a Realm Administrator for Platform+ plans.",
            "type": "string"
          },
          "securityProperties": {
            "description": "Security properties of the application",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "allowClone": {
                "description": "Allow users who are not administrators to copy",
                "type": "boolean"
              },
              "allowExport": {
                "description": "Allow users who are not administrators to export data",
                "type": "boolean"
              },
              "hideFromPublic": {
                "description": "Hide from public application searches",
                "type": "boolean"
              },
              "enableAppTokens": {
                "description": "Require Application Tokens",
                "type": "boolean"
              },
              "useIPFilter": {
                "description": "Only users logging in from \"approved\" IP addresses may access this application",
                "type": "boolean"
              },
              "mustBeRealmApproved": {
                "description": "Only \"approved\" users may access this application",
                "type": "boolean"
              }
            }
          }
        }
      },
      "getApp200Response": {
        "x-amf-examples": {
          "Simple Application": {
            "ancestorId": "bqhskthaq",
            "created": "2020-03-27T18:34:12Z",
            "dateFormat": "MM-DD-YYYY",
            "description": "My testing app",
            "hasEveryoneOnTheInternet": true,
            "memoryInfo": {
              "estMemory": 1,
              "estMemoryInclDependentApps": 2
            },
            "id": "bpqe82s1",
            "name": "Testing App",
            "securityProperties": {
              "allowClone": false,
              "allowExport": false,
              "enableAppTokens": false,
              "hideFromPublic": false,
              "mustBeRealmApproved": true,
              "useIPFilter": true
            },
            "timeZone": "(UTC-08:00) Pacific Time (US & Canada)",
            "updated": "2020-04-03T19:12:20Z",
            "dataClassification": "Confidential"
          },
          "Application with defined variables": {
            "description": "This examples shows the response of an application that contains one or more variables.",
            "value": {
              "ancestorId": "bqhskthaq",
              "created": "2020-03-27T18:34:12Z",
              "dateFormat": "MM-DD-YYYY",
              "description": "My testing app",
              "hasEveryoneOnTheInternet": true,
              "id": "bpqe82s1",
              "memoryInfo": {
                "estMemory": 1,
                "estMemoryInclDependentApps": 2
              },
              "name": "Testing App",
              "securityProperties": {
                "allowClone": false,
                "allowExport": false,
                "enableAppTokens": false,
                "hideFromPublic": false,
                "mustBeRealmApproved": true,
                "useIPFilter": true
              },
              "timeZone": "(UTC-08:00) Pacific Time (US & Canada)",
              "variables": [
                {
                  "name": "Project End Date",
                  "value": "7-16-2025"
                },
                {
                  "name": "Project Manager Email",
                  "value": "p.diaz@company.com"
                }
              ],
              "updated": "2020-04-03T19:12:20Z"
            }
          }
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "name"
        ],
        "properties": {
          "ancestorId": {
            "description": "The id of the app from which this app was copied",
            "type": "string"
          },
          "name": {
            "description": "The app name. You are allowed to create multiple apps with the same name, in the same realm, because they will have different dbid values. We urge you to be careful about doing this.",
            "type": "string"
          },
          "description": {
            "description": "The description for the app. If this property is left out, the app description will be blank.",
            "type": "string"
          },
          "created": {
            "description": "The time and date the app was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "updated": {
            "description": "The time and date the app was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "dateFormat": {
            "description": "A description of the format used when displaying date values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the API Guide for how time values are returned in API calls. See [About Localizing Dates](https://help.quickbase.com/user-assistance/about_localizing_dates_numbers.html) to set the app’s date format.",
            "type": "string"
          },
          "timeZone": {
            "description": "A description of the time zone used when displaying time values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the portal for how time values are returned in API calls. See [Set the Time Zone for Both the Application and the Account](https://help.quickbase.com/user-assistance/application_local_timezone.html) to set the application’s time zone.",
            "type": "string"
          },
          "memoryInfo": {
            "type": "object",
            "description": "Application memory info",
            "additionalProperties": false,
            "properties": {
              "estMemory": {
                "type": "number",
                "description": "The estimated memory of this application in gigabytes"
              },
              "estMemoryInclDependentApps": {
                "type": "number",
                "description": "The estimated memory of this application and all dependent applications in gigabytes"
              }
            }
          },
          "id": {
            "description": "The unique identifier for this application.",
            "type": "string"
          },
          "hasEveryoneOnTheInternet": {
            "description": "Indicates whether app includes Everyone On The Internet access. See [Sharing apps with Everyone on the Internet (EOTI).](https://help.quickbase.com/user-assistance/share_with_everyone_on_internet.html)",
            "type": "boolean"
          },
          "variables": {
            "description": "The app variables. See [About Application Variables](https://help.quickbase.com/user-assistance/variables.html)",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "name": {
                  "description": "Variable name.",
                  "type": "string"
                },
                "value": {
                  "description": "Variable value.",
                  "type": "string"
                }
              }
            }
          },
          "dataClassification": {
            "description": "The Data Classification label assigned to the application. If Data Classification is not turned on, this will not be returned. If Data Classification is turned on, but application is not labeled, we return “None\".  Data Classification labels can be added in the Admin Console by a Realm Administrator for Platform+ plans.",
            "type": "string"
          },
          "securityProperties": {
            "description": "Security properties of the application",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "allowClone": {
                "description": "Allow users who are not administrators to copy",
                "type": "boolean"
              },
              "allowExport": {
                "description": "Allow users who are not administrators to export data",
                "type": "boolean"
              },
              "hideFromPublic": {
                "description": "Hide from public application searches",
                "type": "boolean"
              },
              "enableAppTokens": {
                "description": "Require Application Tokens",
                "type": "boolean"
              },
              "useIPFilter": {
                "description": "Only users logging in from \"approved\" IP addresses may access this application",
                "type": "boolean"
              },
              "mustBeRealmApproved": {
                "description": "Only \"approved\" users may access this application",
                "type": "boolean"
              }
            }
          }
        }
      },
      "updateApp200Response": {
        "x-amf-examples": {
          "Simple Application": {
            "ancestorId": "bqhskthaq",
            "created": "2020-03-27T18:34:12Z",
            "dateFormat": "MM-DD-YYYY",
            "description": "My testing app",
            "hasEveryoneOnTheInternet": true,
            "memoryInfo": {
              "estMemory": 1,
              "estMemoryInclDependentApps": 2
            },
            "id": "bpqe82s1",
            "name": "Testing App",
            "securityProperties": {
              "allowClone": false,
              "allowExport": false,
              "enableAppTokens": false,
              "hideFromPublic": false,
              "mustBeRealmApproved": true,
              "useIPFilter": true
            },
            "timeZone": "(UTC-08:00) Pacific Time (US & Canada)",
            "updated": "2020-04-03T19:12:20Z",
            "dataClassification": "Confidential"
          },
          "Application with defined variables": {
            "description": "This examples shows the response of an application that contains one or more variables.",
            "value": {
              "ancestorId": "bqhskthaq",
              "created": "2020-03-27T18:34:12Z",
              "dateFormat": "MM-DD-YYYY",
              "description": "My testing app",
              "hasEveryoneOnTheInternet": true,
              "id": "bpqe82s1",
              "memoryInfo": {
                "estMemory": 1,
                "estMemoryInclDependentApps": 2
              },
              "name": "Testing App",
              "securityProperties": {
                "allowClone": false,
                "allowExport": false,
                "enableAppTokens": false,
                "hideFromPublic": false,
                "mustBeRealmApproved": true,
                "useIPFilter": true
              },
              "timeZone": "(UTC-08:00) Pacific Time (US & Canada)",
              "variables": [
                {
                  "name": "Project End Date",
                  "value": "7-16-2025"
                },
                {
                  "name": "Project Manager Email",
                  "value": "p.diaz@company.com"
                }
              ],
              "updated": "2020-04-03T19:12:20Z"
            }
          }
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "name"
        ],
        "properties": {
          "ancestorId": {
            "description": "The id of the app from which this app was copied",
            "type": "string"
          },
          "name": {
            "description": "The app name. You are allowed to create multiple apps with the same name, in the same realm, because they will have different dbid values. We urge you to be careful about doing this.",
            "type": "string"
          },
          "description": {
            "description": "The description for the app. If this property is left out, the app description will be blank.",
            "type": "string"
          },
          "created": {
            "description": "The time and date the app was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "updated": {
            "description": "The time and date the app was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "dateFormat": {
            "description": "A description of the format used when displaying date values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the API Guide for how time values are returned in API calls. See [About Localizing Dates](https://help.quickbase.com/user-assistance/about_localizing_dates_numbers.html) to set the app’s date format.",
            "type": "string"
          },
          "timeZone": {
            "description": "A description of the time zone used when displaying time values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the portal for how time values are returned in API calls. See [Set the Time Zone for Both the Application and the Account](https://help.quickbase.com/user-assistance/application_local_timezone.html) to set the application’s time zone.",
            "type": "string"
          },
          "memoryInfo": {
            "description": "Application memory info",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "estMemory": {
                "type": "number",
                "description": "The estimated memory of this application in gigabytes"
              },
              "estMemoryInclDependentApps": {
                "type": "number",
                "description": "The estimated memory of this application and all dependent applications in gigabytes"
              }
            }
          },
          "id": {
            "description": "The unique identifier for this application.",
            "type": "string"
          },
          "hasEveryoneOnTheInternet": {
            "description": "Indicates whether app includes Everyone On The Internet access. See [Sharing apps with Everyone on the Internet (EOTI).](https://help.quickbase.com/user-assistance/share_with_everyone_on_internet.html)",
            "type": "boolean"
          },
          "variables": {
            "description": "The app variables. See [About Application Variables](https://help.quickbase.com/user-assistance/variables.html)",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "name": {
                  "description": "Variable name.",
                  "type": "string"
                },
                "value": {
                  "description": "Variable value.",
                  "type": "string"
                }
              }
            }
          },
          "dataClassification": {
            "description": "The Data Classification label assigned to the application. If Data Classification is not turned on, this will not be returned. If Data Classification is turned on, but application is not labeled, we return “None\".  Data Classification labels can be added in the Admin Console by a Realm Administrator for Platform+ plans.",
            "type": "string"
          },
          "securityProperties": {
            "description": "Security properties of the application",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "allowClone": {
                "description": "Allow users who are not administrators to copy",
                "type": "boolean"
              },
              "allowExport": {
                "description": "Allow users who are not administrators to export data",
                "type": "boolean"
              },
              "hideFromPublic": {
                "description": "Hide from public application searches",
                "type": "boolean"
              },
              "enableAppTokens": {
                "description": "Require Application Tokens",
                "type": "boolean"
              },
              "useIPFilter": {
                "description": "Only users logging in from \"approved\" IP addresses may access this application",
                "type": "boolean"
              },
              "mustBeRealmApproved": {
                "description": "Only \"approved\" users may access this application",
                "type": "boolean"
              }
            }
          }
        }
      },
      "deleteApp200Response": {
        "example": {
          "deletedAppId": "bqhskthaq"
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "deletedAppId": {
            "description": "An ID of deleted application.",
            "type": "string"
          }
        }
      },
      "getAppEvents200Response": {
        "example": [
          {
            "type": "qb-action",
            "owner": {
              "email": "jsmith@quickbase.com",
              "id": "123456.ab1s",
              "name": "Juliet Smith",
              "userName": "jsmith"
            },
            "isActive": true,
            "tableId": "bqwriv8bw",
            "name": "Quick Base Action"
          },
          {
            "type": "webhook",
            "owner": {
              "email": "tanderson@quickbase.com",
              "id": "654321.ab1s",
              "name": "Thomas A. Anderson",
              "userName": "tanderson"
            },
            "isActive": false,
            "tableId": "bqwriv8bw",
            "name": "Webhook"
          },
          {
            "type": "email-notification",
            "owner": {
              "email": "jsmith@quickbase.com",
              "id": "123456.ab1s",
              "name": "Juliet Smith",
              "userName": "jsmith"
            },
            "isActive": false,
            "tableId": "bqwriv8bw",
            "name": "Notification"
          },
          {
            "type": "subscription",
            "owner": {
              "email": "tanderson@quickbase.com",
              "id": "654321.ab1s",
              "name": "Thomas A. Anderson",
              "userName": "tanderson"
            },
            "isActive": true,
            "tableId": "bqwriv8bw",
            "name": "Subscription"
          },
          {
            "type": "reminder",
            "owner": {
              "email": "jsmith@quickbase.com",
              "id": "123456.ab1s",
              "name": "Juliet Smith",
              "userName": "jsmith"
            },
            "isActive": true,
            "tableId": "bqwriv8bw",
            "name": "Reminder"
          },
          {
            "type": "automation",
            "owner": {
              "email": "tanderson@quickbase.com",
              "id": "654321.ab1s",
              "name": "Thomas A. Anderson",
              "userName": "tanderson"
            },
            "isActive": true,
            "tableId": "bqwriv8bw",
            "url": "https://realm.quickbase.com/ui/automation/qb/db/bqwria893/automations/70eecab9-634f-42d9-9037-9340a1a9e8ce"
          }
        ],
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "isActive": {
              "description": "Indication of whether current event is active.",
              "type": "boolean"
            },
            "type": {
              "description": "Type of an event.",
              "enum": [
                "webhook",
                "qb-action",
                "email-notification",
                "subscription",
                "reminder",
                "automation"
              ],
              "type": "string"
            },
            "name": {
              "description": "The name of the event. This property is not returned for automations.",
              "type": "string"
            },
            "url": {
              "description": "The url to automation that can be accessed from the browser. Only returned for automations.",
              "type": "string"
            },
            "owner": {
              "description": "The user that owns the event.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "name": {
                  "description": "User full name.",
                  "type": "string"
                },
                "id": {
                  "description": "User Id.",
                  "type": "string"
                },
                "email": {
                  "description": "User email.",
                  "type": "string"
                },
                "userName": {
                  "description": "User Name as updated in user properties. Optional, appears if not the same as user email.",
                  "type": "string"
                }
              }
            },
            "tableId": {
              "description": "The unique identifier of the table to which event belongs to.",
              "type": "string"
            }
          }
        }
      },
      "copyApp200Response": {
        "example": {
          "ancestorId": "bqhskthaq",
          "created": "2020-03-27T18:34:12Z",
          "dateFormat": "MM-DD-YYYY",
          "description": "My testing app",
          "hasEveryoneOnTheInternet": true,
          "id": "bpqe82s1",
          "name": "Testing App",
          "timeZone": "(UTC-08:00) Pacific Time (US & Canada)",
          "updated": "2020-04-03T19:12:20Z",
          "dataClassification": "None"
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "description": "The app name. You are allowed to create multiple apps with the same name, in the same realm, because they will have different dbid values. We urge you to be careful about doing this.",
            "type": "string"
          },
          "description": {
            "description": "The description for the app",
            "type": "string"
          },
          "created": {
            "description": "The time and date the app was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "updated": {
            "description": "The time and date the app was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "dateFormat": {
            "description": "A description of the format used when displaying date values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the API Guide for how time values are returned in API calls. See [About Localizing Dates](https://help.quickbase.com/user-assistance/about_localizing_dates_numbers.html) to set the app’s date format.",
            "type": "string"
          },
          "timeZone": {
            "description": "A description of the time zone used when displaying time values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the portal for how time values are returned in API calls. See [Set the Time Zone for Both the Application and the Account](https://help.quickbase.com/user-assistance/application_local_timezone.html) to set the application’s time zone.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for this application.",
            "type": "string"
          },
          "hasEveryoneOnTheInternet": {
            "description": "Indicates whether app includes Everyone On The Internet access. See [Sharing apps with Everyone on the Internet (EOTI).](https://help.quickbase.com/user-assistance/share_with_everyone_on_internet.html)",
            "type": "boolean"
          },
          "variables": {
            "description": "The app variables. See [About Application Variables](https://help.quickbase.com/user-assistance/variables.html)",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "name": {
                  "description": "Variable name.",
                  "type": "string"
                },
                "value": {
                  "description": "Variable value.",
                  "type": "string"
                }
              }
            }
          },
          "ancestorId": {
            "description": "The id of the app from which this app was copied",
            "type": "string"
          },
          "dataClassification": {
            "description": "The Data Classification label assigned to the application. If Data Classification is not turned on, this will not be returned. If Data Classification is turned on, but application is not labeled, we return “None\".  Data Classification labels can be added in the Admin Console by a Realm Administrator for Platform+ plans.",
            "type": "string"
          }
        }
      },
      "createTable200Response": {
        "example": {
          "name": "Example Table",
          "created": "2020-03-27T18:34:40Z",
          "updated": "2020-04-03T19:12:40Z",
          "alias": "_dbid_example_table",
          "description": "Table as an example.",
          "id": "bpqe82s0",
          "nextRecordId": 1,
          "nextFieldId": 1,
          "defaultSortFieldId": 2,
          "defaultSortOrder": "ASC",
          "keyFieldId": 3,
          "singleRecordName": "Example Record",
          "pluralRecordName": "Example Records",
          "sizeLimit": "150 MB",
          "spaceUsed": "17 MB",
          "spaceRemaining": "133 MB"
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "name": {
            "description": "The name of the table.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier (dbid) of the table.",
            "type": "string"
          },
          "alias": {
            "description": "The automatically-created table alias for the table.",
            "type": "string"
          },
          "description": {
            "description": "The description of the table, as configured by an application administrator.",
            "type": "string"
          },
          "created": {
            "description": "The time and date when the table was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "updated": {
            "description": "The time and date when the table schema or data was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "nextRecordId": {
            "description": "The incremental Record ID that will be used when the next record is created, as determined when the API call was ran.",
            "type": "integer"
          },
          "nextFieldId": {
            "description": "The incremental Field ID that will be used when the next field is created, as determined when the API call was ran.",
            "type": "integer"
          },
          "defaultSortFieldId": {
            "description": "The id of the field that is configured for default sorting.",
            "type": "integer"
          },
          "defaultSortOrder": {
            "description": "The configuration of the default sort order on the table.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string"
          },
          "keyFieldId": {
            "description": "The id of the field that is configured to be the key on this table, which is usually the Quickbase Record ID.",
            "type": "integer"
          },
          "singleRecordName": {
            "description": "The builder-configured singular noun of the table.",
            "type": "string"
          },
          "pluralRecordName": {
            "description": "The builder-configured plural noun of the table.",
            "type": "string"
          },
          "sizeLimit": {
            "description": "The size limit for the table.",
            "type": "string"
          },
          "spaceUsed": {
            "description": "The amount of space currently being used by the table.",
            "type": "string"
          },
          "spaceRemaining": {
            "description": "The amount of space remaining for use by the table.",
            "type": "string"
          }
        }
      },
      "getAppTables200Response": {
        "example": [
          {
            "name": "Example Table #0",
            "created": "2020-03-27T18:34:40Z",
            "updated": "2020-04-03T19:12:40Z",
            "alias": "_dbid_example_table_#0",
            "description": "Table zero as an example.",
            "id": "bpqe82s1",
            "nextRecordId": 1,
            "nextFieldId": 1,
            "defaultSortFieldId": 2,
            "defaultSortOrder": "ASC",
            "keyFieldId": 3,
            "singleRecordName": "Example Record",
            "pluralRecordName": "Example Records",
            "sizeLimit": "150 MB",
            "spaceUsed": "17 MB",
            "spaceRemaining": "133 MB"
          },
          {
            "name": "Example Table #2",
            "created": "2020-03-27T18:34:40Z",
            "updated": "2020-04-03T19:12:40Z",
            "alias": "_dbid_example_table_#2",
            "description": "Table two as an example.",
            "id": "bpqe82z1",
            "nextRecordId": 10,
            "nextFieldId": 111,
            "defaultSortFieldId": 12,
            "defaultSortOrder": "DESC",
            "keyFieldId": 33,
            "singleRecordName": "Another Record",
            "pluralRecordName": "More Records",
            "sizeLimit": "150 MB",
            "spaceUsed": "22 MB",
            "spaceRemaining": "128 MB"
          }
        ],
        "type": "array",
        "items": {
          "example": {
            "name": "Example Table",
            "created": "2020-03-27T18:34:40Z",
            "updated": "2020-04-03T19:12:40Z",
            "alias": "_dbid_example_table",
            "description": "Table as an example.",
            "id": "bpqe82s0",
            "nextRecordId": 1,
            "nextFieldId": 1,
            "defaultSortFieldId": 2,
            "defaultSortOrder": "ASC",
            "keyFieldId": 3,
            "singleRecordName": "Example Record",
            "pluralRecordName": "Example Records",
            "sizeLimit": "150 MB",
            "spaceUsed": "17 MB",
            "spaceRemaining": "133 MB"
          },
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "name": {
              "description": "The name of the table.",
              "type": "string"
            },
            "id": {
              "description": "The unique identifier (dbid) of the table.",
              "type": "string"
            },
            "alias": {
              "description": "The automatically-created table alias for the table.",
              "type": "string"
            },
            "description": {
              "description": "The description of the table, as configured by an application administrator.",
              "type": "string"
            },
            "created": {
              "description": "The time and date when the table was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
              "type": "string"
            },
            "updated": {
              "description": "The time and date when the table schema or data was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
              "type": "string"
            },
            "nextRecordId": {
              "description": "The incremental Record ID that will be used when the next record is created, as determined when the API call was ran.",
              "type": "integer"
            },
            "nextFieldId": {
              "description": "The incremental Field ID that will be used when the next field is created, as determined when the API call was ran.",
              "type": "integer"
            },
            "defaultSortFieldId": {
              "description": "The id of the field that is configured for default sorting.",
              "type": "integer"
            },
            "defaultSortOrder": {
              "description": "The configuration of the default sort order on the table.",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            },
            "keyFieldId": {
              "description": "The id of the field that is configured to be the key on this table, which is usually the Quickbase Record ID.",
              "type": "integer"
            },
            "singleRecordName": {
              "description": "The builder-configured singular noun of the table.",
              "type": "string"
            },
            "pluralRecordName": {
              "description": "The builder-configured plural noun of the table.",
              "type": "string"
            },
            "sizeLimit": {
              "description": "The size limit for the table.",
              "type": "string"
            },
            "spaceUsed": {
              "description": "The amount of space currently being used by the table.",
              "type": "string"
            },
            "spaceRemaining": {
              "description": "The amount of space remaining for use by the table.",
              "type": "string"
            }
          }
        }
      },
      "getTable200Response": {
        "example": {
          "name": "Example Table",
          "created": "2020-03-27T18:34:40Z",
          "updated": "2020-04-03T19:12:40Z",
          "alias": "_dbid_example_table",
          "description": "Table as an example.",
          "id": "bpqe82s0",
          "nextRecordId": 1,
          "nextFieldId": 1,
          "defaultSortFieldId": 2,
          "defaultSortOrder": "ASC",
          "keyFieldId": 3,
          "singleRecordName": "Example Record",
          "pluralRecordName": "Example Records",
          "sizeLimit": "150 MB",
          "spaceUsed": "17 MB",
          "spaceRemaining": "133 MB"
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "name": {
            "description": "The name of the table.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier (dbid) of the table.",
            "type": "string"
          },
          "alias": {
            "description": "The automatically-created table alias for the table.",
            "type": "string"
          },
          "description": {
            "description": "The description of the table, as configured by an application administrator.",
            "type": "string"
          },
          "created": {
            "description": "The time and date when the table was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "updated": {
            "description": "The time and date when the table schema or data was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "nextRecordId": {
            "description": "The incremental Record ID that will be used when the next record is created, as determined when the API call was ran.",
            "type": "integer"
          },
          "nextFieldId": {
            "description": "The incremental Field ID that will be used when the next field is created, as determined when the API call was ran.",
            "type": "integer"
          },
          "defaultSortFieldId": {
            "description": "The id of the field that is configured for default sorting.",
            "type": "integer"
          },
          "defaultSortOrder": {
            "description": "The configuration of the default sort order on the table.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string"
          },
          "keyFieldId": {
            "description": "The id of the field that is configured to be the key on this table, which is usually the Quickbase Record ID.",
            "type": "integer"
          },
          "singleRecordName": {
            "description": "The builder-configured singular noun of the table.",
            "type": "string"
          },
          "pluralRecordName": {
            "description": "The builder-configured plural noun of the table.",
            "type": "string"
          },
          "sizeLimit": {
            "description": "The size limit for the table.",
            "type": "string"
          },
          "spaceUsed": {
            "description": "The amount of space currently being used by the table.",
            "type": "string"
          },
          "spaceRemaining": {
            "description": "The amount of space remaining for use by the table.",
            "type": "string"
          }
        }
      },
      "updateTable200Response": {
        "example": {
          "name": "Example Table",
          "created": "2020-03-27T18:34:40Z",
          "updated": "2020-04-03T19:12:40Z",
          "alias": "_dbid_example_table",
          "description": "Table as an example.",
          "id": "bpqe82s0",
          "nextRecordId": 1,
          "nextFieldId": 1,
          "defaultSortFieldId": 2,
          "defaultSortOrder": "ASC",
          "keyFieldId": 3,
          "singleRecordName": "Example Record",
          "pluralRecordName": "Example Records",
          "sizeLimit": "150 MB",
          "spaceUsed": "17 MB",
          "spaceRemaining": "133 MB"
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "name": {
            "description": "The name of the table.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier (dbid) of the table.",
            "type": "string"
          },
          "alias": {
            "description": "The automatically-created table alias for the table.",
            "type": "string"
          },
          "description": {
            "description": "The description of the table, as configured by an application administrator.",
            "type": "string"
          },
          "created": {
            "description": "The time and date when the table was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "updated": {
            "description": "The time and date when the table schema or data was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "nextRecordId": {
            "description": "The incremental Record ID that will be used when the next record is created, as determined when the API call was ran.",
            "type": "integer"
          },
          "nextFieldId": {
            "description": "The incremental Field ID that will be used when the next field is created, as determined when the API call was ran.",
            "type": "integer"
          },
          "defaultSortFieldId": {
            "description": "The id of the field that is configured for default sorting.",
            "type": "integer"
          },
          "defaultSortOrder": {
            "description": "The configuration of the default sort order on the table.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string"
          },
          "keyFieldId": {
            "description": "The id of the field that is configured to be the key on this table, which is usually the Quickbase Record ID.",
            "type": "integer"
          },
          "singleRecordName": {
            "description": "The builder-configured singular noun of the table.",
            "type": "string"
          },
          "pluralRecordName": {
            "description": "The builder-configured plural noun of the table.",
            "type": "string"
          },
          "sizeLimit": {
            "description": "The size limit for the table.",
            "type": "string"
          },
          "spaceUsed": {
            "description": "The amount of space currently being used by the table.",
            "type": "string"
          },
          "spaceRemaining": {
            "description": "The amount of space remaining for use by the table.",
            "type": "string"
          }
        }
      },
      "deleteTable200Response": {
        "example": {
          "deletedTableId": "bck7gp3q2"
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "deletedTableId": {
            "description": "The deleted table id.",
            "type": "string"
          }
        }
      },
      "getRelationships200Response": {
        "example": {
          "metadata": {
            "numRelationships": 1,
            "skip": 0,
            "totalRelationships": 1
          },
          "relationships": [
            {
              "childTableId": "bqqjnwsuy",
              "foreignKeyField": {
                "id": 6,
                "label": "Related record",
                "type": "numeric"
              },
              "id": 6,
              "isCrossApp": false,
              "lookupFields": [
                {
                  "id": 3,
                  "label": "Name",
                  "type": "text"
                }
              ],
              "parentTableId": "bck7gp3q2",
              "summaryFields": [
                {
                  "id": 8,
                  "label": "my summary field",
                  "type": "numeric"
                }
              ]
            }
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "relationships"
        ],
        "properties": {
          "relationships": {
            "description": "The relationships in a table.",
            "type": "array",
            "items": {
              "example": {
                "id": 6,
                "foreignKeyField": {
                  "id": 6,
                  "label": "Related record",
                  "type": "numeric"
                },
                "lookupFields": [
                  {
                    "id": 7,
                    "label": "record - text field",
                    "type": "text"
                  }
                ],
                "isCrossApp": false,
                "parentTableId": "bck7gp3q2",
                "childTableId": "bck7gp3q3",
                "summaryFields": [
                  {
                    "id": 8,
                    "label": "Summary of Record ID#2",
                    "type": "numeric"
                  }
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "id",
                "parentTableId",
                "childTableId",
                "isCrossApp"
              ],
              "properties": {
                "id": {
                  "description": "The relationship id (foreign key field id).",
                  "type": "integer"
                },
                "parentTableId": {
                  "description": "The parent table id of the relationship.",
                  "type": "string"
                },
                "childTableId": {
                  "description": "The child table id of the relationship.",
                  "type": "string"
                },
                "foreignKeyField": {
                  "description": "The foreign key field information.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "id": {
                      "description": "Field id.",
                      "type": "integer"
                    },
                    "label": {
                      "description": "Field label.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Field type.",
                      "type": "string"
                    }
                  }
                },
                "isCrossApp": {
                  "description": "Whether this is a cross-app relationship.",
                  "type": "boolean"
                },
                "lookupFields": {
                  "description": "The lookup fields array.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "id": {
                        "description": "Field id.",
                        "type": "integer"
                      },
                      "label": {
                        "description": "Field label.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Field type.",
                        "type": "string"
                      }
                    }
                  }
                },
                "summaryFields": {
                  "description": "The summary fields array.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "id": {
                        "description": "Field id.",
                        "type": "integer"
                      },
                      "label": {
                        "description": "Field label.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Field type.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "metadata": {
            "description": "Additional information about the results that may be helpful.",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "skip": {
                "description": "The number of relationships to skip.",
                "type": "integer"
              },
              "totalRelationships": {
                "description": "The total number of relationships.",
                "type": "integer"
              },
              "numRelationships": {
                "description": "The number of relationships in the current response object.",
                "type": "integer"
              }
            }
          }
        }
      },
      "createRelationship200Response": {
        "example": {
          "id": 6,
          "foreignKeyField": {
            "id": 6,
            "label": "Related record",
            "type": "numeric"
          },
          "lookupFields": [
            {
              "id": 7,
              "label": "record - text field",
              "type": "text"
            }
          ],
          "isCrossApp": false,
          "parentTableId": "bck7gp3q2",
          "childTableId": "bck7gp3q3",
          "summaryFields": [
            {
              "id": 8,
              "label": "Summary of Record ID#2",
              "type": "numeric"
            }
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "id",
          "parentTableId",
          "childTableId",
          "isCrossApp"
        ],
        "properties": {
          "id": {
            "description": "The relationship id (foreign key field id).",
            "type": "integer"
          },
          "parentTableId": {
            "description": "The parent table id of the relationship.",
            "type": "string"
          },
          "childTableId": {
            "description": "The child table id of the relationship.",
            "type": "string"
          },
          "foreignKeyField": {
            "description": "The foreign key field information.",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "id": {
                "description": "Field id.",
                "type": "integer"
              },
              "label": {
                "description": "Field label.",
                "type": "string"
              },
              "type": {
                "description": "Field type.",
                "type": "string"
              }
            }
          },
          "isCrossApp": {
            "description": "Whether this is a cross-app relationship.",
            "type": "boolean"
          },
          "lookupFields": {
            "description": "The lookup fields array.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "description": "Field id.",
                  "type": "integer"
                },
                "label": {
                  "description": "Field label.",
                  "type": "string"
                },
                "type": {
                  "description": "Field type.",
                  "type": "string"
                }
              }
            }
          },
          "summaryFields": {
            "description": "The summary fields array.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "description": "Field id.",
                  "type": "integer"
                },
                "label": {
                  "description": "Field label.",
                  "type": "string"
                },
                "type": {
                  "description": "Field type.",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "updateRelationship200Response": {
        "example": {
          "id": 6,
          "foreignKeyField": {
            "id": 6,
            "label": "Related record",
            "type": "numeric"
          },
          "lookupFields": [
            {
              "id": 7,
              "label": "record - text field",
              "type": "text"
            }
          ],
          "isCrossApp": false,
          "parentTableId": "bck7gp3q2",
          "childTableId": "bck7gp3q3",
          "summaryFields": [
            {
              "id": 8,
              "label": "Summary of Record ID#2",
              "type": "numeric"
            }
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "id",
          "parentTableId",
          "childTableId",
          "isCrossApp"
        ],
        "properties": {
          "id": {
            "description": "The relationship id (foreign key field id).",
            "type": "integer"
          },
          "parentTableId": {
            "description": "The parent table id of the relationship.",
            "type": "string"
          },
          "childTableId": {
            "description": "The child table id of the relationship.",
            "type": "string"
          },
          "foreignKeyField": {
            "description": "The foreign key field information.",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "id": {
                "description": "Field id.",
                "type": "integer"
              },
              "label": {
                "description": "Field label.",
                "type": "string"
              },
              "type": {
                "description": "Field type.",
                "type": "string"
              }
            }
          },
          "isCrossApp": {
            "description": "Whether this is a cross-app relationship.",
            "type": "boolean"
          },
          "lookupFields": {
            "description": "The lookup fields array.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "description": "Field id.",
                  "type": "integer"
                },
                "label": {
                  "description": "Field label.",
                  "type": "string"
                },
                "type": {
                  "description": "Field type.",
                  "type": "string"
                }
              }
            }
          },
          "summaryFields": {
            "description": "The summary fields array.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "description": "Field id.",
                  "type": "integer"
                },
                "label": {
                  "description": "Field label.",
                  "type": "string"
                },
                "type": {
                  "description": "Field type.",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "deleteRelationship200Response": {
        "example": {
          "relationshipId": 6
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "relationshipId"
        ],
        "properties": {
          "relationshipId": {
            "description": "The relationship id.",
            "type": "integer"
          }
        }
      },
      "getTableReports200Response": {
        "description": "This is simple example of report schema for more details please refer [Report types page](../reportTypes)",
        "type": "array",
        "items": {
          "example": {
            "value": {
              "id": "5",
              "name": "table-report",
              "type": "table",
              "description": "This is Table report.",
              "query": {
                "tableId": "bpweef42b",
                "filter": "{6.CT.'FilterByThisValue'}",
                "formulaFields": [
                  {
                    "id": -100,
                    "label": "NumericField",
                    "fieldType": "numeric",
                    "formula": "1+1",
                    "decimalPrecision": 4
                  }
                ],
                "fields": [
                  7
                ],
                "sortBy": [
                  {
                    "fieldId": 28,
                    "order": "ASC"
                  },
                  {
                    "fieldId": 3,
                    "order": "ASC"
                  }
                ],
                "groupBy": [
                  {
                    "fieldId": 3,
                    "grouping": "equal-values"
                  }
                ]
              },
              "properties": {
                "displayOnlyNewOrChangedRecords": true,
                "columnProperties": [
                  {
                    "fieldId": -100,
                    "labelOverride": "Numeric Field Label"
                  }
                ]
              },
              "usedLast": "2020-09-20T20:23:00Z",
              "usedCount": 7
            }
          },
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "id": {
              "description": "The identifier of the report, unique to the table.",
              "type": "string"
            },
            "name": {
              "description": "The configured name of the report.",
              "type": "string"
            },
            "type": {
              "description": "The type of report in Quickbase (e.g., chart).",
              "type": "string"
            },
            "description": {
              "description": "The configured description of a report.",
              "type": "string"
            },
            "ownerId": {
              "description": "Optional, showed only for personal reports. The user ID of report owner.",
              "type": "integer"
            },
            "query": {
              "description": "The query definition as configured in Quickbase that gets executed when the report is run.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "tableId": {
                  "description": "The table identifier for the report.",
                  "type": "string"
                },
                "filter": {
                  "description": "Filter used to query for data.",
                  "type": "string"
                },
                "formulaFields": {
                  "description": "Calculated formula fields.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "id": {
                        "description": "Formula field identifier.",
                        "type": "integer"
                      },
                      "label": {
                        "description": "Formula field label.",
                        "type": "string"
                      },
                      "fieldType": {
                        "description": "Resulting formula value type.",
                        "enum": [
                          "rich-text",
                          "text",
                          "numeric",
                          "currency",
                          "percent",
                          "rating",
                          "date",
                          "timestamp",
                          "timeofday",
                          "duration",
                          "checkbox",
                          "phone",
                          "email",
                          "user",
                          "multiuser",
                          "url"
                        ],
                        "type": "string"
                      },
                      "formula": {
                        "description": "Formula text.",
                        "type": "string"
                      },
                      "decimalPrecision": {
                        "description": "For numeric formula the number precision.",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            "properties": {
              "description": "A list of properties specific to the report type. To see a detailed description of the properties for each report type, See [Report Types.](../reportTypes)",
              "type": "object",
              "additionalProperties": true
            },
            "usedLast": {
              "description": "The instant at which a report was last used.",
              "type": "string"
            },
            "usedCount": {
              "description": "The number of times a report has been used.",
              "type": "integer"
            }
          }
        }
      },
      "getReport200Response": {
        "example": {
          "value": {
            "id": "5",
            "name": "table-report",
            "type": "table",
            "description": "This is Table report.",
            "query": {
              "tableId": "bpweef42b",
              "filter": "{6.CT.'FilterByThisValue'}",
              "formulaFields": [
                {
                  "id": -100,
                  "label": "NumericField",
                  "fieldType": "numeric",
                  "formula": "1+1",
                  "decimalPrecision": 4
                }
              ],
              "fields": [
                7
              ],
              "sortBy": [
                {
                  "fieldId": 28,
                  "order": "ASC"
                },
                {
                  "fieldId": 3,
                  "order": "ASC"
                }
              ],
              "groupBy": [
                {
                  "fieldId": 3,
                  "grouping": "equal-values"
                }
              ]
            },
            "properties": {
              "displayOnlyNewOrChangedRecords": true,
              "columnProperties": [
                {
                  "fieldId": -100,
                  "labelOverride": "Numeric Field Label"
                }
              ]
            },
            "usedLast": "2020-09-20T20:23:00Z",
            "usedCount": 7
          }
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "description": "The identifier of the report, unique to the table.",
            "type": "string"
          },
          "name": {
            "description": "The configured name of the report.",
            "type": "string"
          },
          "type": {
            "description": "The type of report in Quickbase (e.g., chart).",
            "type": "string"
          },
          "description": {
            "description": "The configured description of a report.",
            "type": "string"
          },
          "ownerId": {
            "description": "Optional, showed only for personal reports. The user ID of report owner.",
            "type": "integer"
          },
          "query": {
            "description": "The query definition as configured in Quickbase that gets executed when the report is run.",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "tableId": {
                "description": "The table identifier for the report.",
                "type": "string"
              },
              "filter": {
                "description": "Filter used to query for data.",
                "type": "string"
              },
              "formulaFields": {
                "description": "Calculated formula fields.",
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "id": {
                      "description": "Formula field identifier.",
                      "type": "integer"
                    },
                    "label": {
                      "description": "Formula field label.",
                      "type": "string"
                    },
                    "fieldType": {
                      "description": "Resulting formula value type.",
                      "enum": [
                        "rich-text",
                        "text",
                        "numeric",
                        "currency",
                        "percent",
                        "rating",
                        "date",
                        "timestamp",
                        "timeofday",
                        "duration",
                        "checkbox",
                        "phone",
                        "email",
                        "user",
                        "multiuser",
                        "url"
                      ],
                      "type": "string"
                    },
                    "formula": {
                      "description": "Formula text.",
                      "type": "string"
                    },
                    "decimalPrecision": {
                      "description": "For numeric formula the number precision.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "description": "A list of properties specific to the report type. To see a detailed description of the properties for each report type, See [Report Types.](../reportTypes)",
            "type": "object",
            "additionalProperties": true
          },
          "usedLast": {
            "description": "The instant at which a report was last used.",
            "type": "string"
          },
          "usedCount": {
            "description": "The number of times a report has been used.",
            "type": "integer"
          }
        }
      },
      "runReport200Response": {
        "example": {
          "value": {
            "data": [
              {
                "6": {
                  "value": "Jamie Stein"
                },
                "7": {
                  "value": 10
                },
                "8": {
                  "value": "2019-12-18T08:00:00Z"
                }
              }
            ],
            "fields": [
              {
                "id": 6,
                "label": "Full Name",
                "type": "text"
              },
              {
                "id": 7,
                "label": "Amount",
                "labelOverride": "Total Amount",
                "type": "numeric"
              },
              {
                "id": 8,
                "label": "Date time",
                "type": "date time"
              }
            ],
            "metadata": {
              "totalRecords": 10,
              "numRecords": 1,
              "numFields": 3,
              "skip": 0,
              "top": 1
            }
          }
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "fields": {
            "description": "An array of objects that contains limited meta-data of each field displayed in the report. This assists in building logic that depends on field types and IDs.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "description": "Field id.",
                  "type": "integer"
                },
                "label": {
                  "description": "Field label.",
                  "type": "string"
                },
                "type": {
                  "description": "Field type.",
                  "type": "string"
                },
                "labelOverride": {
                  "description": "Column heading label override for field in report.",
                  "type": "string"
                }
              }
            }
          },
          "data": {
            "description": "An array of objects that either represents the record data or summarized values, depending on the report type.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "description": "Additional information about the results that may be helpful. Pagination may be needed if either you specify a smaller number of results to skip than is available, or if the API automatically returns fewer results. numRecords can be compared to totalRecords to determine if further pagination is needed.",
            "type": "object",
            "additionalProperties": true,
            "required": [
              "numFields",
              "totalRecords",
              "numRecords"
            ],
            "properties": {
              "skip": {
                "description": "The number of records to skip",
                "type": "integer"
              },
              "numFields": {
                "description": "The number of fields in each record in the current response object",
                "type": "integer"
              },
              "top": {
                "description": "If present, the maximum number of records requested by the caller",
                "type": "integer"
              },
              "totalRecords": {
                "description": "The total number of records in the result set",
                "type": "integer"
              },
              "numRecords": {
                "description": "The number of records in the current response object",
                "type": "integer"
              }
            }
          }
        }
      },
      "getFields200Response": {
        "example": [
          {
            "id": 1,
            "label": "Field1",
            "fieldType": "text",
            "noWrap": false,
            "bold": false,
            "required": false,
            "appearsByDefault": false,
            "findEnabled": false,
            "unique": false,
            "doesDataCopy": false,
            "fieldHelp": "field help",
            "audited": false,
            "properties": {
              "primaryKey": false,
              "foreignKey": false,
              "numLines": 1,
              "maxLength": 0,
              "appendOnly": false,
              "allowHTML": false,
              "allowMentions": false,
              "sortAsGiven": false,
              "carryChoices": true,
              "allowNewChoices": false,
              "formula": "",
              "defaultValue": ""
            },
            "permissions": [
              {
                "permissionType": "View",
                "role": "Viewer",
                "roleId": 10
              },
              {
                "permissionType": "None",
                "role": "Participant",
                "roleId": 11
              },
              {
                "permissionType": "Modify",
                "role": "Administrator",
                "roleId": 12
              }
            ]
          },
          {
            "id": 2,
            "label": "Numeric Field",
            "fieldType": "numeric",
            "appearsByDefault": true,
            "audited": false,
            "bold": false,
            "fieldHelp": "This is a numeric field",
            "findEnabled": false,
            "addToForms": true,
            "properties": {
              "numberFormat": 3,
              "decimalPlaces": 2,
              "doesAverage": true,
              "doesTotal": true,
              "blankIsZero": true
            },
            "permissions": [
              {
                "role": "Viewer",
                "permissionType": "View",
                "roleId": 10
              },
              {
                "role": "Participant",
                "permissionType": "Modify",
                "roleId": 11
              },
              {
                "role": "Administrator",
                "permissionType": "Modify",
                "roleId": 12
              }
            ]
          }
        ],
        "type": "array",
        "items": {
          "example": {
            "id": 123,
            "label": "Field1",
            "fieldType": "text",
            "mode": "",
            "noWrap": false,
            "bold": false,
            "required": false,
            "appearsByDefault": false,
            "findEnabled": false,
            "unique": false,
            "doesDataCopy": false,
            "fieldHelp": "field help",
            "audited": false,
            "properties": {
              "primaryKey": false,
              "foreignKey": false,
              "numLines": 1,
              "maxLength": 0,
              "appendOnly": false,
              "allowHTML": false,
              "allowMentions": false,
              "sortAsGiven": false,
              "carryChoices": true,
              "allowNewChoices": false,
              "formula": "",
              "defaultValue": ""
            },
            "permissions": [
              {
                "permissionType": "View",
                "role": "Viewer",
                "roleId": 10
              },
              {
                "permissionType": "None",
                "role": "Participant",
                "roleId": 11
              },
              {
                "permissionType": "Modify",
                "role": "Administrator",
                "roleId": 12
              }
            ]
          },
          "type": "object",
          "additionalProperties": true,
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "description": "The id of the field, unique to this table.",
              "type": "integer",
              "format": "int64"
            },
            "fieldType": {
              "description": "The type of field, as described [here](https://help.quickbase.com/user-assistance/field_types.html).",
              "type": "string"
            },
            "mode": {
              "description": "For derived fields, this will be 'lookup', 'summary', or 'formula', to indicate the type of derived field.  For non-derived fields, this will be blank.",
              "type": "string"
            },
            "label": {
              "description": "The label (name) of the field.",
              "type": "string"
            },
            "noWrap": {
              "description": "Indicates if the field is configured to not wrap when displayed in the product.",
              "type": "boolean"
            },
            "bold": {
              "description": "Indicates if the field is configured to display in bold in the product.",
              "type": "boolean"
            },
            "required": {
              "description": "Indicates if the field is marked required.",
              "type": "boolean"
            },
            "appearsByDefault": {
              "description": "Indicates if the field is marked as a default in reports.",
              "type": "boolean"
            },
            "findEnabled": {
              "description": "Indicates if the field is marked as searchable.",
              "type": "boolean"
            },
            "unique": {
              "description": "Indicates if the field is marked unique.",
              "type": "boolean"
            },
            "doesDataCopy": {
              "description": "Indicates if the field data will copy when a user copies the record.",
              "type": "boolean"
            },
            "fieldHelp": {
              "description": "The configured help text shown to users within the product.",
              "type": "string"
            },
            "audited": {
              "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs.",
              "type": "boolean"
            },
            "properties": {
              "description": "Additional properties for the field. Please see [Field type details](../fieldInfo) page for more details on the properties for each field type.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "allowMentions": {
                  "description": "If someone can @mention users in the rich text field to generate an email notification.",
                  "type": "boolean"
                },
                "comments": {
                  "description": "The comments entered on the field properties by an administrator.",
                  "type": "string"
                },
                "doesTotal": {
                  "description": "Whether this field totals in reports within the product.",
                  "type": "boolean"
                },
                "autoSave": {
                  "description": "Whether the link field will auto save.",
                  "type": "boolean"
                },
                "defaultValueLuid": {
                  "description": "Default user id value.",
                  "type": "integer"
                },
                "useI18NFormat": {
                  "description": "Whether phone numbers should be in E.164 standard international format.",
                  "type": "boolean"
                },
                "maxVersions": {
                  "description": "The maximum number of versions configured for a file attachment.",
                  "type": "integer"
                },
                "carryChoices": {
                  "description": "Whether the field should carry its multiple choice fields when copied.",
                  "type": "boolean"
                },
                "format": {
                  "description": "The format to display time.",
                  "type": "integer"
                },
                "maxLength": {
                  "description": "The maximum number of characters allowed for entry in Quickbase for this field.",
                  "type": "integer"
                },
                "linkText": {
                  "description": "The configured text value that replaces the URL that users see within the product.",
                  "type": "string"
                },
                "parentFieldId": {
                  "description": "The id of the parent composite field, when applicable.",
                  "type": "integer"
                },
                "displayTimezone": {
                  "description": "Indicates whether to display the timezone within the product.",
                  "type": "boolean"
                },
                "summaryTargetFieldId": {
                  "description": "The id of the field that is used to aggregate values from the child, when applicable. This displays 0 if the summary function doesn’t require a field selection (like count).",
                  "type": "integer"
                },
                "allowNewChoices": {
                  "description": "Indicates if users can add new choices to a selection list.",
                  "type": "boolean"
                },
                "masterChoiceFieldId": {
                  "description": "The id of the field that is the reference in the relationship.",
                  "type": "integer"
                },
                "defaultToday": {
                  "description": "Indicates if the field value is defaulted today for new records.",
                  "type": "boolean"
                },
                "units": {
                  "description": "The units label.",
                  "type": "string"
                },
                "lookupTargetFieldId": {
                  "description": "The id of the field that is the target on the master table for this lookup.",
                  "type": "integer"
                },
                "summaryFunction": {
                  "description": "The summary accumulation function type.",
                  "enum": [
                    "AVG",
                    "SUM",
                    "MAX",
                    "MIN",
                    "STD-DEV",
                    "COUNT",
                    "COMBINED-TEXT",
                    "COMBINED-USER",
                    "DISTINCT-COUNT"
                  ],
                  "type": "string"
                },
                "sourceFieldId": {
                  "description": "The id of the source field.",
                  "type": "integer"
                },
                "masterTableTag": {
                  "description": "The table alias for the master table in the relationship this field is part of.",
                  "type": "string"
                },
                "doesAverage": {
                  "description": "Whether this field averages in reports within the product.",
                  "type": "boolean"
                },
                "formula": {
                  "description": "The formula of the field as configured in Quickbase.",
                  "type": "string"
                },
                "decimalPlaces": {
                  "description": "The number of decimal places displayed in the product for this field.",
                  "type": "integer"
                },
                "defaultCountryCode": {
                  "description": "Controls the default country shown on international phone widgets on forms. Country code should be entered in the ISO 3166-1 alpha-2 format.",
                  "type": "string"
                },
                "seeVersions": {
                  "description": "Indicates if the user can see other versions, aside from the most recent, of a file attachment within the product.",
                  "type": "boolean"
                },
                "displayMonth": {
                  "description": "How to display months.",
                  "type": "string"
                },
                "numLines": {
                  "description": "The number of lines shown in Quickbase for this text field.",
                  "type": "integer"
                },
                "displayEmail": {
                  "description": "How the email is displayed.",
                  "type": "string"
                },
                "defaultKind": {
                  "description": "The user default type.",
                  "type": "string"
                },
                "coverText": {
                  "description": "An alternate user friendly text that can be used to display a link in the browser.",
                  "type": "string"
                },
                "currencySymbol": {
                  "description": "The current symbol used when displaying field values within the product.",
                  "type": "string"
                },
                "masterChoiceTableId": {
                  "description": "The id of the table that is the master in this relationship.",
                  "type": "string"
                },
                "targetFieldId": {
                  "description": "The id of the target field.",
                  "type": "integer"
                },
                "displayUser": {
                  "description": "The configured option for how users display within the product.",
                  "type": "string"
                },
                "blankIsZero": {
                  "description": "Whether a blank value is treated the same as 0 in calculations within the product.",
                  "type": "boolean"
                },
                "exact": {
                  "description": "Whether an exact match is required for a report link.",
                  "type": "boolean"
                },
                "startField": {
                  "description": "The start field id.",
                  "type": "integer"
                },
                "defaultDomain": {
                  "description": "Default email domain.",
                  "type": "string"
                },
                "defaultValue": {
                  "description": "The default value configured for a field when a new record is added.",
                  "type": "string"
                },
                "choicesLuid": {
                  "description": "List of user choices.",
                  "type": "array"
                },
                "abbreviate": {
                  "description": "Don't show the URL protocol when showing the URL.",
                  "type": "boolean"
                },
                "xmlTag": {
                  "description": "The field's xml tag.",
                  "type": "string"
                },
                "targetTableName": {
                  "description": "The field's target table name.",
                  "type": "string"
                },
                "numberFormat": {
                  "description": "The format used for displaying numeric values in the product (decimal, separators, digit group).",
                  "type": "integer"
                },
                "appearsAs": {
                  "description": "The link text, if empty, the url will be used as link text.",
                  "type": "string"
                },
                "width": {
                  "description": "The field's html input width in the product.",
                  "type": "integer"
                },
                "currencyFormat": {
                  "description": "The currency format used when displaying field values within the product.",
                  "enum": [
                    "left",
                    "right",
                    "middle"
                  ],
                  "type": "string"
                },
                "foreignKey": {
                  "description": "Indicates if the field is a foreign key (or reference field) in a relationship.",
                  "type": "boolean"
                },
                "displayDayOfWeek": {
                  "description": "Indicates whether to display the day of the week within the product.",
                  "type": "boolean"
                },
                "summaryReferenceFieldId": {
                  "description": "The id of the field that is the reference in the relationship for this summary.",
                  "type": "integer",
                  "format": "int64"
                },
                "commaStart": {
                  "description": "The number of digits before commas display in the product, when applicable.",
                  "type": "integer"
                },
                "choices": {
                  "description": "An array of entries that exist for a field that offers choices to the user.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "targetTableId": {
                  "description": "The id of the target table.",
                  "type": "string"
                },
                "displayRelative": {
                  "description": "Whether to display time as relative.",
                  "type": "boolean"
                },
                "compositeFields": {
                  "description": "An array of the fields that make up a composite field (e.g., address).",
                  "type": "array"
                },
                "displayCheckboxAsText": {
                  "description": "Indicates whether the checkbox values will be shown as text in reports.",
                  "type": "boolean"
                },
                "versionMode": {
                  "description": "Version modes for files. Keep all versions vs keep last version.",
                  "enum": [
                    "keepallversions",
                    "keeplastversions"
                  ],
                  "type": "string"
                },
                "displayTime": {
                  "description": "Indicates whether to display the time, in addition to the date.",
                  "type": "boolean"
                },
                "durationField": {
                  "description": "The duration field id.",
                  "type": "integer"
                },
                "snapFieldId": {
                  "description": "The id of the field that is used to snapshot values from, when applicable.",
                  "type": "integer"
                },
                "hours24": {
                  "description": "Indicates whether or not to display time in the 24-hour format within the product.",
                  "type": "boolean"
                },
                "sortAlpha": {
                  "description": "Whether to sort alphabetically, default sort is by record ID.",
                  "type": "boolean"
                },
                "sortAsGiven": {
                  "description": "Indicates if the listed entries sort as entered vs alphabetically.",
                  "type": "boolean"
                },
                "hasExtension": {
                  "description": "Whether this field has a phone extension.",
                  "type": "boolean"
                },
                "workWeek": {
                  "description": "The work week type.",
                  "type": "integer"
                },
                "useNewWindow": {
                  "description": "Indicates if the URL should open a new window when a user clicks it within the product.",
                  "type": "boolean"
                },
                "appendOnly": {
                  "description": "Whether this field is append only.",
                  "type": "boolean"
                },
                "displayAsLink": {
                  "description": "Indicates if a field that is part of the relationship should be shown as a hyperlink to the parent record within the product.",
                  "type": "boolean"
                },
                "allowHTML": {
                  "description": "Whether this field allows html.",
                  "type": "boolean"
                },
                "lookupReferenceFieldId": {
                  "description": "The id of the field that is the reference in the relationship for this lookup.",
                  "type": "integer"
                }
              }
            },
            "permissions": {
              "description": "Field Permissions for different roles.",
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "role": {
                    "description": "The role associated with a given permission for the field",
                    "type": "string"
                  },
                  "permissionType": {
                    "description": "The permission given to the role for this field",
                    "type": "string"
                  },
                  "roleId": {
                    "description": "The Id of the given role",
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "createField200Response": {
        "example": {
          "id": 123,
          "label": "Field1",
          "fieldType": "text",
          "mode": "",
          "noWrap": false,
          "bold": false,
          "required": false,
          "appearsByDefault": false,
          "findEnabled": false,
          "unique": false,
          "doesDataCopy": false,
          "fieldHelp": "field help",
          "audited": false,
          "properties": {
            "primaryKey": false,
            "foreignKey": false,
            "numLines": 1,
            "maxLength": 0,
            "appendOnly": false,
            "allowHTML": false,
            "allowMentions": false,
            "sortAsGiven": false,
            "carryChoices": true,
            "allowNewChoices": false,
            "formula": "",
            "defaultValue": ""
          },
          "permissions": [
            {
              "permissionType": "View",
              "role": "Viewer",
              "roleId": 10
            },
            {
              "permissionType": "None",
              "role": "Participant",
              "roleId": 11
            },
            {
              "permissionType": "Modify",
              "role": "Administrator",
              "roleId": 12
            }
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "description": "The id of the field, unique to this table.",
            "type": "integer",
            "format": "int64"
          },
          "fieldType": {
            "description": "The type of field, as described [here](https://help.quickbase.com/user-assistance/field_types.html).",
            "type": "string"
          },
          "mode": {
            "description": "For derived fields, this will be 'lookup', 'summary', or 'formula', to indicate the type of derived field.  For non-derived fields, this will be blank.",
            "type": "string"
          },
          "label": {
            "description": "The label (name) of the field.",
            "type": "string"
          },
          "noWrap": {
            "description": "Indicates if the field is configured to not wrap when displayed in the product.",
            "type": "boolean"
          },
          "bold": {
            "description": "Indicates if the field is configured to display in bold in the product.",
            "type": "boolean"
          },
          "required": {
            "description": "Indicates if the field is marked required.",
            "type": "boolean"
          },
          "appearsByDefault": {
            "description": "Indicates if the field is marked as a default in reports.",
            "type": "boolean"
          },
          "findEnabled": {
            "description": "Indicates if the field is marked as searchable.",
            "type": "boolean"
          },
          "unique": {
            "description": "Indicates if the field is marked unique.",
            "type": "boolean"
          },
          "doesDataCopy": {
            "description": "Indicates if the field data will copy when a user copies the record.",
            "type": "boolean"
          },
          "fieldHelp": {
            "description": "The configured help text shown to users within the product.",
            "type": "string"
          },
          "audited": {
            "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs.",
            "type": "boolean"
          },
          "properties": {
            "description": "Additional properties for the field. Please see [Field type details](../fieldInfo) page for more details on the properties for each field type.",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "allowMentions": {
                "description": "If someone can @mention users in the rich text field to generate an email notification.",
                "type": "boolean"
              },
              "comments": {
                "description": "The comments entered on the field properties by an administrator.",
                "type": "string"
              },
              "doesTotal": {
                "description": "Whether this field totals in reports within the product.",
                "type": "boolean"
              },
              "autoSave": {
                "description": "Whether the link field will auto save.",
                "type": "boolean"
              },
              "defaultValueLuid": {
                "description": "Default user id value.",
                "type": "integer"
              },
              "useI18NFormat": {
                "description": "Whether phone numbers should be in E.164 standard international format.",
                "type": "boolean"
              },
              "maxVersions": {
                "description": "The maximum number of versions configured for a file attachment.",
                "type": "integer"
              },
              "carryChoices": {
                "description": "Whether the field should carry its multiple choice fields when copied.",
                "type": "boolean"
              },
              "format": {
                "description": "The format to display time.",
                "type": "integer"
              },
              "maxLength": {
                "description": "The maximum number of characters allowed for entry in Quickbase for this field.",
                "type": "integer"
              },
              "linkText": {
                "description": "The configured text value that replaces the URL that users see within the product.",
                "type": "string"
              },
              "parentFieldId": {
                "description": "The id of the parent composite field, when applicable.",
                "type": "integer"
              },
              "displayTimezone": {
                "description": "Indicates whether to display the timezone within the product.",
                "type": "boolean"
              },
              "summaryTargetFieldId": {
                "description": "The id of the field that is used to aggregate values from the child, when applicable. This displays 0 if the summary function doesn’t require a field selection (like count).",
                "type": "integer"
              },
              "allowNewChoices": {
                "description": "Indicates if users can add new choices to a selection list.",
                "type": "boolean"
              },
              "masterChoiceFieldId": {
                "description": "The id of the field that is the reference in the relationship.",
                "type": "integer"
              },
              "defaultToday": {
                "description": "Indicates if the field value is defaulted today for new records.",
                "type": "boolean"
              },
              "units": {
                "description": "The units label.",
                "type": "string"
              },
              "lookupTargetFieldId": {
                "description": "The id of the field that is the target on the master table for this lookup.",
                "type": "integer"
              },
              "summaryFunction": {
                "description": "The summary accumulation function type.",
                "enum": [
                  "AVG",
                  "SUM",
                  "MAX",
                  "MIN",
                  "STD-DEV",
                  "COUNT",
                  "COMBINED-TEXT",
                  "COMBINED-USER",
                  "DISTINCT-COUNT"
                ],
                "type": "string"
              },
              "sourceFieldId": {
                "description": "The id of the source field.",
                "type": "integer"
              },
              "masterTableTag": {
                "description": "The table alias for the master table in the relationship this field is part of.",
                "type": "string"
              },
              "doesAverage": {
                "description": "Whether this field averages in reports within the product.",
                "type": "boolean"
              },
              "formula": {
                "description": "The formula of the field as configured in Quickbase.",
                "type": "string"
              },
              "decimalPlaces": {
                "description": "The number of decimal places displayed in the product for this field.",
                "type": "integer"
              },
              "defaultCountryCode": {
                "description": "Controls the default country shown on international phone widgets on forms. Country code should be entered in the ISO 3166-1 alpha-2 format.",
                "type": "string"
              },
              "seeVersions": {
                "description": "Indicates if the user can see other versions, aside from the most recent, of a file attachment within the product.",
                "type": "boolean"
              },
              "displayMonth": {
                "description": "How to display months.",
                "type": "string"
              },
              "numLines": {
                "description": "The number of lines shown in Quickbase for this text field.",
                "type": "integer"
              },
              "displayEmail": {
                "description": "How the email is displayed.",
                "type": "string"
              },
              "defaultKind": {
                "description": "The user default type.",
                "type": "string"
              },
              "coverText": {
                "description": "An alternate user friendly text that can be used to display a link in the browser.",
                "type": "string"
              },
              "currencySymbol": {
                "description": "The current symbol used when displaying field values within the product.",
                "type": "string"
              },
              "masterChoiceTableId": {
                "description": "The id of the table that is the master in this relationship.",
                "type": "string"
              },
              "targetFieldId": {
                "description": "The id of the target field.",
                "type": "integer"
              },
              "displayUser": {
                "description": "The configured option for how users display within the product.",
                "type": "string"
              },
              "blankIsZero": {
                "description": "Whether a blank value is treated the same as 0 in calculations within the product.",
                "type": "boolean"
              },
              "exact": {
                "description": "Whether an exact match is required for a report link.",
                "type": "boolean"
              },
              "startField": {
                "description": "The start field id.",
                "type": "integer"
              },
              "defaultDomain": {
                "description": "Default email domain.",
                "type": "string"
              },
              "defaultValue": {
                "description": "The default value configured for a field when a new record is added.",
                "type": "string"
              },
              "choicesLuid": {
                "description": "List of user choices.",
                "type": "array"
              },
              "abbreviate": {
                "description": "Don't show the URL protocol when showing the URL.",
                "type": "boolean"
              },
              "xmlTag": {
                "description": "The field's xml tag.",
                "type": "string"
              },
              "targetTableName": {
                "description": "The field's target table name.",
                "type": "string"
              },
              "numberFormat": {
                "description": "The format used for displaying numeric values in the product (decimal, separators, digit group).",
                "type": "integer"
              },
              "appearsAs": {
                "description": "The link text, if empty, the url will be used as link text.",
                "type": "string"
              },
              "width": {
                "description": "The field's html input width in the product.",
                "type": "integer"
              },
              "currencyFormat": {
                "description": "The currency format used when displaying field values within the product.",
                "enum": [
                  "left",
                  "right",
                  "middle"
                ],
                "type": "string"
              },
              "foreignKey": {
                "description": "Indicates if the field is a foreign key (or reference field) in a relationship.",
                "type": "boolean"
              },
              "displayDayOfWeek": {
                "description": "Indicates whether to display the day of the week within the product.",
                "type": "boolean"
              },
              "summaryReferenceFieldId": {
                "description": "The id of the field that is the reference in the relationship for this summary.",
                "type": "integer",
                "format": "int64"
              },
              "commaStart": {
                "description": "The number of digits before commas display in the product, when applicable.",
                "type": "integer"
              },
              "choices": {
                "description": "An array of entries that exist for a field that offers choices to the user.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "targetTableId": {
                "description": "The id of the target table.",
                "type": "string"
              },
              "displayRelative": {
                "description": "Whether to display time as relative.",
                "type": "boolean"
              },
              "compositeFields": {
                "description": "An array of the fields that make up a composite field (e.g., address).",
                "type": "array"
              },
              "displayCheckboxAsText": {
                "description": "Indicates whether the checkbox values will be shown as text in reports.",
                "type": "boolean"
              },
              "versionMode": {
                "description": "Version modes for files. Keep all versions vs keep last version.",
                "enum": [
                  "keepallversions",
                  "keeplastversions"
                ],
                "type": "string"
              },
              "displayTime": {
                "description": "Indicates whether to display the time, in addition to the date.",
                "type": "boolean"
              },
              "durationField": {
                "description": "The duration field id.",
                "type": "integer"
              },
              "snapFieldId": {
                "description": "The id of the field that is used to snapshot values from, when applicable.",
                "type": "integer"
              },
              "hours24": {
                "description": "Indicates whether or not to display time in the 24-hour format within the product.",
                "type": "boolean"
              },
              "sortAlpha": {
                "description": "Whether to sort alphabetically, default sort is by record ID.",
                "type": "boolean"
              },
              "sortAsGiven": {
                "description": "Indicates if the listed entries sort as entered vs alphabetically.",
                "type": "boolean"
              },
              "hasExtension": {
                "description": "Whether this field has a phone extension.",
                "type": "boolean"
              },
              "workWeek": {
                "description": "The work week type.",
                "type": "integer"
              },
              "useNewWindow": {
                "description": "Indicates if the URL should open a new window when a user clicks it within the product.",
                "type": "boolean"
              },
              "appendOnly": {
                "description": "Whether this field is append only.",
                "type": "boolean"
              },
              "displayAsLink": {
                "description": "Indicates if a field that is part of the relationship should be shown as a hyperlink to the parent record within the product.",
                "type": "boolean"
              },
              "allowHTML": {
                "description": "Whether this field allows html.",
                "type": "boolean"
              },
              "lookupReferenceFieldId": {
                "description": "The id of the field that is the reference in the relationship for this lookup.",
                "type": "integer"
              }
            }
          },
          "permissions": {
            "description": "Field Permissions for different roles.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "role": {
                  "description": "The role associated with a given permission for the field",
                  "type": "string"
                },
                "permissionType": {
                  "description": "The permission given to the role for this field",
                  "type": "string"
                },
                "roleId": {
                  "description": "The Id of the given role",
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "deleteFields200Response": {
        "example": {
          "deletedFieldIds": [
            6,
            8
          ],
          "errors": [
            "Error found with fid: 7"
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "deletedFieldIds",
          "errors"
        ],
        "properties": {
          "deletedFieldIds": {
            "description": "List of field ids to were deleted.",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "errors": {
            "description": "List of errors found.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "getField200Response": {
        "example": {
          "id": 123,
          "label": "Field1",
          "fieldType": "text",
          "mode": "",
          "noWrap": false,
          "bold": false,
          "required": false,
          "appearsByDefault": false,
          "findEnabled": false,
          "unique": false,
          "doesDataCopy": false,
          "fieldHelp": "field help",
          "audited": false,
          "properties": {
            "primaryKey": false,
            "foreignKey": false,
            "numLines": 1,
            "maxLength": 0,
            "appendOnly": false,
            "allowHTML": false,
            "allowMentions": false,
            "sortAsGiven": false,
            "carryChoices": true,
            "allowNewChoices": false,
            "formula": "",
            "defaultValue": ""
          },
          "permissions": [
            {
              "permissionType": "View",
              "role": "Viewer",
              "roleId": 10
            },
            {
              "permissionType": "None",
              "role": "Participant",
              "roleId": 11
            },
            {
              "permissionType": "Modify",
              "role": "Administrator",
              "roleId": 12
            }
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "description": "The id of the field, unique to this table.",
            "type": "integer",
            "format": "int64"
          },
          "fieldType": {
            "description": "The type of field, as described [here](https://help.quickbase.com/user-assistance/field_types.html).",
            "type": "string"
          },
          "mode": {
            "description": "For derived fields, this will be 'lookup', 'summary', or 'formula', to indicate the type of derived field.  For non-derived fields, this will be blank.",
            "type": "string"
          },
          "label": {
            "description": "The label (name) of the field.",
            "type": "string"
          },
          "noWrap": {
            "description": "Indicates if the field is configured to not wrap when displayed in the product.",
            "type": "boolean"
          },
          "bold": {
            "description": "Indicates if the field is configured to display in bold in the product.",
            "type": "boolean"
          },
          "required": {
            "description": "Indicates if the field is marked required.",
            "type": "boolean"
          },
          "appearsByDefault": {
            "description": "Indicates if the field is marked as a default in reports.",
            "type": "boolean"
          },
          "findEnabled": {
            "description": "Indicates if the field is marked as searchable.",
            "type": "boolean"
          },
          "unique": {
            "description": "Indicates if the field is marked unique.",
            "type": "boolean"
          },
          "doesDataCopy": {
            "description": "Indicates if the field data will copy when a user copies the record.",
            "type": "boolean"
          },
          "fieldHelp": {
            "description": "The configured help text shown to users within the product.",
            "type": "string"
          },
          "audited": {
            "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs.",
            "type": "boolean"
          },
          "properties": {
            "description": "Additional properties for the field. Please see [Field type details](../fieldInfo) page for more details on the properties for each field type.",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "allowMentions": {
                "description": "If someone can @mention users in the rich text field to generate an email notification.",
                "type": "boolean"
              },
              "comments": {
                "description": "The comments entered on the field properties by an administrator.",
                "type": "string"
              },
              "doesTotal": {
                "description": "Whether this field totals in reports within the product.",
                "type": "boolean"
              },
              "autoSave": {
                "description": "Whether the link field will auto save.",
                "type": "boolean"
              },
              "defaultValueLuid": {
                "description": "Default user id value.",
                "type": "integer"
              },
              "useI18NFormat": {
                "description": "Whether phone numbers should be in E.164 standard international format.",
                "type": "boolean"
              },
              "maxVersions": {
                "description": "The maximum number of versions configured for a file attachment.",
                "type": "integer"
              },
              "carryChoices": {
                "description": "Whether the field should carry its multiple choice fields when copied.",
                "type": "boolean"
              },
              "format": {
                "description": "The format to display time.",
                "type": "integer"
              },
              "maxLength": {
                "description": "The maximum number of characters allowed for entry in Quickbase for this field.",
                "type": "integer"
              },
              "linkText": {
                "description": "The configured text value that replaces the URL that users see within the product.",
                "type": "string"
              },
              "parentFieldId": {
                "description": "The id of the parent composite field, when applicable.",
                "type": "integer"
              },
              "displayTimezone": {
                "description": "Indicates whether to display the timezone within the product.",
                "type": "boolean"
              },
              "summaryTargetFieldId": {
                "description": "The id of the field that is used to aggregate values from the child, when applicable. This displays 0 if the summary function doesn’t require a field selection (like count).",
                "type": "integer"
              },
              "allowNewChoices": {
                "description": "Indicates if users can add new choices to a selection list.",
                "type": "boolean"
              },
              "masterChoiceFieldId": {
                "description": "The id of the field that is the reference in the relationship.",
                "type": "integer"
              },
              "defaultToday": {
                "description": "Indicates if the field value is defaulted today for new records.",
                "type": "boolean"
              },
              "units": {
                "description": "The units label.",
                "type": "string"
              },
              "lookupTargetFieldId": {
                "description": "The id of the field that is the target on the master table for this lookup.",
                "type": "integer"
              },
              "summaryFunction": {
                "description": "The summary accumulation function type.",
                "enum": [
                  "AVG",
                  "SUM",
                  "MAX",
                  "MIN",
                  "STD-DEV",
                  "COUNT",
                  "COMBINED-TEXT",
                  "COMBINED-USER",
                  "DISTINCT-COUNT"
                ],
                "type": "string"
              },
              "sourceFieldId": {
                "description": "The id of the source field.",
                "type": "integer"
              },
              "masterTableTag": {
                "description": "The table alias for the master table in the relationship this field is part of.",
                "type": "string"
              },
              "doesAverage": {
                "description": "Whether this field averages in reports within the product.",
                "type": "boolean"
              },
              "formula": {
                "description": "The formula of the field as configured in Quickbase.",
                "type": "string"
              },
              "decimalPlaces": {
                "description": "The number of decimal places displayed in the product for this field.",
                "type": "integer"
              },
              "defaultCountryCode": {
                "description": "Controls the default country shown on international phone widgets on forms. Country code should be entered in the ISO 3166-1 alpha-2 format.",
                "type": "string"
              },
              "seeVersions": {
                "description": "Indicates if the user can see other versions, aside from the most recent, of a file attachment within the product.",
                "type": "boolean"
              },
              "displayMonth": {
                "description": "How to display months.",
                "type": "string"
              },
              "numLines": {
                "description": "The number of lines shown in Quickbase for this text field.",
                "type": "integer"
              },
              "displayEmail": {
                "description": "How the email is displayed.",
                "type": "string"
              },
              "defaultKind": {
                "description": "The user default type.",
                "type": "string"
              },
              "coverText": {
                "description": "An alternate user friendly text that can be used to display a link in the browser.",
                "type": "string"
              },
              "currencySymbol": {
                "description": "The current symbol used when displaying field values within the product.",
                "type": "string"
              },
              "masterChoiceTableId": {
                "description": "The id of the table that is the master in this relationship.",
                "type": "string"
              },
              "targetFieldId": {
                "description": "The id of the target field.",
                "type": "integer"
              },
              "displayUser": {
                "description": "The configured option for how users display within the product.",
                "type": "string"
              },
              "blankIsZero": {
                "description": "Whether a blank value is treated the same as 0 in calculations within the product.",
                "type": "boolean"
              },
              "exact": {
                "description": "Whether an exact match is required for a report link.",
                "type": "boolean"
              },
              "startField": {
                "description": "The start field id.",
                "type": "integer"
              },
              "defaultDomain": {
                "description": "Default email domain.",
                "type": "string"
              },
              "defaultValue": {
                "description": "The default value configured for a field when a new record is added.",
                "type": "string"
              },
              "choicesLuid": {
                "description": "List of user choices.",
                "type": "array"
              },
              "abbreviate": {
                "description": "Don't show the URL protocol when showing the URL.",
                "type": "boolean"
              },
              "xmlTag": {
                "description": "The field's xml tag.",
                "type": "string"
              },
              "targetTableName": {
                "description": "The field's target table name.",
                "type": "string"
              },
              "numberFormat": {
                "description": "The format used for displaying numeric values in the product (decimal, separators, digit group).",
                "type": "integer"
              },
              "appearsAs": {
                "description": "The link text, if empty, the url will be used as link text.",
                "type": "string"
              },
              "width": {
                "description": "The field's html input width in the product.",
                "type": "integer"
              },
              "currencyFormat": {
                "description": "The currency format used when displaying field values within the product.",
                "enum": [
                  "left",
                  "right",
                  "middle"
                ],
                "type": "string"
              },
              "foreignKey": {
                "description": "Indicates if the field is a foreign key (or reference field) in a relationship.",
                "type": "boolean"
              },
              "displayDayOfWeek": {
                "description": "Indicates whether to display the day of the week within the product.",
                "type": "boolean"
              },
              "summaryReferenceFieldId": {
                "description": "The id of the field that is the reference in the relationship for this summary.",
                "type": "integer",
                "format": "int64"
              },
              "commaStart": {
                "description": "The number of digits before commas display in the product, when applicable.",
                "type": "integer"
              },
              "choices": {
                "description": "An array of entries that exist for a field that offers choices to the user.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "targetTableId": {
                "description": "The id of the target table.",
                "type": "string"
              },
              "displayRelative": {
                "description": "Whether to display time as relative.",
                "type": "boolean"
              },
              "compositeFields": {
                "description": "An array of the fields that make up a composite field (e.g., address).",
                "type": "array"
              },
              "displayCheckboxAsText": {
                "description": "Indicates whether the checkbox values will be shown as text in reports.",
                "type": "boolean"
              },
              "versionMode": {
                "description": "Version modes for files. Keep all versions vs keep last version.",
                "enum": [
                  "keepallversions",
                  "keeplastversions"
                ],
                "type": "string"
              },
              "displayTime": {
                "description": "Indicates whether to display the time, in addition to the date.",
                "type": "boolean"
              },
              "durationField": {
                "description": "The duration field id.",
                "type": "integer"
              },
              "snapFieldId": {
                "description": "The id of the field that is used to snapshot values from, when applicable.",
                "type": "integer"
              },
              "hours24": {
                "description": "Indicates whether or not to display time in the 24-hour format within the product.",
                "type": "boolean"
              },
              "sortAlpha": {
                "description": "Whether to sort alphabetically, default sort is by record ID.",
                "type": "boolean"
              },
              "sortAsGiven": {
                "description": "Indicates if the listed entries sort as entered vs alphabetically.",
                "type": "boolean"
              },
              "hasExtension": {
                "description": "Whether this field has a phone extension.",
                "type": "boolean"
              },
              "workWeek": {
                "description": "The work week type.",
                "type": "integer"
              },
              "useNewWindow": {
                "description": "Indicates if the URL should open a new window when a user clicks it within the product.",
                "type": "boolean"
              },
              "appendOnly": {
                "description": "Whether this field is append only.",
                "type": "boolean"
              },
              "displayAsLink": {
                "description": "Indicates if a field that is part of the relationship should be shown as a hyperlink to the parent record within the product.",
                "type": "boolean"
              },
              "allowHTML": {
                "description": "Whether this field allows html.",
                "type": "boolean"
              },
              "lookupReferenceFieldId": {
                "description": "The id of the field that is the reference in the relationship for this lookup.",
                "type": "integer"
              }
            }
          },
          "permissions": {
            "description": "Field Permissions for different roles.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "role": {
                  "description": "The role associated with a given permission for the field",
                  "type": "string"
                },
                "permissionType": {
                  "description": "The permission given to the role for this field",
                  "type": "string"
                },
                "roleId": {
                  "description": "The Id of the given role",
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "updateField200Response": {
        "example": {
          "id": 123,
          "label": "Field1",
          "fieldType": "text",
          "mode": "",
          "noWrap": false,
          "bold": false,
          "required": false,
          "appearsByDefault": false,
          "findEnabled": false,
          "unique": false,
          "doesDataCopy": false,
          "fieldHelp": "field help",
          "audited": false,
          "properties": {
            "primaryKey": false,
            "foreignKey": false,
            "numLines": 1,
            "maxLength": 0,
            "appendOnly": false,
            "allowHTML": false,
            "allowMentions": false,
            "sortAsGiven": false,
            "carryChoices": true,
            "allowNewChoices": false,
            "formula": "",
            "defaultValue": ""
          },
          "permissions": [
            {
              "permissionType": "View",
              "role": "Viewer",
              "roleId": 10
            },
            {
              "permissionType": "None",
              "role": "Participant",
              "roleId": 11
            },
            {
              "permissionType": "Modify",
              "role": "Administrator",
              "roleId": 12
            }
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "description": "The id of the field, unique to this table.",
            "type": "integer",
            "format": "int64"
          },
          "fieldType": {
            "description": "The type of field, as described [here](https://help.quickbase.com/user-assistance/field_types.html).",
            "type": "string"
          },
          "mode": {
            "description": "For derived fields, this will be 'lookup', 'summary', or 'formula', to indicate the type of derived field.  For non-derived fields, this will be blank.",
            "type": "string"
          },
          "label": {
            "description": "The label (name) of the field.",
            "type": "string"
          },
          "noWrap": {
            "description": "Indicates if the field is configured to not wrap when displayed in the product.",
            "type": "boolean"
          },
          "bold": {
            "description": "Indicates if the field is configured to display in bold in the product.",
            "type": "boolean"
          },
          "required": {
            "description": "Indicates if the field is marked required.",
            "type": "boolean"
          },
          "appearsByDefault": {
            "description": "Indicates if the field is marked as a default in reports.",
            "type": "boolean"
          },
          "findEnabled": {
            "description": "Indicates if the field is marked as searchable.",
            "type": "boolean"
          },
          "unique": {
            "description": "Indicates if the field is marked unique.",
            "type": "boolean"
          },
          "doesDataCopy": {
            "description": "Indicates if the field data will copy when a user copies the record.",
            "type": "boolean"
          },
          "fieldHelp": {
            "description": "The configured help text shown to users within the product.",
            "type": "string"
          },
          "audited": {
            "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs.",
            "type": "boolean"
          },
          "properties": {
            "description": "Additional properties for the field. Please see [Field type details](../fieldInfo) page for more details on the properties for each field type.",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "allowMentions": {
                "description": "If someone can @mention users in the rich text field to generate an email notification.",
                "type": "boolean"
              },
              "comments": {
                "description": "The comments entered on the field properties by an administrator.",
                "type": "string"
              },
              "doesTotal": {
                "description": "Whether this field totals in reports within the product.",
                "type": "boolean"
              },
              "autoSave": {
                "description": "Whether the link field will auto save.",
                "type": "boolean"
              },
              "defaultValueLuid": {
                "description": "Default user id value.",
                "type": "integer"
              },
              "useI18NFormat": {
                "description": "Whether phone numbers should be in E.164 standard international format.",
                "type": "boolean"
              },
              "maxVersions": {
                "description": "The maximum number of versions configured for a file attachment.",
                "type": "integer"
              },
              "carryChoices": {
                "description": "Whether the field should carry its multiple choice fields when copied.",
                "type": "boolean"
              },
              "format": {
                "description": "The format to display time.",
                "type": "integer"
              },
              "maxLength": {
                "description": "The maximum number of characters allowed for entry in Quickbase for this field.",
                "type": "integer"
              },
              "linkText": {
                "description": "The configured text value that replaces the URL that users see within the product.",
                "type": "string"
              },
              "parentFieldId": {
                "description": "The id of the parent composite field, when applicable.",
                "type": "integer"
              },
              "displayTimezone": {
                "description": "Indicates whether to display the timezone within the product.",
                "type": "boolean"
              },
              "summaryTargetFieldId": {
                "description": "The id of the field that is used to aggregate values from the child, when applicable. This displays 0 if the summary function doesn’t require a field selection (like count).",
                "type": "integer"
              },
              "allowNewChoices": {
                "description": "Indicates if users can add new choices to a selection list.",
                "type": "boolean"
              },
              "masterChoiceFieldId": {
                "description": "The id of the field that is the reference in the relationship.",
                "type": "integer"
              },
              "defaultToday": {
                "description": "Indicates if the field value is defaulted today for new records.",
                "type": "boolean"
              },
              "units": {
                "description": "The units label.",
                "type": "string"
              },
              "lookupTargetFieldId": {
                "description": "The id of the field that is the target on the master table for this lookup.",
                "type": "integer"
              },
              "summaryFunction": {
                "description": "The summary accumulation function type.",
                "enum": [
                  "AVG",
                  "SUM",
                  "MAX",
                  "MIN",
                  "STD-DEV",
                  "COUNT",
                  "COMBINED-TEXT",
                  "COMBINED-USER",
                  "DISTINCT-COUNT"
                ],
                "type": "string"
              },
              "sourceFieldId": {
                "description": "The id of the source field.",
                "type": "integer"
              },
              "masterTableTag": {
                "description": "The table alias for the master table in the relationship this field is part of.",
                "type": "string"
              },
              "doesAverage": {
                "description": "Whether this field averages in reports within the product.",
                "type": "boolean"
              },
              "formula": {
                "description": "The formula of the field as configured in Quickbase.",
                "type": "string"
              },
              "decimalPlaces": {
                "description": "The number of decimal places displayed in the product for this field.",
                "type": "integer"
              },
              "defaultCountryCode": {
                "description": "Controls the default country shown on international phone widgets on forms. Country code should be entered in the ISO 3166-1 alpha-2 format.",
                "type": "string"
              },
              "seeVersions": {
                "description": "Indicates if the user can see other versions, aside from the most recent, of a file attachment within the product.",
                "type": "boolean"
              },
              "displayMonth": {
                "description": "How to display months.",
                "type": "string"
              },
              "numLines": {
                "description": "The number of lines shown in Quickbase for this text field.",
                "type": "integer"
              },
              "displayEmail": {
                "description": "How the email is displayed.",
                "type": "string"
              },
              "defaultKind": {
                "description": "The user default type.",
                "type": "string"
              },
              "coverText": {
                "description": "An alternate user friendly text that can be used to display a link in the browser.",
                "type": "string"
              },
              "currencySymbol": {
                "description": "The current symbol used when displaying field values within the product.",
                "type": "string"
              },
              "masterChoiceTableId": {
                "description": "The id of the table that is the master in this relationship.",
                "type": "string"
              },
              "targetFieldId": {
                "description": "The id of the target field.",
                "type": "integer"
              },
              "displayUser": {
                "description": "The configured option for how users display within the product.",
                "type": "string"
              },
              "blankIsZero": {
                "description": "Whether a blank value is treated the same as 0 in calculations within the product.",
                "type": "boolean"
              },
              "exact": {
                "description": "Whether an exact match is required for a report link.",
                "type": "boolean"
              },
              "startField": {
                "description": "The start field id.",
                "type": "integer"
              },
              "defaultDomain": {
                "description": "Default email domain.",
                "type": "string"
              },
              "defaultValue": {
                "description": "The default value configured for a field when a new record is added.",
                "type": "string"
              },
              "choicesLuid": {
                "description": "List of user choices.",
                "type": "array"
              },
              "abbreviate": {
                "description": "Don't show the URL protocol when showing the URL.",
                "type": "boolean"
              },
              "xmlTag": {
                "description": "The field's xml tag.",
                "type": "string"
              },
              "targetTableName": {
                "description": "The field's target table name.",
                "type": "string"
              },
              "numberFormat": {
                "description": "The format used for displaying numeric values in the product (decimal, separators, digit group).",
                "type": "integer"
              },
              "appearsAs": {
                "description": "The link text, if empty, the url will be used as link text.",
                "type": "string"
              },
              "width": {
                "description": "The field's html input width in the product.",
                "type": "integer"
              },
              "currencyFormat": {
                "description": "The currency format used when displaying field values within the product.",
                "enum": [
                  "left",
                  "right",
                  "middle"
                ],
                "type": "string"
              },
              "foreignKey": {
                "description": "Indicates if the field is a foreign key (or reference field) in a relationship.",
                "type": "boolean"
              },
              "displayDayOfWeek": {
                "description": "Indicates whether to display the day of the week within the product.",
                "type": "boolean"
              },
              "summaryReferenceFieldId": {
                "description": "The id of the field that is the reference in the relationship for this summary.",
                "type": "integer",
                "format": "int64"
              },
              "commaStart": {
                "description": "The number of digits before commas display in the product, when applicable.",
                "type": "integer"
              },
              "choices": {
                "description": "An array of entries that exist for a field that offers choices to the user.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "targetTableId": {
                "description": "The id of the target table.",
                "type": "string"
              },
              "displayRelative": {
                "description": "Whether to display time as relative.",
                "type": "boolean"
              },
              "compositeFields": {
                "description": "An array of the fields that make up a composite field (e.g., address).",
                "type": "array"
              },
              "displayCheckboxAsText": {
                "description": "Indicates whether the checkbox values will be shown as text in reports.",
                "type": "boolean"
              },
              "versionMode": {
                "description": "Version modes for files. Keep all versions vs keep last version.",
                "enum": [
                  "keepallversions",
                  "keeplastversions"
                ],
                "type": "string"
              },
              "displayTime": {
                "description": "Indicates whether to display the time, in addition to the date.",
                "type": "boolean"
              },
              "durationField": {
                "description": "The duration field id.",
                "type": "integer"
              },
              "snapFieldId": {
                "description": "The id of the field that is used to snapshot values from, when applicable.",
                "type": "integer"
              },
              "hours24": {
                "description": "Indicates whether or not to display time in the 24-hour format within the product.",
                "type": "boolean"
              },
              "sortAlpha": {
                "description": "Whether to sort alphabetically, default sort is by record ID.",
                "type": "boolean"
              },
              "sortAsGiven": {
                "description": "Indicates if the listed entries sort as entered vs alphabetically.",
                "type": "boolean"
              },
              "hasExtension": {
                "description": "Whether this field has a phone extension.",
                "type": "boolean"
              },
              "workWeek": {
                "description": "The work week type.",
                "type": "integer"
              },
              "useNewWindow": {
                "description": "Indicates if the URL should open a new window when a user clicks it within the product.",
                "type": "boolean"
              },
              "appendOnly": {
                "description": "Whether this field is append only.",
                "type": "boolean"
              },
              "displayAsLink": {
                "description": "Indicates if a field that is part of the relationship should be shown as a hyperlink to the parent record within the product.",
                "type": "boolean"
              },
              "allowHTML": {
                "description": "Whether this field allows html.",
                "type": "boolean"
              },
              "lookupReferenceFieldId": {
                "description": "The id of the field that is the reference in the relationship for this lookup.",
                "type": "integer"
              }
            }
          },
          "permissions": {
            "description": "Field Permissions for different roles.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "role": {
                  "description": "The role associated with a given permission for the field",
                  "type": "string"
                },
                "permissionType": {
                  "description": "The permission given to the role for this field",
                  "type": "string"
                },
                "roleId": {
                  "description": "The Id of the given role",
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "getFieldsUsage200Response": {
        "example": [
          {
            "field": {
              "id": 6,
              "name": "name",
              "type": "Text"
            },
            "usage": {
              "actions": {
                "count": 0
              },
              "appHomePages": {
                "count": 0
              },
              "dashboards": {
                "count": 2
              },
              "defaultReports": {
                "count": 1
              },
              "exactForms": {
                "count": 0
              },
              "fields": {
                "count": 0
              },
              "forms": {
                "count": 1
              },
              "notifications": {
                "count": 0
              },
              "personalReports": {
                "count": 0
              },
              "pipelines": {
                "count": 1
              },
              "relationships": {
                "count": 0
              },
              "reminders": {
                "count": 0
              },
              "reports": {
                "count": 2
              },
              "roles": {
                "count": 2
              },
              "tableImports": {
                "count": 3
              },
              "tableRules": {
                "count": 1
              },
              "webhooks": {
                "count": 0
              }
            }
          }
        ],
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": true,
          "required": [
            "field",
            "usage"
          ],
          "properties": {
            "field": {
              "description": "Basic information about the field.",
              "type": "object",
              "additionalProperties": true,
              "required": [
                "name",
                "id",
                "type"
              ],
              "properties": {
                "name": {
                  "description": "Field name.",
                  "type": "string"
                },
                "id": {
                  "description": "Field id.",
                  "type": "integer"
                },
                "type": {
                  "description": "Field type.",
                  "type": "string"
                }
              }
            },
            "usage": {
              "description": "Usage Information about the field.",
              "type": "object",
              "additionalProperties": true,
              "required": [
                "actions",
                "appHomePages",
                "dashboards",
                "defaultReports",
                "exactForms",
                "fields",
                "forms",
                "notifications",
                "personalReports",
                "pipelines",
                "relationships",
                "reminders",
                "reports",
                "roles",
                "tableImports",
                "tableRules",
                "webhooks"
              ],
              "properties": {
                "actions": {
                  "description": "The number of quickbase actions where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "appHomePages": {
                  "description": "The number of app home pages where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "dashboards": {
                  "required": [
                    "count"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "the number of times a field has been used for the given item."
                    }
                  },
                  "description": "The number of dashboards where the given field is referenced."
                },
                "defaultReports": {
                  "description": "The number of default reports where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "exactForms": {
                  "description": "The number of exact forms where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "fields": {
                  "description": "The number of fields where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "forms": {
                  "description": "The number of forms where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "notifications": {
                  "description": "The number of notifications where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "personalReports": {
                  "description": "The number of personal reports where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "pipelines": {
                  "required": [
                    "count"
                  ],
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "the number of times a field has been used for the given item."
                    }
                  },
                  "description": "The number of pipelines where the given field is referenced."
                },
                "relationships": {
                  "description": "The number of relationships where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "reminders": {
                  "description": "The number of reminders where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "reports": {
                  "description": "The number of reports where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "roles": {
                  "description": "The number of roles where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "tableImports": {
                  "required": [
                    "count"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "the number of times a field has been used for the given item."
                    }
                  },
                  "description": "The number of table imports where the given field is referenced."
                },
                "tableRules": {
                  "required": [
                    "count"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "the number of times a field has been used for the given item."
                    }
                  },
                  "description": "The number of table rules where the given field is referenced."
                },
                "webhooks": {
                  "description": "The number of webhooks where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "getFieldUsage200Response": {
        "example": [
          {
            "field": {
              "id": 6,
              "name": "name",
              "type": "Text"
            },
            "usage": {
              "actions": {
                "count": 0
              },
              "appHomePages": {
                "count": 0
              },
              "dashboards": {
                "count": 2
              },
              "defaultReports": {
                "count": 1
              },
              "exactForms": {
                "count": 0
              },
              "fields": {
                "count": 0
              },
              "forms": {
                "count": 1
              },
              "notifications": {
                "count": 0
              },
              "personalReports": {
                "count": 0
              },
              "pipelines": {
                "count": 1
              },
              "relationships": {
                "count": 0
              },
              "reminders": {
                "count": 0
              },
              "reports": {
                "count": 2
              },
              "roles": {
                "count": 2
              },
              "tableImports": {
                "count": 2
              },
              "tableRules": {
                "count": 1
              },
              "webhooks": {
                "count": 0
              }
            }
          }
        ],
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": true,
          "required": [
            "field",
            "usage"
          ],
          "properties": {
            "field": {
              "description": "Basic information about the field.",
              "type": "object",
              "additionalProperties": true,
              "required": [
                "name",
                "id",
                "type"
              ],
              "properties": {
                "name": {
                  "description": "Field name.",
                  "type": "string"
                },
                "id": {
                  "description": "Field id.",
                  "type": "integer"
                },
                "type": {
                  "description": "Field type.",
                  "type": "string"
                }
              }
            },
            "usage": {
              "description": "Usage Information about the field.",
              "type": "object",
              "additionalProperties": true,
              "required": [
                "actions",
                "appHomePages",
                "dashboards",
                "defaultReports",
                "exactForms",
                "fields",
                "forms",
                "notifications",
                "personalReports",
                "pipelines",
                "relationships",
                "reminders",
                "reports",
                "roles",
                "tableImports",
                "tableRules",
                "webhooks"
              ],
              "properties": {
                "actions": {
                  "description": "The number of quickbase actions where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "appHomePages": {
                  "description": "The number of app home pages where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "dashboards": {
                  "required": [
                    "count"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "the number of times a field has been used for the given item."
                    }
                  },
                  "description": "The number of dashboards where the given field is referenced."
                },
                "defaultReports": {
                  "description": "The number of default reports where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "exactForms": {
                  "description": "The number of exact forms where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "fields": {
                  "description": "The number of fields where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "forms": {
                  "description": "The number of forms where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "notifications": {
                  "description": "The number of notifications where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "personalReports": {
                  "description": "The number of personal reports where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "pipelines": {
                  "required": [
                    "count"
                  ],
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "the number of times a field has been used for the given item."
                    }
                  },
                  "description": "The number of pipelines where the given field is referenced."
                },
                "relationships": {
                  "description": "The number of relationships where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "reminders": {
                  "description": "The number of reminders where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "reports": {
                  "description": "The number of reports where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "roles": {
                  "description": "The number of roles where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                },
                "tableImports": {
                  "required": [
                    "count"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "the number of times a field has been used for the given item."
                    }
                  },
                  "description": "The number of table imports where the given field is referenced."
                },
                "tableRules": {
                  "required": [
                    "count"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "the number of times a field has been used for the given item."
                    }
                  },
                  "description": "The number of table rules where the given field is referenced."
                },
                "webhooks": {
                  "description": "The number of webhooks where the given field is referenced.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "description": "the number of times a field has been used for the given item.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "runFormula200Response": {
        "example": {
          "result": "30"
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "result": {
            "description": "The formula execution result.",
            "type": "string"
          }
        }
      },
      "upsert200Response": {
        "description": "A successful response that includes details on the records added, updated or unchanged. In the example below, the table previously had ten records with IDs from 1 through 10. The user posts an upsert that updates the value of record 1 and adds two new records, all successfully.",
        "example": {
          "value": {
            "data": [
              {
                "3": {
                  "value": 1
                },
                "6": {
                  "value": "Updating this record"
                },
                "7": {
                  "value": 10
                },
                "8": {
                  "value": "2019-12-18T08:00:00.000Z"
                }
              },
              {
                "3": {
                  "value": 11
                },
                "6": {
                  "value": "This is my text"
                },
                "7": {
                  "value": 15
                },
                "8": {
                  "value": "2019-12-19T08:00:00.000Z"
                }
              },
              {
                "3": {
                  "value": 12
                },
                "6": {
                  "value": "This is my other text"
                },
                "7": {
                  "value": 20
                },
                "8": {
                  "value": "2019-12-20T08:00:00.000Z"
                }
              }
            ],
            "metadata": {
              "createdRecordIds": [
                11,
                12
              ],
              "totalNumberOfRecordsProcessed": 3,
              "unchangedRecordIds": [],
              "updatedRecordIds": [
                1
              ]
            }
          }
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "metadata": {
            "description": "Information about created records, updated records, referenced but unchanged records, and records having any errors while being processed.",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "createdRecordIds": {
                "description": "Array containing the created record ids.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "lineErrors": {
                "description": "This will only be returned in the case of failed records. It is a collection of errors that occurred when processing the incoming data that resulted in records not being processed. Each object has a key representing the sequence number of the record in the original payload (starting from 1). The value is a list of errors occurred.",
                "type": "object",
                "additionalProperties": true
              },
              "unchangedRecordIds": {
                "description": "Array containing the unchanged record ids.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "updatedRecordIds": {
                "description": "Array containing the updated record ids.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "totalNumberOfRecordsProcessed": {
                "description": "Number of records processed. Includes successful and failed record updates.",
                "type": "integer"
              }
            }
          },
          "data": {
            "description": "The data that is expected to be returned.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "upsert207Response": {
        "description": "Receiving this status code indicates that some (or all) of the individual records being handled had problems and were not processed successfully. The response will be reported under the 'lineErrors' element and indicate the total number of records processed and the errors that occurred with each record. The record IDs of records created, updated, and referenced but unchanged, will be returned in the 'createdRecordIds', 'updatedRecordIds', and 'unchangedRecordIds' elements respectively.  \nIn the example below, a user tries to add three records to a table that previously had ten records with IDs from 1 through 10. The first and third records of the request are valid and create the 11th and 12th records in the table; the second record has a problem that prevents it from being processed.",
        "example": {
          "value": {
            "data": [],
            "metadata": {
              "createdRecordIds": [
                11,
                12
              ],
              "lineErrors": {
                "2": [
                  "Incompatible value for field with ID \"6\"."
                ]
              },
              "totalNumberOfRecordsProcessed": 3,
              "unchangedRecordIds": [],
              "updatedRecordIds": []
            }
          }
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "metadata": {
            "description": "Information about created records, updated records, referenced but unchanged records, and records having any errors while being processed.",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "createdRecordIds": {
                "description": "Array containing the created record ids.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "lineErrors": {
                "description": "This will only be returned in the case of failed records. It is a collection of errors that occurred when processing the incoming data that resulted in records not being processed. Each object has a key representing the sequence number of the record in the original payload (starting from 1). The value is a list of errors occurred.",
                "type": "object",
                "additionalProperties": true
              },
              "unchangedRecordIds": {
                "description": "Array containing the unchanged record ids.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "updatedRecordIds": {
                "description": "Array containing the updated record ids.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "totalNumberOfRecordsProcessed": {
                "description": "Number of records processed. Includes successful and failed record updates.",
                "type": "integer"
              }
            }
          },
          "data": {
            "description": "The data that is expected to be returned.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "upsert400Response": {
        "description": "There was problem in the format of the request. This prevented the entire request from processing any records. The error response will be in the [standard format](../errors).",
        "example": {
          "message": "Bad request",
          "description": "Data object cannot be empty."
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "message": {
            "description": "The type of error found.",
            "type": "string"
          },
          "description": {
            "description": "The description for the occurence of the error.",
            "type": "string"
          }
        }
      },
      "deleteRecords200Response": {
        "example": {
          "numberDeleted": 1
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "numberDeleted": {
            "description": "The number of records deleted.",
            "example": 1,
            "type": "integer"
          }
        }
      },
      "runQuery200Response": {
        "example": {
          "value": {
            "data": [
              {
                "6": {
                  "value": "Andre Harris"
                },
                "7": {
                  "value": 10
                },
                "8": {
                  "value": "2019-12-18T08:00:00Z"
                }
              }
            ],
            "fields": [
              {
                "id": 6,
                "label": "Full Name",
                "type": "text"
              },
              {
                "id": 7,
                "label": "Amount",
                "type": "numeric"
              },
              {
                "id": 8,
                "label": "Date time",
                "type": "date time"
              }
            ],
            "metadata": {
              "totalRecords": 10,
              "numRecords": 1,
              "numFields": 3,
              "skip": 0
            }
          }
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "fields": {
            "description": "An array of objects that contains limited meta-data of each field displayed in the report. This assists in building logic that depends on field types and IDs.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "description": "Field id.",
                  "type": "integer"
                },
                "label": {
                  "description": "Field label.",
                  "type": "string"
                },
                "type": {
                  "description": "Field type.",
                  "type": "string"
                }
              }
            }
          },
          "data": {
            "description": "An array of objects that either represents the record data or summarized values, depending on the report type.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "description": "Additional information about the results that may be helpful. Pagination may be needed if either you specify a smaller number of results to skip than is available, or if the API automatically returns fewer results. numRecords can be compared to totalRecords to determine if further pagination is needed.",
            "type": "object",
            "additionalProperties": true,
            "required": [
              "numFields",
              "totalRecords",
              "numRecords"
            ],
            "properties": {
              "skip": {
                "description": "The number of records to skip",
                "type": "integer"
              },
              "numFields": {
                "description": "The number of fields in each record in the current response object",
                "type": "integer"
              },
              "top": {
                "description": "If present, the maximum number of records requested by the caller",
                "type": "integer"
              },
              "totalRecords": {
                "description": "The total number of records in the result set",
                "type": "integer"
              },
              "numRecords": {
                "description": "The number of records in the current response object",
                "type": "integer"
              }
            }
          }
        }
      },
      "getTempTokenDBID200Response": {
        "example": {
          "temporaryAuthorization": "token"
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "temporaryAuthorization": {
            "description": "Temporary authorization token.",
            "type": "string"
          }
        }
      },
      "exchangeSsoToken200Response": {
        "example": {
          "access_token": "example_token_1NiIsImtpZCI6IjllciJ9w",
          "issued_token_type": "urn:quickbase:params:oauth:token-type:temp_ticket",
          "token_type": "N_A"
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The security token issued by the authorization server in response to the token exchange request. The identifier `access_token` is used for historical reasons and the issued token need not be an OAuth access token."
          },
          "issued_token_type": {
            "type": "string",
            "description": "An identifier for the representation of the issued security token.",
            "enum": [
              "urn:quickbase:params:oauth:token-type:temp_ticket",
              "urn:quickbase:params:oauth:token-type:temp_token"
            ]
          },
          "token_type": {
            "type": "string",
            "description": "Will always return `N_A`",
            "enum": [
              "N_A"
            ]
          }
        }
      },
      "cloneUserToken200Response": {
        "example": {
          "active": true,
          "apps": [
            {
              "id": "bpqe82s1",
              "name": "My first app"
            },
            {
              "id": "bpqe82s2",
              "name": "My second app"
            }
          ],
          "lastUsed": "2020-03-27T18:34:12.000Z",
          "description": "Cloned user token",
          "id": 5,
          "name": "My cloned user token",
          "token": "token"
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "active": {
            "description": "Whether the user token is active.",
            "type": "boolean"
          },
          "apps": {
            "description": "The list of apps this user token is assigned to.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "description": "The unique identifier for this application.",
                  "type": "string"
                },
                "name": {
                  "description": "The application's name.",
                  "type": "string"
                }
              }
            }
          },
          "lastUsed": {
            "description": "The last date this user token was used, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "description": {
            "description": "User Token description.",
            "type": "string"
          },
          "id": {
            "description": "User Token id.",
            "type": "integer"
          },
          "name": {
            "description": "User Token name.",
            "type": "string"
          },
          "token": {
            "description": "User Token value.",
            "type": "string"
          }
        }
      },
      "transferUserToken200Response": {
        "example": {
          "active": true,
          "apps": [
            {
              "id": "bpqe82s1",
              "name": "My first app"
            },
            {
              "id": "bpqe82s2",
              "name": "My second app"
            }
          ],
          "lastUsed": "2020-03-27T18:34:12.000Z",
          "description": "Transferred user token",
          "id": 5,
          "name": "My transferred user token"
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "active": {
            "description": "Whether the user token is active.",
            "type": "boolean"
          },
          "apps": {
            "description": "The list of apps this user token is assigned to.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "description": "The unique identifier for this application.",
                  "type": "string"
                },
                "name": {
                  "description": "The application's name.",
                  "type": "string"
                }
              }
            }
          },
          "lastUsed": {
            "description": "The last date this user token was used, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
            "type": "string"
          },
          "description": {
            "description": "User Token description.",
            "type": "string"
          },
          "id": {
            "description": "User Token id.",
            "type": "integer"
          },
          "name": {
            "description": "User Token name.",
            "type": "string"
          }
        }
      },
      "deactivateUserToken200Response": {
        "example": {
          "id": 5
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "description": "The user token id.",
            "type": "integer"
          }
        }
      },
      "deleteUserToken200Response": {
        "example": {
          "id": 5
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "id": {
            "description": "The user token id.",
            "type": "integer"
          }
        }
      },
      "downloadFile200Response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "binary"
          }
        },
        "description": "Base64 encoded file content."
      },
      "deleteFile200Response": {
        "example": {
          "versionNumber": 1,
          "fileName": "file.pdf",
          "uploaded": "2019-12-18T08:00:00Z",
          "creator": {
            "email": "jsmith@quickbase.com",
            "id": "123456.ab1s",
            "name": "Juliet Smith",
            "userName": "jsmith"
          }
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "versionNumber": {
            "description": "The number of deleted version.",
            "type": "integer"
          },
          "fileName": {
            "description": "The name of file associated with deleted version.",
            "type": "string"
          },
          "uploaded": {
            "description": "The timestamp when the version was originally uploaded.",
            "type": "string"
          },
          "creator": {
            "description": "The user that uploaded version.",
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "name": {
                "description": "User full name.",
                "type": "string"
              },
              "id": {
                "description": "User Id.",
                "type": "string"
              },
              "email": {
                "description": "User email.",
                "type": "string"
              },
              "userName": {
                "description": "User Name as updated in user properties. Optional, appears if not the same as user email.",
                "type": "string"
              }
            }
          }
        }
      },
      "getUsers200Response": {
        "x-amf-examples": {
          "All results example": {
            "users": [
              {
                "userName": "jdoe",
                "firstName": "Jon",
                "lastName": "Doe",
                "emailAddress": "jdoe@domain.com",
                "hashId": "58351651.xc1"
              },
              {
                "userName": "swilson",
                "firstName": "Simone",
                "lastName": "Wilson",
                "emailAddress": "jswilson@domain.com",
                "hashId": "58351648.xc1"
              },
              {
                "userName": "sjackson",
                "firstName": "Samuel",
                "lastName": "Jackson",
                "emailAddress": "sjackson@domain.com",
                "hashId": "58351643.xc1"
              }
            ],
            "metadata": {
              "nextPageToken": ""
            }
          },
          "Paged results example": {
            "users": [
              {
                "userName": "swilson",
                "firstName": "Simone",
                "lastName": "Wilson",
                "emailAddress": "jswilson@domain.com",
                "hashId": "58351648.xc1"
              },
              {
                "userName": "sjackson",
                "firstName": "Samuel",
                "lastName": "Jackson",
                "emailAddress": "sjackson@domain.com",
                "hashId": "58351643.xc1"
              }
            ],
            "metadata": {
              "nextPageToken": "bzw2ba"
            }
          }
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "users",
          "metadata"
        ],
        "properties": {
          "users": {
            "description": "A list of users found in an account with the given criterias",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "required": [
                "userName",
                "firstName",
                "lastName",
                "emailAddress",
                "hashId"
              ],
              "properties": {
                "userName": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "emailAddress": {
                  "type": "string"
                },
                "hashId": {
                  "type": "string"
                }
              }
            }
          },
          "metadata": {
            "description": "Additional request information",
            "type": "object",
            "additionalProperties": true,
            "required": [
              "nextPageToken"
            ],
            "properties": {
              "nextPageToken": {
                "type": "string"
              }
            }
          }
        }
      },
      "denyUsers200Response": {
        "example": {
          "failure": [
            "423123.vc2d",
            "78910.ba1s"
          ],
          "success": [
            "123456.ab1s"
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "failure",
          "success"
        ],
        "properties": {
          "failure": {
            "description": "A list of users that couldn't be denied. This also includes the ID's of users that are not valid.",
            "example": [
              "78910.qwer",
              "3512.asd1"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "description": "A list of users that have successfully been denied.",
            "example": [
              "123456.ab1s"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "denyUsersAndGroups200Response": {
        "example": {
          "failure": [
            "423123.vc2d",
            "78910.ba1s"
          ],
          "success": [
            "123456.ab1s"
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "failure",
          "success"
        ],
        "properties": {
          "failure": {
            "description": "A list of users that couldn't be denied. This also includes the ID's of users that are not valid.",
            "example": [
              "78910.qwer",
              "3512.asd1"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "description": "A list of users that have successfully been denied.",
            "example": [
              "123456.ab1s"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "undenyUsers200Response": {
        "example": {
          "failure": [
            "423123.vc2d",
            "78910.ba1s"
          ],
          "success": [
            "123456.ab1s"
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "failure",
          "success"
        ],
        "properties": {
          "failure": {
            "description": "A list of users that couldn't be undenied. This also includes the ID's of users that are not valid.",
            "example": [
              "78910.qwer",
              "3512.asd1"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "description": "A list of users that have successfully been undenied.",
            "example": [
              "123456.ab1s"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "addMembersToGroup200Response": {
        "example": {
          "failure": [
            "123456.ryyw",
            "423123.b3x5"
          ],
          "success": [
            "100000.be8s"
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "failure",
          "success"
        ],
        "properties": {
          "failure": {
            "description": "A list of users that couldn’t be added to the group. This includes a list of IDs that represent invalid users and users who have already been added to the group.",
            "example": [
              "423123.b3x5",
              "123456.ryyw"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "description": "A list of users that have been added to the group successfully.",
            "example": [
              "100000.be8s"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "removeMembersFromGroup200Response": {
        "example": {
          "failure": [
            "123456.ryyw",
            "423123.b3x5"
          ],
          "success": [
            "100000.be8s"
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "failure",
          "success"
        ],
        "properties": {
          "failure": {
            "description": "A list of users that couldn’t be removed from the group. This includes a list of IDs that represent invalid users.",
            "example": [
              "423123.b3x5",
              "123456.ryyw"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "description": "A list of users that have been removed from the group successfully.",
            "example": [
              "100000.be8s"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "addManagersToGroup200Response": {
        "example": {
          "failure": [
            "123456.ryyw",
            "423123.b3x5"
          ],
          "success": [
            "100000.be8s"
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "failure",
          "success"
        ],
        "properties": {
          "failure": {
            "description": "A list of users that couldn’t be added to the group. This includes a list of IDs that represent invalid users and users who have already been added to the group.",
            "example": [
              "423123.b3x5",
              "123456.ryyw"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "description": "A list of users that have been added to the group successfully.",
            "example": [
              "100000.be8s"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "removeManagersFromGroup200Response": {
        "example": {
          "failure": [
            "123456.ryyw",
            "423123.b3x5"
          ],
          "success": [
            "100000.be8s"
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "failure",
          "success"
        ],
        "properties": {
          "failure": {
            "description": "A list of users that couldn’t be removed from the group. This includes a list of IDs that represent invalid users.",
            "example": [
              "423123.b3x5",
              "123456.ryyw"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "description": "A list of users that have been removed from the group successfully.",
            "example": [
              "100000.be8s"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "addSubgroupsToGroup200Response": {
        "example": {
          "failure": [
            "1002.czm8"
          ],
          "success": [
            "1003.bar3"
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "failure",
          "success"
        ],
        "properties": {
          "failure": {
            "description": "A list of child groups that couldn’t be added to the group. This includes a list of IDs that represent invalid groups and groups that have already been added to the group.",
            "example": [
              "1002.czm8"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "description": "A list of child groups that have been added to the group successfully.",
            "example": [
              "1003.bar3"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "removeSubgroupsFromGroup200Response": {
        "example": {
          "failure": [
            "1002.czm8"
          ],
          "success": [
            "1003.bar3"
          ]
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "failure",
          "success"
        ],
        "properties": {
          "failure": {
            "description": "A list of child groups that couldn’t be removed from the group. This includes a list of IDs that represent invalid groups.",
            "example": [
              "1002.czm8"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "description": "A list of child groups that have been removed from the group successfully.",
            "example": [
              "1003.bar3"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "audit200Response": {
        "example": {
          "events": [
            {
              "firstname": "Jon",
              "lastname": "Doe",
              "email": "jdoe@quickbase.com",
              "ipaddress": "65.219.241.162",
              "application": "UI",
              "resourceurl": "https://demo.quickbase.com/db/bpqe82s1",
              "sessioninfo": "Session ID: 17245317",
              "useragent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Safari/605.1.15",
              "topic": "app_dashboard_access",
              "description": "Jon Doe accessed the app dashboard in app Projects",
              "id": "I3g8gm2cmh-1",
              "time": "2020-04-21T14:41:51.886Z"
            }
          ],
          "nextToken": "6a.f12x",
          "queryId": "797c0726-f8f4-4df9-883f-c7e8cbdf2f77.ALtInpuyQeBoW+fWrAqLrjPGqDqPl++IMb3bOxlmoF4="
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "queryId"
        ],
        "properties": {
          "queryId": {
            "description": "Query id of the requested audit log.",
            "type": "string"
          },
          "events": {
            "description": "All events of the audit log.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "required": [
                "id",
                "firstname",
                "lastname",
                "email",
                "topic",
                "time",
                "ipaddress",
                "useragent",
                "application",
                "description"
              ],
              "properties": {
                "id": {
                  "description": "Log ID.",
                  "type": "string"
                },
                "firstname": {
                  "description": "User's first name.",
                  "type": "string"
                },
                "lastname": {
                  "description": "User's last name.",
                  "type": "string"
                },
                "email": {
                  "description": "User's email address.",
                  "type": "string"
                },
                "topic": {
                  "description": "What action was taken, such as log in, create app, report access, or table search.",
                  "type": "string"
                },
                "time": {
                  "description": "Exact time the action was taken, including date, and time with hour, minutes and seconds. Time zone is the browser time zone.",
                  "type": "string"
                },
                "ipaddress": {
                  "description": "The IP address the action was taken from.",
                  "type": "string"
                },
                "useragent": {
                  "description": "The browser and OS the action was taken from.",
                  "type": "string"
                },
                "application": {
                  "description": "UI for user interface or API for an API call.",
                  "type": "string"
                },
                "description": {
                  "description": "A brief description of the action that you can click to see additional details.",
                  "type": "string"
                },
                "payloadChanges": {
                  "description": "The data changes that have occured to a field that has been marked as audited.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "changes",
                    "rid",
                    "changeType",
                    "type"
                  ],
                  "properties": {
                    "changes": {
                      "description": "An object describing the changes that occured on record changes.",
                      "type": "object",
                      "additionalProperties": true,
                      "required": [
                        "current",
                        "previous",
                        "fields"
                      ],
                      "properties": {
                        "current": {
                          "description": "The current value of the fields that have been changed.",
                          "type": "array"
                        },
                        "previous": {
                          "description": "The previous value of the fields that have been changed.",
                          "type": "array"
                        },
                        "fields": {
                          "description": "The list of fields and their types that have been changed.",
                          "type": "array"
                        }
                      }
                    },
                    "rid": {
                      "description": "The recordId that has been edited.",
                      "type": "integer"
                    },
                    "changeType": {
                      "description": "The change type that occured for a record. Could be one of add, edit, delete.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A placeholder for type changes.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "nextToken": {
            "description": "Token to fetch the next 1000 logs.",
            "type": "string"
          }
        }
      },
      "audit202Response": {
        "example": {
          "queryId": "797c0726-f8f4-4df9-883f-c7e8cbdf2f77.ALtInpuyQeBoW+fWrAqLrjPGqDqPl++IMb3bOxlmoF4="
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "queryId"
        ],
        "properties": {
          "queryId": {
            "description": "Query id of the requested audit log.",
            "type": "string"
          }
        }
      },
      "platformAnalyticReads200Response": {
        "example": {
          "date": "2022-01-01",
          "reads": {
            "integrations": {
              "api": 456,
              "eoti": 789,
              "pipelines": 432
            },
            "user": 123
          }
        },
        "type": "object",
        "additionalProperties": true,
        "required": [
          "date",
          "reads"
        ],
        "properties": {
          "date": {
            "description": "The date of the requested summary.",
            "type": "string",
            "format": "date"
          },
          "reads": {
            "description": "Total reads for the specified date.",
            "type": "object",
            "additionalProperties": true,
            "required": [
              "user",
              "integrations"
            ],
            "properties": {
              "user": {
                "description": "Total user reads for the realm on the specified date.",
                "type": "integer"
              },
              "integrations": {
                "description": "Total integration reads for the realm on the specified date.",
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "eoti",
                  "api",
                  "pipelines"
                ],
                "properties": {
                  "eoti": {
                    "description": "Total reads by anonymous users for the realm on the specified date.",
                    "type": "integer"
                  },
                  "api": {
                    "description": "Total API reads for the realm on the specified date.",
                    "type": "integer"
                  },
                  "pipelines": {
                    "description": "Total pipeline reads for the realm on the specified date.",
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "platformAnalyticEventSummaries200Response": {
        "example": {
          "accountId": "1234",
          "start": "2023-12-01T05:00:00Z",
          "end": "2023-12-31T05:00:00Z",
          "groupBy": "user",
          "where": [
            {
              "id": "58351651.xc1",
              "type": "user"
            },
            {
              "id": "bpqe82s1",
              "type": "app"
            }
          ],
          "results": [
            {
              "id": "58351651.xc1",
              "name": "Jon Doe",
              "eventTypes": [
                {
                  "billingCategory": "integration",
                  "count": 794,
                  "eventType": "api"
                },
                {
                  "billingCategory": "integration",
                  "count": 0,
                  "eventType": "eoti"
                },
                {
                  "billingCategory": "integration",
                  "count": 203,
                  "eventType": "stepruns"
                },
                {
                  "billingCategory": "user",
                  "count": 0,
                  "eventType": "plugin"
                },
                {
                  "billingCategory": "user",
                  "count": 36,
                  "eventType": "appDashboard"
                },
                {
                  "billingCategory": "user",
                  "count": 0,
                  "eventType": "tableDashboard"
                },
                {
                  "billingCategory": "user",
                  "count": 419,
                  "eventType": "form"
                },
                {
                  "billingCategory": "user",
                  "count": 0,
                  "eventType": "report"
                }
              ]
            }
          ],
          "metadata": {
            "nextToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJvZmZzZXQiOjEwMCwiaWF0IjoxNzA2NzE1OTI3LCJleHAiOjE3MDY4MDIzMjd9.aWGZCv5vJIai0Dw6sVcQ9FT70PHcqWcqP9sGdKBJeco"
          },
          "totals": {
            "all": 1452,
            "integration": 997,
            "user": 455
          }
        },
        "properties": {
          "accountId": {
            "description": "The ID of the account the events are associated with.",
            "type": "string"
          },
          "start": {
            "description": "The start date and time of the requested summaries in ISO 8601 time format.",
            "format": "date-time",
            "type": "string"
          },
          "end": {
            "description": "The end date and time of the requested summaries in ISO 8601 time format.",
            "format": "date-time",
            "type": "string"
          },
          "groupBy": {
            "description": "How the events should be grouped.",
            "enum": [
              "app",
              "user"
            ],
            "type": "string"
          },
          "where": {
            "items": {
              "properties": {
                "id": {
                  "description": "Id of the item to filter by.",
                  "type": "string"
                },
                "type": {
                  "description": "The type of item to filter by.",
                  "enum": [
                    "app",
                    "user"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "results": {
            "description": "An array of objects that contains Application/User information and an events object with summaries by event type.",
            "items": {
              "properties": {
                "eventTypes": {
                  "description": "An array of events that contains specific information associated with an Application/User broken down by event type.",
                  "items": {
                    "properties": {
                      "billingCategory": {
                        "description": "Billing category of the event type.",
                        "enum": [
                          "user",
                          "integration"
                        ],
                        "type": "string"
                      },
                      "count": {
                        "description": "Count of events associated with that event type and Application/User.",
                        "type": "integer"
                      },
                      "eventType": {
                        "description": "Event type",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "description": "Id of the Application/User.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the Application/User.",
                  "type": "string"
                },
                "totals": {
                  "description": "Totals by billing category for the event grouping.",
                  "properties": {
                    "all": {
                      "type": "number"
                    },
                    "integration": {
                      "type": "number"
                    },
                    "user": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "id",
                "name",
                "totals",
                "eventTypes"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "metadata": {
            "description": "Additional information about the results that may be helpful.",
            "properties": {
              "nextToken": {
                "description": "Supply this token in a subsequent request to fetch the next page of results.",
                "type": "string"
              }
            },
            "required": [
              "nextToken"
            ],
            "type": "object"
          },
          "totals": {
            "description": "Totals by billing category for all queried events.",
            "properties": {
              "all": {
                "type": "number"
              },
              "integration": {
                "type": "number"
              },
              "user": {
                "type": "number"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "accountId",
          "start",
          "end",
          "groupBy",
          "where",
          "results"
        ],
        "type": "object"
      },
      "exportSolution200Response": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "format": "yaml"
          }
        },
        "description": "YAML-formatted data"
      },
      "exportSolution400Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity."
      },
      "exportSolution404Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Solution does not exist. The supplied solution ID was not found."
      },
      "exportSolution401_403Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information."
      },
      "exportSolution4xx_5xxResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Non-common error, reach out to support if there’s lack of clarity."
      },
      "updateSolution200Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "solutionId": {
              "type": "string"
            },
            "alias": {
              "type": "object"
            },
            "createdResources": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "apps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "description": "Success"
      },
      "updateSolution400Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity."
      },
      "updateSolution401_403Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information."
      },
      "updateSolution4xx_5xxResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Non-common error, reach out to support if there’s lack of clarity."
      },
      "createSolution200Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "solutionId": {
              "type": "string"
            },
            "alias": {
              "type": "object"
            },
            "createdResources": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "apps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "description": "Success"
      },
      "createSolution400Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity."
      },
      "createSolution401_403Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information."
      },
      "createSolution4xx_5xxResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Non-common error, reach out to support if there’s lack of clarity."
      },
      "exportSolutionToRecord200Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "record_id": {
              "type": "number"
            },
            "filename": {
              "type": "string"
            }
          }
        },
        "description": "Success"
      },
      "exportSolutionToRecord400Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity."
      },
      "exportSolutionToRecord404Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "A resource is missing. For example: The supplied solution or field does not exist."
      },
      "exportSolutionToRecord401_403Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information."
      },
      "exportSolutionToRecord4xx_5xxResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Non-common error, reach out to support if there’s lack of clarity."
      },
      "createSolutionFromRecord200Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "solutionId": {
              "type": "string"
            },
            "alias": {
              "type": "object"
            },
            "createdResources": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "apps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "$App_IT_Total_Management": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "pipelines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "description": "Success"
      },
      "createSolutionFromRecord400Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity."
      },
      "createSolutionFromRecord404Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "A resource is missing. For example: The supplied solution, field or record does not exist."
      },
      "createSolutionFromRecord401_403Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information."
      },
      "createSolutionFromRecord4xx_5xxResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Non-common error, reach out to support if there’s lack of clarity."
      },
      "updateSolutionToRecord200Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "solutionId": {
              "type": "string"
            },
            "alias": {
              "type": "object"
            },
            "resources": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "apps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "$App_IT_Total_Management": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "pipelines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "description": "Success"
      },
      "updateSolutionToRecord400Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity."
      },
      "updateSolutionToRecord404Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "A resource is missing. For example: The supplied solution, field or record does not exist."
      },
      "updateSolutionToRecord401_403Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information."
      },
      "updateSolutionToRecord4xx_5xxResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Non-common error, reach out to support if there’s lack of clarity."
      },
      "changesetSolution200Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "changes": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "logicalType": {
                      "type": "string"
                    },
                    "logicalId": {
                      "type": "string"
                    },
                    "action": {
                      "type": "string"
                    },
                    "path": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Success"
      },
      "changesetSolution400Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity."
      },
      "changesetSolution404Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Solution does not exist. The supplied solution ID was not found."
      },
      "changesetSolution401_403Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information."
      },
      "changesetSolution4xx_5xxResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Non-common error, reach out to support if there’s lack of clarity."
      },
      "changesetSolutionFromRecord200Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "changes": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "logicalType": {
                      "type": "string"
                    },
                    "logicalId": {
                      "type": "string"
                    },
                    "action": {
                      "type": "string"
                    },
                    "path": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Success"
      },
      "changesetSolutionFromRecord400Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity."
      },
      "changesetSolutionFromRecord404Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "A resource is missing. For example: The supplied solution, field or record does not exist."
      },
      "changesetSolutionFromRecord401_403Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information."
      },
      "changesetSolutionFromRecord4xx_5xxResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Non-common error, reach out to support if there’s lack of clarity."
      },
      "generateDocument200Response": {
        "example": {
          "fileName": "Document.pdf",
          "data": "data",
          "contentType": "application/pdf"
        },
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "fileName": {
            "description": "The file name.",
            "type": "string"
          },
          "data": {
            "description": "Base64 encoded file content.",
            "type": "string"
          },
          "contentType": {
            "description": "The document content type.",
            "type": "string"
          }
        }
      }
    }
  }
]