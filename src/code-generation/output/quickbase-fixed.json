{
  "swagger": "2.0",
  "info": {
    "title": "Quick Base API",
    "version": "1.0.0"
  },
  "host": "api.quickbase.com/v1",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/apps": {
      "post": {
        "operationId": "createApp",
        "summary": "Create a new application",
        "tags": [
          "Apps"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAppRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - application created",
            "schema": {
              "$ref": "#/definitions/CreateApp200Response"
            }
          }
        }
      }
    },
    "/apps/{appId}": {
      "get": {
        "operationId": "getApp",
        "summary": "Get an app by ID",
        "tags": [
          "Apps"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/App"
            }
          }
        }
      }
    },
    "/apps/{appId}/events": {
      "get": {
        "description": "Get a list of events that can be triggered based on data or user actions in this application, includes: Email notification, Reminders, Subscriptions, QB Actions, Webhooks, record change triggered Automations (does not include scheduled).",
        "summary": "Get app events",
        "operationId": "getAppEvents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "description": "The unique identifier of an app",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": [
                {
                  "type": "qb-action",
                  "owner": {
                    "email": "jsmith@quickbase.com",
                    "id": "123456.ab1s",
                    "name": "Juliet Smith",
                    "userName": "jsmith"
                  },
                  "isActive": true,
                  "tableId": "bqwriv8bw",
                  "name": "Quick Base Action"
                },
                {
                  "type": "webhook",
                  "owner": {
                    "email": "tanderson@quickbase.com",
                    "id": "654321.ab1s",
                    "name": "Thomas A. Anderson",
                    "userName": "tanderson"
                  },
                  "isActive": false,
                  "tableId": "bqwriv8bw",
                  "name": "Webhook"
                },
                {
                  "type": "email-notification",
                  "owner": {
                    "email": "jsmith@quickbase.com",
                    "id": "123456.ab1s",
                    "name": "Juliet Smith",
                    "userName": "jsmith"
                  },
                  "isActive": false,
                  "tableId": "bqwriv8bw",
                  "name": "Notification"
                },
                {
                  "type": "subscription",
                  "owner": {
                    "email": "tanderson@quickbase.com",
                    "id": "654321.ab1s",
                    "name": "Thomas A. Anderson",
                    "userName": "tanderson"
                  },
                  "isActive": true,
                  "tableId": "bqwriv8bw",
                  "name": "Subscription"
                },
                {
                  "type": "reminder",
                  "owner": {
                    "email": "jsmith@quickbase.com",
                    "id": "123456.ab1s",
                    "name": "Juliet Smith",
                    "userName": "jsmith"
                  },
                  "isActive": true,
                  "tableId": "bqwriv8bw",
                  "name": "Reminder"
                },
                {
                  "type": "automation",
                  "owner": {
                    "email": "tanderson@quickbase.com",
                    "id": "654321.ab1s",
                    "name": "Thomas A. Anderson",
                    "userName": "tanderson"
                  },
                  "isActive": true,
                  "tableId": "bqwriv8bw",
                  "url": "https://realm.quickbase.com/ui/automation/qb/db/bqwria893/automations/70eecab9-634f-42d9-9037-9340a1a9e8ce"
                }
              ],
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "isActive": {
                    "description": "Indication of whether current event is active.",
                    "type": "boolean"
                  },
                  "type": {
                    "description": "Type of an event.",
                    "enum": [
                      "webhook",
                      "qb-action",
                      "email-notification",
                      "subscription",
                      "reminder",
                      "automation"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the event. This property is not returned for automations.",
                    "type": "string"
                  },
                  "url": {
                    "description": "The url to automation that can be accessed from the browser. Only returned for automations.",
                    "type": "string"
                  },
                  "owner": {
                    "description": "The user that owns the event.",
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "name": {
                        "description": "User full name.",
                        "type": "string"
                      },
                      "id": {
                        "description": "User Id.",
                        "type": "string"
                      },
                      "email": {
                        "description": "User email.",
                        "type": "string"
                      },
                      "userName": {
                        "description": "User Name as updated in user properties. Optional, appears if not the same as user email.",
                        "type": "string"
                      }
                    }
                  },
                  "tableId": {
                    "description": "The unique identifier of the table to which event belongs to.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Apps"
        ]
      }
    },
    "/apps/{appId}/copy": {
      "post": {
        "description": "Copies the specified application. The new application will have the same schema as the original. See below for additional copy options.",
        "summary": "Copy an app",
        "operationId": "copyApp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "description": "The unique identifier of an app",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "example": {
                "name": "my copied app",
                "description": "copied from my original app",
                "properties": {
                  "keepData": false,
                  "excludeFiles": true,
                  "usersAndRoles": false,
                  "assignUserToken": true
                }
              },
              "type": "object",
              "additionalProperties": false,
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "The name of the newly copied app",
                  "type": "string"
                },
                "description": {
                  "description": "The description of the newly copied app",
                  "type": "string"
                },
                "properties": {
                  "description": "The configuration properties for performing the app copy",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "assignUserToken": {
                      "description": "Whether to add the user token used to make this request to the new app",
                      "type": "boolean"
                    },
                    "excludeFiles": {
                      "description": "If keepData is true, whether to copy the file attachments as well. If keepData is false, this property is ignored",
                      "type": "boolean"
                    },
                    "keepData": {
                      "description": "Whether to copy the app's data along with the schema",
                      "type": "boolean"
                    },
                    "usersAndRoles": {
                      "description": "If true, users will be copied along with their assigned roles. If false, users and roles will be copied but roles will not be assigned",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "ancestorId": "bqhskthaq",
                "created": "2020-03-27T18:34:12Z",
                "dateFormat": "MM-DD-YYYY",
                "description": "My testing app",
                "hasEveryoneOnTheInternet": true,
                "id": "bpqe82s1",
                "name": "Testing App",
                "timeZone": "(UTC-08:00) Pacific Time (US & Canada)",
                "updated": "2020-04-03T19:12:20Z",
                "dataClassification": "None"
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "The app name. You are allowed to create multiple apps with the same name, in the same realm, because they will have different dbid values. We urge you to be careful about doing this.",
                  "type": "string"
                },
                "description": {
                  "description": "The description for the app",
                  "type": "string"
                },
                "created": {
                  "description": "The time and date the app was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
                  "type": "string"
                },
                "updated": {
                  "description": "The time and date the app was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
                  "type": "string"
                },
                "dateFormat": {
                  "description": "A description of the format used when displaying date values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the API Guide for how time values are returned in API calls. See [About Localizing Dates](https://help.quickbase.com/user-assistance/about_localizing_dates_numbers.html) to set the app’s date format.",
                  "type": "string"
                },
                "timeZone": {
                  "description": "A description of the time zone used when displaying time values in this app. Note that this is a browser-only parameter - see the [Field type details](../fieldInfo) page in the portal for how time values are returned in API calls. See [Set the Time Zone for Both the Application and the Account](https://help.quickbase.com/user-assistance/application_local_timezone.html) to set the application’s time zone.",
                  "type": "string"
                },
                "id": {
                  "description": "The unique identifier for this application.",
                  "type": "string"
                },
                "hasEveryoneOnTheInternet": {
                  "description": "Indicates whether app includes Everyone On The Internet access. See [Sharing apps with Everyone on the Internet (EOTI).](https://help.quickbase.com/user-assistance/share_with_everyone_on_internet.html)",
                  "type": "boolean"
                },
                "variables": {
                  "description": "The app variables. See [About Application Variables](https://help.quickbase.com/user-assistance/variables.html)",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "name": {
                        "description": "Variable name.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Variable value.",
                        "type": "string"
                      }
                    }
                  }
                },
                "ancestorId": {
                  "description": "The id of the app from which this app was copied",
                  "type": "string"
                },
                "dataClassification": {
                  "description": "The Data Classification label assigned to the application. If Data Classification is not turned on, this will not be returned. If Data Classification is turned on, but application is not labeled, we return “None\".  Data Classification labels can be added in the Admin Console by a Realm Administrator for Platform+ plans.",
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Apps"
        ]
      }
    },
    "/tables": {
      "get": {
        "operationId": "getAppTables",
        "summary": "Get all tables for an app",
        "tags": [
          "Tables"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Table"
              }
            }
          }
        }
      }
    },
    "/tables/{tableId}": {
      "get": {
        "description": "Gets the properties of an individual table that is part of an application.",
        "operationId": "getTable",
        "summary": "Get a table",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "description": "The unique identifier of an app",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table.",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "name": "Example Table",
                "created": "2020-03-27T18:34:40Z",
                "updated": "2020-04-03T19:12:40Z",
                "alias": "_dbid_example_table",
                "description": "Table as an example.",
                "id": "bpqe82s0",
                "nextRecordId": 1,
                "nextFieldId": 1,
                "defaultSortFieldId": 2,
                "defaultSortOrder": "ASC",
                "keyFieldId": 3,
                "singleRecordName": "Example Record",
                "pluralRecordName": "Example Records",
                "sizeLimit": "150 MB",
                "spaceUsed": "17 MB",
                "spaceRemaining": "133 MB"
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "name": {
                  "description": "The name of the table.",
                  "type": "string"
                },
                "id": {
                  "description": "The unique identifier (dbid) of the table.",
                  "type": "string"
                },
                "alias": {
                  "description": "The automatically-created table alias for the table.",
                  "type": "string"
                },
                "description": {
                  "description": "The description of the table, as configured by an application administrator.",
                  "type": "string"
                },
                "created": {
                  "description": "The time and date when the table was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
                  "type": "string"
                },
                "updated": {
                  "description": "The time and date when the table schema or data was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
                  "type": "string"
                },
                "nextRecordId": {
                  "description": "The incremental Record ID that will be used when the next record is created, as determined when the API call was ran.",
                  "type": "integer"
                },
                "nextFieldId": {
                  "description": "The incremental Field ID that will be used when the next field is created, as determined when the API call was ran.",
                  "type": "integer"
                },
                "defaultSortFieldId": {
                  "description": "The id of the field that is configured for default sorting.",
                  "type": "integer"
                },
                "defaultSortOrder": {
                  "description": "The configuration of the default sort order on the table.",
                  "enum": [
                    "ASC",
                    "DESC"
                  ],
                  "type": "string"
                },
                "keyFieldId": {
                  "description": "The id of the field that is configured to be the key on this table, which is usually the Quickbase Record ID.",
                  "type": "integer"
                },
                "singleRecordName": {
                  "description": "The builder-configured singular noun of the table.",
                  "type": "string"
                },
                "pluralRecordName": {
                  "description": "The builder-configured plural noun of the table.",
                  "type": "string"
                },
                "sizeLimit": {
                  "description": "The size limit for the table.",
                  "type": "string"
                },
                "spaceUsed": {
                  "description": "The amount of space currently being used by the table.",
                  "type": "string"
                },
                "spaceRemaining": {
                  "description": "The amount of space remaining for use by the table.",
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Tables"
        ]
      },
      "post": {
        "description": "Updates the main properties of a specific table. Any properties of the table that you do not specify in the request body will remain unchanged.",
        "summary": "Update a table",
        "operationId": "updateTable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "description": "The unique identifier of an app",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table.",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "description": "The example below shows all the properties that can be changed with this request. Additional properties that you can see with the corresponding GET request cannot be set through this API.",
              "example": {
                "name": "My table",
                "description": "my first table",
                "singleRecordName": "record",
                "pluralRecordName": "records"
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "name": {
                  "description": "The name for the table.",
                  "type": "string"
                },
                "pluralRecordName": {
                  "description": "The plural noun for records in the table. If this value is not passed the default value is 'Records'.",
                  "type": "string"
                },
                "singleRecordName": {
                  "description": "The singular noun for records in the table. If this value is not passed the default value is 'Record'.",
                  "type": "string"
                },
                "description": {
                  "description": "The description for the table. If this value is not passed the default value is blank.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "name": "Example Table",
                "created": "2020-03-27T18:34:40Z",
                "updated": "2020-04-03T19:12:40Z",
                "alias": "_dbid_example_table",
                "description": "Table as an example.",
                "id": "bpqe82s0",
                "nextRecordId": 1,
                "nextFieldId": 1,
                "defaultSortFieldId": 2,
                "defaultSortOrder": "ASC",
                "keyFieldId": 3,
                "singleRecordName": "Example Record",
                "pluralRecordName": "Example Records",
                "sizeLimit": "150 MB",
                "spaceUsed": "17 MB",
                "spaceRemaining": "133 MB"
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "name": {
                  "description": "The name of the table.",
                  "type": "string"
                },
                "id": {
                  "description": "The unique identifier (dbid) of the table.",
                  "type": "string"
                },
                "alias": {
                  "description": "The automatically-created table alias for the table.",
                  "type": "string"
                },
                "description": {
                  "description": "The description of the table, as configured by an application administrator.",
                  "type": "string"
                },
                "created": {
                  "description": "The time and date when the table was created, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
                  "type": "string"
                },
                "updated": {
                  "description": "The time and date when the table schema or data was last updated, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
                  "type": "string"
                },
                "nextRecordId": {
                  "description": "The incremental Record ID that will be used when the next record is created, as determined when the API call was ran.",
                  "type": "integer"
                },
                "nextFieldId": {
                  "description": "The incremental Field ID that will be used when the next field is created, as determined when the API call was ran.",
                  "type": "integer"
                },
                "defaultSortFieldId": {
                  "description": "The id of the field that is configured for default sorting.",
                  "type": "integer"
                },
                "defaultSortOrder": {
                  "description": "The configuration of the default sort order on the table.",
                  "enum": [
                    "ASC",
                    "DESC"
                  ],
                  "type": "string"
                },
                "keyFieldId": {
                  "description": "The id of the field that is configured to be the key on this table, which is usually the Quickbase Record ID.",
                  "type": "integer"
                },
                "singleRecordName": {
                  "description": "The builder-configured singular noun of the table.",
                  "type": "string"
                },
                "pluralRecordName": {
                  "description": "The builder-configured plural noun of the table.",
                  "type": "string"
                },
                "sizeLimit": {
                  "description": "The size limit for the table.",
                  "type": "string"
                },
                "spaceUsed": {
                  "description": "The amount of space currently being used by the table.",
                  "type": "string"
                },
                "spaceRemaining": {
                  "description": "The amount of space remaining for use by the table.",
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Tables"
        ]
      },
      "delete": {
        "description": "Deletes a specific table in an application, including all of the data within it.",
        "operationId": "deleteTable",
        "summary": "Delete a table",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "description": "The unique identifier of an app",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table.",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "deletedTableId": "bck7gp3q2"
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "deletedTableId": {
                  "description": "The deleted table id.",
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Tables"
        ]
      }
    },
    "/tables/{tableId}/relationships": {
      "get": {
        "description": "Get a list of all relationships, and their definitions, for a specific table. Details are provided for the child side of relationships within a given application. Limited details are returned for cross-application relationships.",
        "operationId": "getRelationships",
        "summary": "Get all relationships",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "skip",
            "description": "The number of relationships to skip.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the child table.",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "metadata": {
                  "numRelationships": 1,
                  "skip": 0,
                  "totalRelationships": 1
                },
                "relationships": [
                  {
                    "childTableId": "bqqjnwsuy",
                    "foreignKeyField": {
                      "id": 6,
                      "label": "Related record",
                      "type": "numeric"
                    },
                    "id": 6,
                    "isCrossApp": false,
                    "lookupFields": [
                      {
                        "id": 3,
                        "label": "Name",
                        "type": "text"
                      }
                    ],
                    "parentTableId": "bck7gp3q2",
                    "summaryFields": [
                      {
                        "id": 8,
                        "label": "my summary field",
                        "type": "numeric"
                      }
                    ]
                  }
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "relationships"
              ],
              "properties": {
                "relationships": {
                  "description": "The relationships in a table.",
                  "type": "array",
                  "items": {
                    "example": {
                      "id": 6,
                      "foreignKeyField": {
                        "id": 6,
                        "label": "Related record",
                        "type": "numeric"
                      },
                      "lookupFields": [
                        {
                          "id": 7,
                          "label": "record - text field",
                          "type": "text"
                        }
                      ],
                      "isCrossApp": false,
                      "parentTableId": "bck7gp3q2",
                      "childTableId": "bck7gp3q3",
                      "summaryFields": [
                        {
                          "id": 8,
                          "label": "Summary of Record ID#2",
                          "type": "numeric"
                        }
                      ]
                    },
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                      "id",
                      "parentTableId",
                      "childTableId",
                      "isCrossApp"
                    ],
                    "properties": {
                      "id": {
                        "description": "The relationship id (foreign key field id).",
                        "type": "integer"
                      },
                      "parentTableId": {
                        "description": "The parent table id of the relationship.",
                        "type": "string"
                      },
                      "childTableId": {
                        "description": "The child table id of the relationship.",
                        "type": "string"
                      },
                      "foreignKeyField": {
                        "description": "The foreign key field information.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {
                          "id": {
                            "description": "Field id.",
                            "type": "integer"
                          },
                          "label": {
                            "description": "Field label.",
                            "type": "string"
                          },
                          "type": {
                            "description": "Field type.",
                            "type": "string"
                          }
                        }
                      },
                      "isCrossApp": {
                        "description": "Whether this is a cross-app relationship.",
                        "type": "boolean"
                      },
                      "lookupFields": {
                        "description": "The lookup fields array.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "description": "Field id.",
                              "type": "integer"
                            },
                            "label": {
                              "description": "Field label.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Field type.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "summaryFields": {
                        "description": "The summary fields array.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "description": "Field id.",
                              "type": "integer"
                            },
                            "label": {
                              "description": "Field label.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Field type.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "metadata": {
                  "description": "Additional information about the results that may be helpful.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "skip": {
                      "description": "The number of relationships to skip.",
                      "type": "integer"
                    },
                    "totalRelationships": {
                      "description": "The total number of relationships.",
                      "type": "integer"
                    },
                    "numRelationships": {
                      "description": "The number of relationships in the current response object.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tables"
        ]
      }
    },
    "/tables/{tableId}/relationship": {
      "post": {
        "description": "Creates a relationship in a table as well as lookup/summary fields. Relationships can only be created for tables within the same app.",
        "summary": "Create a relationship",
        "operationId": "createRelationship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table. This will be the child table.",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "example": {
                "parentTableId": "bck7gp3q2",
                "foreignKeyField": {
                  "label": "my relationship field"
                },
                "lookupFieldIds": [
                  1,
                  2,
                  3
                ],
                "summaryFields": [
                  {
                    "summaryFid": 3,
                    "label": "my first summary field",
                    "accumulationType": "AVG",
                    "where": "{'3'.EX.1}"
                  },
                  {
                    "summaryFid": 4,
                    "label": "my second summary field",
                    "accumulationType": "SUM"
                  }
                ]
              },
              "type": "object",
              "additionalProperties": false,
              "required": [
                "parentTableId"
              ],
              "properties": {
                "summaryFields": {
                  "description": "Array of summary field objects which will turn into summary fields in the parent table. When you specify the 'COUNT' accumulation type, you have to specify 0 as the summaryFid (or not set it in the request). 'DISTINCT-COUNT' requires that summaryFid be set to an actual fid.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                      "accumulationType"
                    ],
                    "properties": {
                      "summaryFid": {
                        "description": "The field id to summarize.",
                        "type": "number"
                      },
                      "label": {
                        "description": "The label for the summary field.",
                        "type": "string"
                      },
                      "accumulationType": {
                        "description": "The accumulation type for the summary field.",
                        "enum": [
                          "AVG",
                          "SUM",
                          "MAX",
                          "MIN",
                          "STD-DEV",
                          "COUNT",
                          "COMBINED-TEXT",
                          "COMBINED-USER",
                          "DISTINCT-COUNT"
                        ],
                        "type": "string"
                      },
                      "where": {
                        "description": "The filter, using the Quickbase query language, which determines the records to return.",
                        "type": "string"
                      }
                    }
                  }
                },
                "lookupFieldIds": {
                  "description": "Array of field ids in the parent table that will become lookup fields in the child table.",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "parentTableId": {
                  "description": "The parent table id for the relationship.",
                  "type": "string"
                },
                "foreignKeyField": {
                  "description": "This property is optional.  If it is not provided, the foreign key field will be created with the label ‘Related <record>’, where <record> is the name of a record in the parent table.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "label": {
                      "description": "The label for the foreign key field.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "id": 6,
                "foreignKeyField": {
                  "id": 6,
                  "label": "Related record",
                  "type": "numeric"
                },
                "lookupFields": [
                  {
                    "id": 7,
                    "label": "record - text field",
                    "type": "text"
                  }
                ],
                "isCrossApp": false,
                "parentTableId": "bck7gp3q2",
                "childTableId": "bck7gp3q3",
                "summaryFields": [
                  {
                    "id": 8,
                    "label": "Summary of Record ID#2",
                    "type": "numeric"
                  }
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "id",
                "parentTableId",
                "childTableId",
                "isCrossApp"
              ],
              "properties": {
                "id": {
                  "description": "The relationship id (foreign key field id).",
                  "type": "integer"
                },
                "parentTableId": {
                  "description": "The parent table id of the relationship.",
                  "type": "string"
                },
                "childTableId": {
                  "description": "The child table id of the relationship.",
                  "type": "string"
                },
                "foreignKeyField": {
                  "description": "The foreign key field information.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "id": {
                      "description": "Field id.",
                      "type": "integer"
                    },
                    "label": {
                      "description": "Field label.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Field type.",
                      "type": "string"
                    }
                  }
                },
                "isCrossApp": {
                  "description": "Whether this is a cross-app relationship.",
                  "type": "boolean"
                },
                "lookupFields": {
                  "description": "The lookup fields array.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "id": {
                        "description": "Field id.",
                        "type": "integer"
                      },
                      "label": {
                        "description": "Field label.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Field type.",
                        "type": "string"
                      }
                    }
                  }
                },
                "summaryFields": {
                  "description": "The summary fields array.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "id": {
                        "description": "Field id.",
                        "type": "integer"
                      },
                      "label": {
                        "description": "Field label.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Field type.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tables"
        ]
      }
    },
    "/tables/{tableId}/relationship/{relationshipId}": {
      "post": {
        "description": "Use this endpoint to add lookup fields and summary fields to an existing relationship. Updating a relationship will not delete existing lookup/summary fields.",
        "summary": "Update a relationship",
        "operationId": "updateRelationship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table. This will be the child table.",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "relationshipId",
            "description": "The relationship id. This is the field id of the reference field on the child table.",
            "required": true,
            "in": "path",
            "type": "number"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "example": {
                "lookupFieldIds": [
                  4,
                  5,
                  6
                ],
                "summaryFields": [
                  {
                    "summaryFid": 3,
                    "label": "my summary field",
                    "accumulationType": "COUNT",
                    "where": "{'3'.EX.1}"
                  }
                ]
              },
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "summaryFields": {
                  "description": "An array of objects, each representing a configuration of one field from the child table, that will become summary fields on the parent table. When you specify the 'COUNT' accumulation type, you have to specify 0 as the summaryFid (or not set it in the request). 'DISTINCT-COUNT' requires that summaryFid be set to an actual fid.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                      "accumulationType"
                    ],
                    "properties": {
                      "summaryFid": {
                        "description": "The field id to summarize.",
                        "type": "number"
                      },
                      "label": {
                        "description": "The label for the summary field.",
                        "type": "string"
                      },
                      "accumulationType": {
                        "description": "The accumulation type for the summary field.",
                        "enum": [
                          "AVG",
                          "SUM",
                          "MAX",
                          "MIN",
                          "STD-DEV",
                          "COUNT",
                          "COMBINED-TEXT",
                          "COMBINED-USER",
                          "DISTINCT-COUNT"
                        ],
                        "type": "string"
                      },
                      "where": {
                        "description": "The filter, using the Quickbase query language, which determines the records to return.",
                        "type": "string"
                      }
                    }
                  }
                },
                "lookupFieldIds": {
                  "description": "An array of field ids on the parent table that will become lookup fields on the child table.",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "id": 6,
                "foreignKeyField": {
                  "id": 6,
                  "label": "Related record",
                  "type": "numeric"
                },
                "lookupFields": [
                  {
                    "id": 7,
                    "label": "record - text field",
                    "type": "text"
                  }
                ],
                "isCrossApp": false,
                "parentTableId": "bck7gp3q2",
                "childTableId": "bck7gp3q3",
                "summaryFields": [
                  {
                    "id": 8,
                    "label": "Summary of Record ID#2",
                    "type": "numeric"
                  }
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "id",
                "parentTableId",
                "childTableId",
                "isCrossApp"
              ],
              "properties": {
                "id": {
                  "description": "The relationship id (foreign key field id).",
                  "type": "integer"
                },
                "parentTableId": {
                  "description": "The parent table id of the relationship.",
                  "type": "string"
                },
                "childTableId": {
                  "description": "The child table id of the relationship.",
                  "type": "string"
                },
                "foreignKeyField": {
                  "description": "The foreign key field information.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "id": {
                      "description": "Field id.",
                      "type": "integer"
                    },
                    "label": {
                      "description": "Field label.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Field type.",
                      "type": "string"
                    }
                  }
                },
                "isCrossApp": {
                  "description": "Whether this is a cross-app relationship.",
                  "type": "boolean"
                },
                "lookupFields": {
                  "description": "The lookup fields array.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "id": {
                        "description": "Field id.",
                        "type": "integer"
                      },
                      "label": {
                        "description": "Field label.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Field type.",
                        "type": "string"
                      }
                    }
                  }
                },
                "summaryFields": {
                  "description": "The summary fields array.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "id": {
                        "description": "Field id.",
                        "type": "integer"
                      },
                      "label": {
                        "description": "Field label.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Field type.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tables"
        ]
      },
      "delete": {
        "description": "Use this endpoint to delete an entire relationship, including all lookup and summary fields. The reference field in the relationship will not be deleted.",
        "summary": "Delete a relationship",
        "operationId": "deleteRelationship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table. This will be the child table.",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "relationshipId",
            "description": "The relationship id. This is the field id of the reference field on the child table.",
            "required": true,
            "in": "path",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "relationshipId": 6
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "relationshipId"
              ],
              "properties": {
                "relationshipId": {
                  "description": "The relationship id.",
                  "type": "integer"
                }
              }
            }
          }
        },
        "tags": [
          "Tables"
        ]
      }
    },
    "/reports": {
      "get": {
        "description": "Get the schema (properties) of all reports for a table. If the user running the API is an application administrator, the API will also return all personal reports with owner's user id.",
        "operationId": "getTableReports",
        "summary": "Get reports for a table",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "description": "The unique identifier of the table.",
            "required": true,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "description": "This is simple example of report schema for more details please refer [Report types page](../reportTypes)",
              "type": "array",
              "items": {
                "example": {
                  "value": {
                    "id": "5",
                    "name": "table-report",
                    "type": "table",
                    "description": "This is Table report.",
                    "query": {
                      "tableId": "bpweef42b",
                      "filter": "{6.CT.'FilterByThisValue'}",
                      "formulaFields": [
                        {
                          "id": -100,
                          "label": "NumericField",
                          "fieldType": "numeric",
                          "formula": "1+1",
                          "decimalPrecision": 4
                        }
                      ],
                      "fields": [
                        7
                      ],
                      "sortBy": [
                        {
                          "fieldId": 28,
                          "order": "ASC"
                        },
                        {
                          "fieldId": 3,
                          "order": "ASC"
                        }
                      ],
                      "groupBy": [
                        {
                          "fieldId": 3,
                          "grouping": "equal-values"
                        }
                      ]
                    },
                    "properties": {
                      "displayOnlyNewOrChangedRecords": true,
                      "columnProperties": [
                        {
                          "fieldId": -100,
                          "labelOverride": "Numeric Field Label"
                        }
                      ]
                    },
                    "usedLast": "2020-09-20T20:23:00Z",
                    "usedCount": 7
                  }
                },
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "id": {
                    "description": "The identifier of the report, unique to the table.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The configured name of the report.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of report in Quickbase (e.g., chart).",
                    "type": "string"
                  },
                  "description": {
                    "description": "The configured description of a report.",
                    "type": "string"
                  },
                  "ownerId": {
                    "description": "Optional, showed only for personal reports. The user ID of report owner.",
                    "type": "integer"
                  },
                  "query": {
                    "description": "The query definition as configured in Quickbase that gets executed when the report is run.",
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "tableId": {
                        "description": "The table identifier for the report.",
                        "type": "string"
                      },
                      "filter": {
                        "description": "Filter used to query for data.",
                        "type": "string"
                      },
                      "formulaFields": {
                        "description": "Calculated formula fields.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "description": "Formula field identifier.",
                              "type": "integer"
                            },
                            "label": {
                              "description": "Formula field label.",
                              "type": "string"
                            },
                            "fieldType": {
                              "description": "Resulting formula value type.",
                              "enum": [
                                "rich-text",
                                "text",
                                "numeric",
                                "currency",
                                "percent",
                                "rating",
                                "date",
                                "timestamp",
                                "timeofday",
                                "duration",
                                "checkbox",
                                "phone",
                                "email",
                                "user",
                                "multiuser",
                                "url"
                              ],
                              "type": "string"
                            },
                            "formula": {
                              "description": "Formula text.",
                              "type": "string"
                            },
                            "decimalPrecision": {
                              "description": "For numeric formula the number precision.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  },
                  "properties": {
                    "description": "A list of properties specific to the report type. To see a detailed description of the properties for each report type, See [Report Types.](../reportTypes)",
                    "type": "object",
                    "additionalProperties": true
                  },
                  "usedLast": {
                    "description": "The instant at which a report was last used.",
                    "type": "string"
                  },
                  "usedCount": {
                    "description": "The number of times a report has been used.",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{reportId}": {
      "get": {
        "description": "Get the schema (properties) of an individual report.",
        "operationId": "getReport",
        "summary": "Get a report",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "description": "The unique identifier of table.",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "reportId",
            "description": "The identifier of the report, unique to the table.",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "value": {
                  "id": "5",
                  "name": "table-report",
                  "type": "table",
                  "description": "This is Table report.",
                  "query": {
                    "tableId": "bpweef42b",
                    "filter": "{6.CT.'FilterByThisValue'}",
                    "formulaFields": [
                      {
                        "id": -100,
                        "label": "NumericField",
                        "fieldType": "numeric",
                        "formula": "1+1",
                        "decimalPrecision": 4
                      }
                    ],
                    "fields": [
                      7
                    ],
                    "sortBy": [
                      {
                        "fieldId": 28,
                        "order": "ASC"
                      },
                      {
                        "fieldId": 3,
                        "order": "ASC"
                      }
                    ],
                    "groupBy": [
                      {
                        "fieldId": 3,
                        "grouping": "equal-values"
                      }
                    ]
                  },
                  "properties": {
                    "displayOnlyNewOrChangedRecords": true,
                    "columnProperties": [
                      {
                        "fieldId": -100,
                        "labelOverride": "Numeric Field Label"
                      }
                    ]
                  },
                  "usedLast": "2020-09-20T20:23:00Z",
                  "usedCount": 7
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "description": "The identifier of the report, unique to the table.",
                  "type": "string"
                },
                "name": {
                  "description": "The configured name of the report.",
                  "type": "string"
                },
                "type": {
                  "description": "The type of report in Quickbase (e.g., chart).",
                  "type": "string"
                },
                "description": {
                  "description": "The configured description of a report.",
                  "type": "string"
                },
                "ownerId": {
                  "description": "Optional, showed only for personal reports. The user ID of report owner.",
                  "type": "integer"
                },
                "query": {
                  "description": "The query definition as configured in Quickbase that gets executed when the report is run.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "tableId": {
                      "description": "The table identifier for the report.",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filter used to query for data.",
                      "type": "string"
                    },
                    "formulaFields": {
                      "description": "Calculated formula fields.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {
                          "id": {
                            "description": "Formula field identifier.",
                            "type": "integer"
                          },
                          "label": {
                            "description": "Formula field label.",
                            "type": "string"
                          },
                          "fieldType": {
                            "description": "Resulting formula value type.",
                            "enum": [
                              "rich-text",
                              "text",
                              "numeric",
                              "currency",
                              "percent",
                              "rating",
                              "date",
                              "timestamp",
                              "timeofday",
                              "duration",
                              "checkbox",
                              "phone",
                              "email",
                              "user",
                              "multiuser",
                              "url"
                            ],
                            "type": "string"
                          },
                          "formula": {
                            "description": "Formula text.",
                            "type": "string"
                          },
                          "decimalPrecision": {
                            "description": "For numeric formula the number precision.",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "properties": {
                  "description": "A list of properties specific to the report type. To see a detailed description of the properties for each report type, See [Report Types.](../reportTypes)",
                  "type": "object",
                  "additionalProperties": true
                },
                "usedLast": {
                  "description": "The instant at which a report was last used.",
                  "type": "string"
                },
                "usedCount": {
                  "description": "The number of times a report has been used.",
                  "type": "integer"
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{reportId}/run": {
      "post": {
        "operationId": "runReport",
        "summary": "Run a report",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "generated",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportRunResponse"
              }
            }
          }
        }
      }
    },
    "/fields": {
      "get": {
        "operationId": "getFields",
        "summary": "Get all fields for a table",
        "tags": [
          "Fields"
        ],
        "parameters": [
          {
            "name": "tableId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeFieldPerms",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Field"
              }
            }
          }
        }
      }
    },
    "/fields/{fieldId}": {
      "get": {
        "description": "Gets the properties of an individual field, based on field id.  \nProperties present on all field types are returned at the top level. Properties unique to a specific type of field are returned under the 'properties' attribute. Please see [Field types page](../fieldInfo) for more details on the properties for each field type.",
        "summary": "Get field",
        "operationId": "getField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table.",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeFieldPerms",
            "description": "Set to 'true' if you'd like to get back the custom permissions for the field(s).",
            "required": false,
            "in": "query",
            "default": false,
            "type": "boolean"
          },
          {
            "name": "fieldId",
            "description": "The unique identifier (fid) of the field.",
            "required": true,
            "in": "path",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "id": 123,
                "label": "Field1",
                "fieldType": "text",
                "mode": "",
                "noWrap": false,
                "bold": false,
                "required": false,
                "appearsByDefault": false,
                "findEnabled": false,
                "unique": false,
                "doesDataCopy": false,
                "fieldHelp": "field help",
                "audited": false,
                "properties": {
                  "primaryKey": false,
                  "foreignKey": false,
                  "numLines": 1,
                  "maxLength": 0,
                  "appendOnly": false,
                  "allowHTML": false,
                  "allowMentions": false,
                  "sortAsGiven": false,
                  "carryChoices": true,
                  "allowNewChoices": false,
                  "formula": "",
                  "defaultValue": ""
                },
                "permissions": [
                  {
                    "permissionType": "View",
                    "role": "Viewer",
                    "roleId": 10
                  },
                  {
                    "permissionType": "None",
                    "role": "Participant",
                    "roleId": 11
                  },
                  {
                    "permissionType": "Modify",
                    "role": "Administrator",
                    "roleId": 12
                  }
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "description": "The id of the field, unique to this table.",
                  "type": "integer",
                  "format": "int64"
                },
                "fieldType": {
                  "description": "The type of field, as described [here](https://help.quickbase.com/user-assistance/field_types.html).",
                  "type": "string"
                },
                "mode": {
                  "description": "For derived fields, this will be 'lookup', 'summary', or 'formula', to indicate the type of derived field.  For non-derived fields, this will be blank.",
                  "type": "string"
                },
                "label": {
                  "description": "The label (name) of the field.",
                  "type": "string"
                },
                "noWrap": {
                  "description": "Indicates if the field is configured to not wrap when displayed in the product.",
                  "type": "boolean"
                },
                "bold": {
                  "description": "Indicates if the field is configured to display in bold in the product.",
                  "type": "boolean"
                },
                "required": {
                  "description": "Indicates if the field is marked required.",
                  "type": "boolean"
                },
                "appearsByDefault": {
                  "description": "Indicates if the field is marked as a default in reports.",
                  "type": "boolean"
                },
                "findEnabled": {
                  "description": "Indicates if the field is marked as searchable.",
                  "type": "boolean"
                },
                "unique": {
                  "description": "Indicates if the field is marked unique.",
                  "type": "boolean"
                },
                "doesDataCopy": {
                  "description": "Indicates if the field data will copy when a user copies the record.",
                  "type": "boolean"
                },
                "fieldHelp": {
                  "description": "The configured help text shown to users within the product.",
                  "type": "string"
                },
                "audited": {
                  "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs.",
                  "type": "boolean"
                },
                "properties": {
                  "description": "Additional properties for the field. Please see [Field type details](../fieldInfo) page for more details on the properties for each field type.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "allowMentions": {
                      "description": "If someone can @mention users in the rich text field to generate an email notification.",
                      "type": "boolean"
                    },
                    "comments": {
                      "description": "The comments entered on the field properties by an administrator.",
                      "type": "string"
                    },
                    "doesTotal": {
                      "description": "Whether this field totals in reports within the product.",
                      "type": "boolean"
                    },
                    "autoSave": {
                      "description": "Whether the link field will auto save.",
                      "type": "boolean"
                    },
                    "defaultValueLuid": {
                      "description": "Default user id value.",
                      "type": "integer"
                    },
                    "useI18NFormat": {
                      "description": "Whether phone numbers should be in E.164 standard international format.",
                      "type": "boolean"
                    },
                    "maxVersions": {
                      "description": "The maximum number of versions configured for a file attachment.",
                      "type": "integer"
                    },
                    "carryChoices": {
                      "description": "Whether the field should carry its multiple choice fields when copied.",
                      "type": "boolean"
                    },
                    "format": {
                      "description": "The format to display time.",
                      "type": "integer"
                    },
                    "maxLength": {
                      "description": "The maximum number of characters allowed for entry in Quickbase for this field.",
                      "type": "integer"
                    },
                    "linkText": {
                      "description": "The configured text value that replaces the URL that users see within the product.",
                      "type": "string"
                    },
                    "parentFieldId": {
                      "description": "The id of the parent composite field, when applicable.",
                      "type": "integer"
                    },
                    "displayTimezone": {
                      "description": "Indicates whether to display the timezone within the product.",
                      "type": "boolean"
                    },
                    "summaryTargetFieldId": {
                      "description": "The id of the field that is used to aggregate values from the child, when applicable. This displays 0 if the summary function doesn’t require a field selection (like count).",
                      "type": "integer"
                    },
                    "allowNewChoices": {
                      "description": "Indicates if users can add new choices to a selection list.",
                      "type": "boolean"
                    },
                    "masterChoiceFieldId": {
                      "description": "The id of the field that is the reference in the relationship.",
                      "type": "integer"
                    },
                    "defaultToday": {
                      "description": "Indicates if the field value is defaulted today for new records.",
                      "type": "boolean"
                    },
                    "units": {
                      "description": "The units label.",
                      "type": "string"
                    },
                    "lookupTargetFieldId": {
                      "description": "The id of the field that is the target on the master table for this lookup.",
                      "type": "integer"
                    },
                    "summaryFunction": {
                      "description": "The summary accumulation function type.",
                      "enum": [
                        "AVG",
                        "SUM",
                        "MAX",
                        "MIN",
                        "STD-DEV",
                        "COUNT",
                        "COMBINED-TEXT",
                        "COMBINED-USER",
                        "DISTINCT-COUNT"
                      ],
                      "type": "string"
                    },
                    "sourceFieldId": {
                      "description": "The id of the source field.",
                      "type": "integer"
                    },
                    "masterTableTag": {
                      "description": "The table alias for the master table in the relationship this field is part of.",
                      "type": "string"
                    },
                    "doesAverage": {
                      "description": "Whether this field averages in reports within the product.",
                      "type": "boolean"
                    },
                    "formula": {
                      "description": "The formula of the field as configured in Quickbase.",
                      "type": "string"
                    },
                    "decimalPlaces": {
                      "description": "The number of decimal places displayed in the product for this field.",
                      "type": "integer"
                    },
                    "defaultCountryCode": {
                      "description": "Controls the default country shown on international phone widgets on forms. Country code should be entered in the ISO 3166-1 alpha-2 format.",
                      "type": "string"
                    },
                    "seeVersions": {
                      "description": "Indicates if the user can see other versions, aside from the most recent, of a file attachment within the product.",
                      "type": "boolean"
                    },
                    "displayMonth": {
                      "description": "How to display months.",
                      "type": "string"
                    },
                    "numLines": {
                      "description": "The number of lines shown in Quickbase for this text field.",
                      "type": "integer"
                    },
                    "displayEmail": {
                      "description": "How the email is displayed.",
                      "type": "string"
                    },
                    "defaultKind": {
                      "description": "The user default type.",
                      "type": "string"
                    },
                    "coverText": {
                      "description": "An alternate user friendly text that can be used to display a link in the browser.",
                      "type": "string"
                    },
                    "currencySymbol": {
                      "description": "The current symbol used when displaying field values within the product.",
                      "type": "string"
                    },
                    "masterChoiceTableId": {
                      "description": "The id of the table that is the master in this relationship.",
                      "type": "string"
                    },
                    "targetFieldId": {
                      "description": "The id of the target field.",
                      "type": "integer"
                    },
                    "displayUser": {
                      "description": "The configured option for how users display within the product.",
                      "type": "string"
                    },
                    "blankIsZero": {
                      "description": "Whether a blank value is treated the same as 0 in calculations within the product.",
                      "type": "boolean"
                    },
                    "exact": {
                      "description": "Whether an exact match is required for a report link.",
                      "type": "boolean"
                    },
                    "startField": {
                      "description": "The start field id.",
                      "type": "integer"
                    },
                    "defaultDomain": {
                      "description": "Default email domain.",
                      "type": "string"
                    },
                    "defaultValue": {
                      "description": "The default value configured for a field when a new record is added.",
                      "type": "string"
                    },
                    "choicesLuid": {
                      "description": "List of user choices.",
                      "type": "array"
                    },
                    "abbreviate": {
                      "description": "Don't show the URL protocol when showing the URL.",
                      "type": "boolean"
                    },
                    "xmlTag": {
                      "description": "The field's xml tag.",
                      "type": "string"
                    },
                    "targetTableName": {
                      "description": "The field's target table name.",
                      "type": "string"
                    },
                    "numberFormat": {
                      "description": "The format used for displaying numeric values in the product (decimal, separators, digit group).",
                      "type": "integer"
                    },
                    "appearsAs": {
                      "description": "The link text, if empty, the url will be used as link text.",
                      "type": "string"
                    },
                    "width": {
                      "description": "The field's html input width in the product.",
                      "type": "integer"
                    },
                    "currencyFormat": {
                      "description": "The currency format used when displaying field values within the product.",
                      "enum": [
                        "left",
                        "right",
                        "middle"
                      ],
                      "type": "string"
                    },
                    "foreignKey": {
                      "description": "Indicates if the field is a foreign key (or reference field) in a relationship.",
                      "type": "boolean"
                    },
                    "displayDayOfWeek": {
                      "description": "Indicates whether to display the day of the week within the product.",
                      "type": "boolean"
                    },
                    "summaryReferenceFieldId": {
                      "description": "The id of the field that is the reference in the relationship for this summary.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "commaStart": {
                      "description": "The number of digits before commas display in the product, when applicable.",
                      "type": "integer"
                    },
                    "choices": {
                      "description": "An array of entries that exist for a field that offers choices to the user.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "targetTableId": {
                      "description": "The id of the target table.",
                      "type": "string"
                    },
                    "displayRelative": {
                      "description": "Whether to display time as relative.",
                      "type": "boolean"
                    },
                    "compositeFields": {
                      "description": "An array of the fields that make up a composite field (e.g., address).",
                      "type": "array"
                    },
                    "displayCheckboxAsText": {
                      "description": "Indicates whether the checkbox values will be shown as text in reports.",
                      "type": "boolean"
                    },
                    "versionMode": {
                      "description": "Version modes for files. Keep all versions vs keep last version.",
                      "enum": [
                        "keepallversions",
                        "keeplastversions"
                      ],
                      "type": "string"
                    },
                    "displayTime": {
                      "description": "Indicates whether to display the time, in addition to the date.",
                      "type": "boolean"
                    },
                    "durationField": {
                      "description": "The duration field id.",
                      "type": "integer"
                    },
                    "snapFieldId": {
                      "description": "The id of the field that is used to snapshot values from, when applicable.",
                      "type": "integer"
                    },
                    "hours24": {
                      "description": "Indicates whether or not to display time in the 24-hour format within the product.",
                      "type": "boolean"
                    },
                    "sortAlpha": {
                      "description": "Whether to sort alphabetically, default sort is by record ID.",
                      "type": "boolean"
                    },
                    "sortAsGiven": {
                      "description": "Indicates if the listed entries sort as entered vs alphabetically.",
                      "type": "boolean"
                    },
                    "hasExtension": {
                      "description": "Whether this field has a phone extension.",
                      "type": "boolean"
                    },
                    "workWeek": {
                      "description": "The work week type.",
                      "type": "integer"
                    },
                    "useNewWindow": {
                      "description": "Indicates if the URL should open a new window when a user clicks it within the product.",
                      "type": "boolean"
                    },
                    "appendOnly": {
                      "description": "Whether this field is append only.",
                      "type": "boolean"
                    },
                    "displayAsLink": {
                      "description": "Indicates if a field that is part of the relationship should be shown as a hyperlink to the parent record within the product.",
                      "type": "boolean"
                    },
                    "allowHTML": {
                      "description": "Whether this field allows html.",
                      "type": "boolean"
                    },
                    "lookupReferenceFieldId": {
                      "description": "The id of the field that is the reference in the relationship for this lookup.",
                      "type": "integer"
                    }
                  }
                },
                "permissions": {
                  "description": "Field Permissions for different roles.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "role": {
                        "description": "The role associated with a given permission for the field",
                        "type": "string"
                      },
                      "permissionType": {
                        "description": "The permission given to the role for this field",
                        "type": "string"
                      },
                      "roleId": {
                        "description": "The Id of the given role",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Fields"
        ]
      },
      "post": {
        "description": "Updates the properties and custom permissions of a field. The attempt to update certain properties might cause existing data to no longer obey the field’s new properties and may be rejected. See the descriptions of required, unique, and choices, below, for specific situations. Any properties of the field that you do not specify in the request body will remain unchanged.",
        "summary": "Update a field",
        "operationId": "updateField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "description": "The unique identifier of the table.",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "fieldId",
            "description": "The unique identifier (fid) of the field.",
            "required": true,
            "in": "path",
            "type": "integer"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "description": "The example below shows all the properties that can be changed with this request. Additional properties that you can see with the corresponding GET request cannot be set through this API.",
              "example": {
                "label": "Field1",
                "noWrap": false,
                "bold": false,
                "required": true,
                "appearsByDefault": false,
                "findEnabled": false,
                "unique": true,
                "fieldHelp": "field help",
                "addToForms": true,
                "properties": {
                  "numLines": 1,
                  "maxLength": 0,
                  "appendOnly": false,
                  "sortAsGiven": false
                },
                "permissions": [
                  {
                    "role": "Viewer",
                    "permissionType": "View",
                    "roleId": 10
                  },
                  {
                    "role": "Participant",
                    "permissionType": "None",
                    "roleId": 11
                  },
                  {
                    "role": "Administrator",
                    "permissionType": "Modify",
                    "roleId": 12
                  }
                ]
              },
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "audited": {
                  "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs. You can only set this property to \"true\" if the app has audit logs enabled. See Enable data change logs under [Quickbase Audit Logs](https://help.quickbase.com/user-assistance/audit_logs.html).",
                  "type": "boolean"
                },
                "fieldHelp": {
                  "description": "The configured help text shown to users within the product.",
                  "type": "string"
                },
                "bold": {
                  "description": "Indicates if the field is configured to display in bold in the product.",
                  "type": "boolean"
                },
                "required": {
                  "description": "Indicates if the field is required (i.e. if every record must have a non-null value in this field). If you attempt to change a field from not-required to required, and the table currently contains records that have null values in that field, you will get an error indicating that there are null values of the field. In this case you need to find and update those records with null values of the field before changing the field to required.",
                  "type": "boolean"
                },
                "properties": {
                  "description": "Specific field properties.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "allowMentions": {
                      "description": "If someone can @mention users in the rich text field to generate an email notification.",
                      "type": "boolean"
                    },
                    "comments": {
                      "description": "The comments entered on the field properties by an administrator.",
                      "type": "string"
                    },
                    "doesTotal": {
                      "description": "Whether this field totals in reports within the product.",
                      "type": "boolean"
                    },
                    "autoSave": {
                      "description": "Whether the link field will auto save.",
                      "type": "boolean"
                    },
                    "defaultValueLuid": {
                      "description": "Default user id value.",
                      "type": "integer"
                    },
                    "useI18NFormat": {
                      "description": "Whether phone numbers should be in E.164 standard international format",
                      "type": "boolean"
                    },
                    "maxVersions": {
                      "description": "The maximum number of versions configured for a file attachment.",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 1
                    },
                    "format": {
                      "description": "The format to display time.",
                      "type": "integer"
                    },
                    "carryChoices": {
                      "description": "Whether the field should carry its multiple choice fields when copied.",
                      "type": "boolean"
                    },
                    "maxLength": {
                      "description": "The maximum number of characters allowed for entry in Quickbase for this field.",
                      "type": "integer"
                    },
                    "linkText": {
                      "description": "The configured text value that replaces the URL that users see within the product.",
                      "type": "string"
                    },
                    "parentFieldId": {
                      "description": "The id of the parent composite field, when applicable.",
                      "type": "integer"
                    },
                    "displayTimezone": {
                      "description": "Indicates whether to display the timezone within the product.",
                      "type": "boolean"
                    },
                    "summaryTargetFieldId": {
                      "description": "The id of the field that is used to aggregate values from the child, when applicable. This displays 0 if the summary function doesn’t require a field selection (like count).",
                      "type": "integer"
                    },
                    "allowNewChoices": {
                      "description": "Indicates if users can add new choices to a selection list.",
                      "type": "boolean"
                    },
                    "defaultToday": {
                      "description": "Indicates if the field value is defaulted today for new records.",
                      "type": "boolean"
                    },
                    "units": {
                      "description": "The units label.",
                      "type": "string"
                    },
                    "openTargetIn": {
                      "description": "Indicates which target the URL should open in when a user clicks it within the product.",
                      "enum": [
                        "sameWindow",
                        "newWindow",
                        "popup"
                      ],
                      "type": "string"
                    },
                    "lookupTargetFieldId": {
                      "description": "The id of the field that is the target on the parent table for this lookup.",
                      "type": "integer"
                    },
                    "summaryFunction": {
                      "description": "The accumulation type for the summary field.",
                      "enum": [
                        "AVG",
                        "SUM",
                        "MAX",
                        "MIN",
                        "STD-DEV",
                        "COUNT",
                        "COMBINED-TEXT",
                        "COMBINED-USER",
                        "DISTINCT-COUNT"
                      ],
                      "type": "string"
                    },
                    "sourceFieldId": {
                      "description": "The id of the source field.",
                      "type": "integer"
                    },
                    "doesAverage": {
                      "description": "Whether this field averages in reports within the product.",
                      "type": "boolean"
                    },
                    "formula": {
                      "description": "The formula of the field as configured in Quickbase.",
                      "type": "string"
                    },
                    "decimalPlaces": {
                      "description": "The number of decimal places displayed in the product for this field.",
                      "type": "integer"
                    },
                    "defaultCountryCode": {
                      "description": "Controls the default country shown on international phone widgets on forms. Country code should be entered in the ISO 3166-1 alpha-2 format.",
                      "type": "string"
                    },
                    "displayMonth": {
                      "description": "How to display months.",
                      "type": "string"
                    },
                    "seeVersions": {
                      "description": "Indicates if the user can see other versions, aside from the most recent, of a file attachment within the product.",
                      "type": "boolean"
                    },
                    "numLines": {
                      "description": "The number of lines shown in Quickbase for this text field.",
                      "type": "integer"
                    },
                    "defaultKind": {
                      "description": "The user default type.",
                      "type": "string"
                    },
                    "displayEmail": {
                      "description": "How the email is displayed.",
                      "type": "string"
                    },
                    "coverText": {
                      "description": "An alternate user friendly text that can be used to display a link in the browser.",
                      "type": "string"
                    },
                    "currencySymbol": {
                      "description": "The current symbol used when displaying field values within the product.",
                      "type": "string"
                    },
                    "summaryQuery": {
                      "description": "The summary query.",
                      "type": "string"
                    },
                    "targetFieldId": {
                      "description": "The id of the target field.",
                      "type": "integer"
                    },
                    "displayUser": {
                      "description": "The configured option for how users display within the product.",
                      "type": "string"
                    },
                    "blankIsZero": {
                      "description": "Whether a blank value is treated the same as 0 in calculations within the product.",
                      "type": "boolean"
                    },
                    "exact": {
                      "description": "Whether an exact match is required for a report link.",
                      "type": "boolean"
                    },
                    "defaultDomain": {
                      "description": "Default email domain.",
                      "type": "string"
                    },
                    "defaultValue": {
                      "description": "The default value configured for a field when a new record is added.",
                      "type": "string"
                    },
                    "abbreviate": {
                      "description": "Don't show the URL protocol when showing the URL.",
                      "type": "boolean"
                    },
                    "numberFormat": {
                      "description": "The format used for displaying numeric values in the product (decimal, separators, digit group).",
                      "type": "integer"
                    },
                    "targetTableName": {
                      "description": "The field's target table name.",
                      "type": "string"
                    },
                    "appearsAs": {
                      "description": "The link text, if empty, the url will be used as link text.",
                      "type": "string"
                    },
                    "width": {
                      "description": "The field's html input width in the product.",
                      "type": "integer"
                    },
                    "currencyFormat": {
                      "description": "The currency format used when displaying field values within the product.",
                      "enum": [
                        "left",
                        "right",
                        "middle"
                      ],
                      "type": "string"
                    },
                    "displayDayOfWeek": {
                      "description": "Indicates whether to display the day of the week within the product.",
                      "type": "boolean"
                    },
                    "summaryReferenceFieldId": {
                      "description": "The id of the field that is the reference in the relationship for this summary.",
                      "type": "integer"
                    },
                    "commaStart": {
                      "description": "The number of digits before commas display in the product, when applicable.",
                      "type": "integer"
                    },
                    "choices": {
                      "description": "An array of entries that exist for a field that offers choices to the user. Note that these choices refer to the valid values of any records added in the future. You are allowed to remove values from the list of choices even if there are existing records with those values in this field. They will be displayed in red when users look at the data in the browser but there is no other effect. While updating a field with this property, the old choices are removed and replaced by the new choices.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "targetTableId": {
                      "description": "The id of the target table.",
                      "type": "string"
                    },
                    "displayRelative": {
                      "description": "Whether to display time as relative.",
                      "type": "boolean"
                    },
                    "compositeFields": {
                      "description": "An array of the fields that make up a composite field (e.g., address).",
                      "type": "array"
                    },
                    "displayCheckboxAsText": {
                      "description": "Indicates whether the checkbox values will be shown as text in reports.",
                      "type": "boolean"
                    },
                    "summaryTableId": {
                      "description": "The table the summary field references fields from.",
                      "type": "string"
                    },
                    "displayTime": {
                      "description": "Indicates whether to display the time, in addition to the date.",
                      "type": "boolean"
                    },
                    "versionMode": {
                      "description": "Version modes for files. Keep all versions vs keep last version.",
                      "enum": [
                        "keepallversions",
                        "keeplastversions"
                      ],
                      "type": "string"
                    },
                    "snapFieldId": {
                      "description": "The id of the field that is used to snapshot values from, when applicable.",
                      "type": "integer"
                    },
                    "hours24": {
                      "description": "Indicates whether or not to display time in the 24-hour format within the product.",
                      "type": "boolean"
                    },
                    "sortAlpha": {
                      "description": "Whether to sort alphabetically, default sort is by record ID.",
                      "type": "boolean"
                    },
                    "sortAsGiven": {
                      "description": "Indicates if the listed entries sort as entered vs alphabetically.",
                      "type": "boolean"
                    },
                    "hasExtension": {
                      "description": "Whether this field has a phone extension.",
                      "type": "boolean"
                    },
                    "useNewWindow": {
                      "description": "Indicates if the file should open a new window when a user clicks it within the product.",
                      "type": "boolean"
                    },
                    "appendOnly": {
                      "description": "Whether this field is append only.",
                      "type": "boolean"
                    },
                    "displayAsLink": {
                      "description": "Indicates if a field that is part of the relationship should be shown as a hyperlink to the parent record within the product.",
                      "type": "boolean"
                    },
                    "lookupReferenceFieldId": {
                      "description": "The id of the field that is the reference in the relationship for this lookup.",
                      "type": "integer"
                    }
                  }
                },
                "appearsByDefault": {
                  "description": "Indicates if the field is marked as a default in reports.",
                  "type": "boolean"
                },
                "unique": {
                  "description": "Indicates if every record in the table must contain a unique value of this field. If you attempt to change a field from not-unique to unique, and the table currently contains records with the same value of this field, you will get an error. In this case you need to find and update those records with duplicate values of the field before changing the field to unique.",
                  "type": "boolean"
                },
                "permissions": {
                  "description": "Field Permissions for different roles.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "role": {
                        "description": "The role associated with a given permission for the field",
                        "type": "string"
                      },
                      "permissionType": {
                        "description": "The permission given to the role for this field",
                        "type": "string"
                      },
                      "roleId": {
                        "description": "The Id of the given role",
                        "type": "integer"
                      }
                    }
                  }
                },
                "addToForms": {
                  "description": "Whether the field you are adding should appear on forms.",
                  "type": "boolean"
                },
                "label": {
                  "description": "The label (name) of the field.",
                  "type": "string"
                },
                "findEnabled": {
                  "description": "Indicates if the field is marked as searchable.",
                  "type": "boolean"
                },
                "noWrap": {
                  "description": "Indicates if the field is configured to not wrap when displayed in the product.",
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "id": 123,
                "label": "Field1",
                "fieldType": "text",
                "mode": "",
                "noWrap": false,
                "bold": false,
                "required": false,
                "appearsByDefault": false,
                "findEnabled": false,
                "unique": false,
                "doesDataCopy": false,
                "fieldHelp": "field help",
                "audited": false,
                "properties": {
                  "primaryKey": false,
                  "foreignKey": false,
                  "numLines": 1,
                  "maxLength": 0,
                  "appendOnly": false,
                  "allowHTML": false,
                  "allowMentions": false,
                  "sortAsGiven": false,
                  "carryChoices": true,
                  "allowNewChoices": false,
                  "formula": "",
                  "defaultValue": ""
                },
                "permissions": [
                  {
                    "permissionType": "View",
                    "role": "Viewer",
                    "roleId": 10
                  },
                  {
                    "permissionType": "None",
                    "role": "Participant",
                    "roleId": 11
                  },
                  {
                    "permissionType": "Modify",
                    "role": "Administrator",
                    "roleId": 12
                  }
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "description": "The id of the field, unique to this table.",
                  "type": "integer",
                  "format": "int64"
                },
                "fieldType": {
                  "description": "The type of field, as described [here](https://help.quickbase.com/user-assistance/field_types.html).",
                  "type": "string"
                },
                "mode": {
                  "description": "For derived fields, this will be 'lookup', 'summary', or 'formula', to indicate the type of derived field.  For non-derived fields, this will be blank.",
                  "type": "string"
                },
                "label": {
                  "description": "The label (name) of the field.",
                  "type": "string"
                },
                "noWrap": {
                  "description": "Indicates if the field is configured to not wrap when displayed in the product.",
                  "type": "boolean"
                },
                "bold": {
                  "description": "Indicates if the field is configured to display in bold in the product.",
                  "type": "boolean"
                },
                "required": {
                  "description": "Indicates if the field is marked required.",
                  "type": "boolean"
                },
                "appearsByDefault": {
                  "description": "Indicates if the field is marked as a default in reports.",
                  "type": "boolean"
                },
                "findEnabled": {
                  "description": "Indicates if the field is marked as searchable.",
                  "type": "boolean"
                },
                "unique": {
                  "description": "Indicates if the field is marked unique.",
                  "type": "boolean"
                },
                "doesDataCopy": {
                  "description": "Indicates if the field data will copy when a user copies the record.",
                  "type": "boolean"
                },
                "fieldHelp": {
                  "description": "The configured help text shown to users within the product.",
                  "type": "string"
                },
                "audited": {
                  "description": "Indicates if the field is being tracked as part of Quickbase Audit Logs.",
                  "type": "boolean"
                },
                "properties": {
                  "description": "Additional properties for the field. Please see [Field type details](../fieldInfo) page for more details on the properties for each field type.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "allowMentions": {
                      "description": "If someone can @mention users in the rich text field to generate an email notification.",
                      "type": "boolean"
                    },
                    "comments": {
                      "description": "The comments entered on the field properties by an administrator.",
                      "type": "string"
                    },
                    "doesTotal": {
                      "description": "Whether this field totals in reports within the product.",
                      "type": "boolean"
                    },
                    "autoSave": {
                      "description": "Whether the link field will auto save.",
                      "type": "boolean"
                    },
                    "defaultValueLuid": {
                      "description": "Default user id value.",
                      "type": "integer"
                    },
                    "useI18NFormat": {
                      "description": "Whether phone numbers should be in E.164 standard international format.",
                      "type": "boolean"
                    },
                    "maxVersions": {
                      "description": "The maximum number of versions configured for a file attachment.",
                      "type": "integer"
                    },
                    "carryChoices": {
                      "description": "Whether the field should carry its multiple choice fields when copied.",
                      "type": "boolean"
                    },
                    "format": {
                      "description": "The format to display time.",
                      "type": "integer"
                    },
                    "maxLength": {
                      "description": "The maximum number of characters allowed for entry in Quickbase for this field.",
                      "type": "integer"
                    },
                    "linkText": {
                      "description": "The configured text value that replaces the URL that users see within the product.",
                      "type": "string"
                    },
                    "parentFieldId": {
                      "description": "The id of the parent composite field, when applicable.",
                      "type": "integer"
                    },
                    "displayTimezone": {
                      "description": "Indicates whether to display the timezone within the product.",
                      "type": "boolean"
                    },
                    "summaryTargetFieldId": {
                      "description": "The id of the field that is used to aggregate values from the child, when applicable. This displays 0 if the summary function doesn’t require a field selection (like count).",
                      "type": "integer"
                    },
                    "allowNewChoices": {
                      "description": "Indicates if users can add new choices to a selection list.",
                      "type": "boolean"
                    },
                    "masterChoiceFieldId": {
                      "description": "The id of the field that is the reference in the relationship.",
                      "type": "integer"
                    },
                    "defaultToday": {
                      "description": "Indicates if the field value is defaulted today for new records.",
                      "type": "boolean"
                    },
                    "units": {
                      "description": "The units label.",
                      "type": "string"
                    },
                    "lookupTargetFieldId": {
                      "description": "The id of the field that is the target on the master table for this lookup.",
                      "type": "integer"
                    },
                    "summaryFunction": {
                      "description": "The summary accumulation function type.",
                      "enum": [
                        "AVG",
                        "SUM",
                        "MAX",
                        "MIN",
                        "STD-DEV",
                        "COUNT",
                        "COMBINED-TEXT",
                        "COMBINED-USER",
                        "DISTINCT-COUNT"
                      ],
                      "type": "string"
                    },
                    "sourceFieldId": {
                      "description": "The id of the source field.",
                      "type": "integer"
                    },
                    "masterTableTag": {
                      "description": "The table alias for the master table in the relationship this field is part of.",
                      "type": "string"
                    },
                    "doesAverage": {
                      "description": "Whether this field averages in reports within the product.",
                      "type": "boolean"
                    },
                    "formula": {
                      "description": "The formula of the field as configured in Quickbase.",
                      "type": "string"
                    },
                    "decimalPlaces": {
                      "description": "The number of decimal places displayed in the product for this field.",
                      "type": "integer"
                    },
                    "defaultCountryCode": {
                      "description": "Controls the default country shown on international phone widgets on forms. Country code should be entered in the ISO 3166-1 alpha-2 format.",
                      "type": "string"
                    },
                    "seeVersions": {
                      "description": "Indicates if the user can see other versions, aside from the most recent, of a file attachment within the product.",
                      "type": "boolean"
                    },
                    "displayMonth": {
                      "description": "How to display months.",
                      "type": "string"
                    },
                    "numLines": {
                      "description": "The number of lines shown in Quickbase for this text field.",
                      "type": "integer"
                    },
                    "displayEmail": {
                      "description": "How the email is displayed.",
                      "type": "string"
                    },
                    "defaultKind": {
                      "description": "The user default type.",
                      "type": "string"
                    },
                    "coverText": {
                      "description": "An alternate user friendly text that can be used to display a link in the browser.",
                      "type": "string"
                    },
                    "currencySymbol": {
                      "description": "The current symbol used when displaying field values within the product.",
                      "type": "string"
                    },
                    "masterChoiceTableId": {
                      "description": "The id of the table that is the master in this relationship.",
                      "type": "string"
                    },
                    "targetFieldId": {
                      "description": "The id of the target field.",
                      "type": "integer"
                    },
                    "displayUser": {
                      "description": "The configured option for how users display within the product.",
                      "type": "string"
                    },
                    "blankIsZero": {
                      "description": "Whether a blank value is treated the same as 0 in calculations within the product.",
                      "type": "boolean"
                    },
                    "exact": {
                      "description": "Whether an exact match is required for a report link.",
                      "type": "boolean"
                    },
                    "startField": {
                      "description": "The start field id.",
                      "type": "integer"
                    },
                    "defaultDomain": {
                      "description": "Default email domain.",
                      "type": "string"
                    },
                    "defaultValue": {
                      "description": "The default value configured for a field when a new record is added.",
                      "type": "string"
                    },
                    "choicesLuid": {
                      "description": "List of user choices.",
                      "type": "array"
                    },
                    "abbreviate": {
                      "description": "Don't show the URL protocol when showing the URL.",
                      "type": "boolean"
                    },
                    "xmlTag": {
                      "description": "The field's xml tag.",
                      "type": "string"
                    },
                    "targetTableName": {
                      "description": "The field's target table name.",
                      "type": "string"
                    },
                    "numberFormat": {
                      "description": "The format used for displaying numeric values in the product (decimal, separators, digit group).",
                      "type": "integer"
                    },
                    "appearsAs": {
                      "description": "The link text, if empty, the url will be used as link text.",
                      "type": "string"
                    },
                    "width": {
                      "description": "The field's html input width in the product.",
                      "type": "integer"
                    },
                    "currencyFormat": {
                      "description": "The currency format used when displaying field values within the product.",
                      "enum": [
                        "left",
                        "right",
                        "middle"
                      ],
                      "type": "string"
                    },
                    "foreignKey": {
                      "description": "Indicates if the field is a foreign key (or reference field) in a relationship.",
                      "type": "boolean"
                    },
                    "displayDayOfWeek": {
                      "description": "Indicates whether to display the day of the week within the product.",
                      "type": "boolean"
                    },
                    "summaryReferenceFieldId": {
                      "description": "The id of the field that is the reference in the relationship for this summary.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "commaStart": {
                      "description": "The number of digits before commas display in the product, when applicable.",
                      "type": "integer"
                    },
                    "choices": {
                      "description": "An array of entries that exist for a field that offers choices to the user.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "targetTableId": {
                      "description": "The id of the target table.",
                      "type": "string"
                    },
                    "displayRelative": {
                      "description": "Whether to display time as relative.",
                      "type": "boolean"
                    },
                    "compositeFields": {
                      "description": "An array of the fields that make up a composite field (e.g., address).",
                      "type": "array"
                    },
                    "displayCheckboxAsText": {
                      "description": "Indicates whether the checkbox values will be shown as text in reports.",
                      "type": "boolean"
                    },
                    "versionMode": {
                      "description": "Version modes for files. Keep all versions vs keep last version.",
                      "enum": [
                        "keepallversions",
                        "keeplastversions"
                      ],
                      "type": "string"
                    },
                    "displayTime": {
                      "description": "Indicates whether to display the time, in addition to the date.",
                      "type": "boolean"
                    },
                    "durationField": {
                      "description": "The duration field id.",
                      "type": "integer"
                    },
                    "snapFieldId": {
                      "description": "The id of the field that is used to snapshot values from, when applicable.",
                      "type": "integer"
                    },
                    "hours24": {
                      "description": "Indicates whether or not to display time in the 24-hour format within the product.",
                      "type": "boolean"
                    },
                    "sortAlpha": {
                      "description": "Whether to sort alphabetically, default sort is by record ID.",
                      "type": "boolean"
                    },
                    "sortAsGiven": {
                      "description": "Indicates if the listed entries sort as entered vs alphabetically.",
                      "type": "boolean"
                    },
                    "hasExtension": {
                      "description": "Whether this field has a phone extension.",
                      "type": "boolean"
                    },
                    "workWeek": {
                      "description": "The work week type.",
                      "type": "integer"
                    },
                    "useNewWindow": {
                      "description": "Indicates if the URL should open a new window when a user clicks it within the product.",
                      "type": "boolean"
                    },
                    "appendOnly": {
                      "description": "Whether this field is append only.",
                      "type": "boolean"
                    },
                    "displayAsLink": {
                      "description": "Indicates if a field that is part of the relationship should be shown as a hyperlink to the parent record within the product.",
                      "type": "boolean"
                    },
                    "allowHTML": {
                      "description": "Whether this field allows html.",
                      "type": "boolean"
                    },
                    "lookupReferenceFieldId": {
                      "description": "The id of the field that is the reference in the relationship for this lookup.",
                      "type": "integer"
                    }
                  }
                },
                "permissions": {
                  "description": "Field Permissions for different roles.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "role": {
                        "description": "The role associated with a given permission for the field",
                        "type": "string"
                      },
                      "permissionType": {
                        "description": "The permission given to the role for this field",
                        "type": "string"
                      },
                      "roleId": {
                        "description": "The Id of the given role",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Fields"
        ]
      }
    },
    "/fields/usage": {
      "get": {
        "description": "Get all the field usage statistics for a table. This is a summary of the information that can be found in the usage table of field properties.",
        "summary": "Get usage for all fields",
        "operationId": "getFieldsUsage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table.",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "skip",
            "description": "The number of fields to skip from the list.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "top",
            "description": "The maximum number of fields to return.",
            "required": false,
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": [
                {
                  "field": {
                    "id": 6,
                    "name": "name",
                    "type": "Text"
                  },
                  "usage": {
                    "actions": {
                      "count": 0
                    },
                    "appHomePages": {
                      "count": 0
                    },
                    "dashboards": {
                      "count": 2
                    },
                    "defaultReports": {
                      "count": 1
                    },
                    "exactForms": {
                      "count": 0
                    },
                    "fields": {
                      "count": 0
                    },
                    "forms": {
                      "count": 1
                    },
                    "notifications": {
                      "count": 0
                    },
                    "personalReports": {
                      "count": 0
                    },
                    "pipelines": {
                      "count": 1
                    },
                    "relationships": {
                      "count": 0
                    },
                    "reminders": {
                      "count": 0
                    },
                    "reports": {
                      "count": 2
                    },
                    "roles": {
                      "count": 2
                    },
                    "tableImports": {
                      "count": 3
                    },
                    "tableRules": {
                      "count": 1
                    },
                    "webhooks": {
                      "count": 0
                    }
                  }
                }
              ],
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "field",
                  "usage"
                ],
                "properties": {
                  "field": {
                    "description": "Basic information about the field.",
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                      "name",
                      "id",
                      "type"
                    ],
                    "properties": {
                      "name": {
                        "description": "Field name.",
                        "type": "string"
                      },
                      "id": {
                        "description": "Field id.",
                        "type": "integer"
                      },
                      "type": {
                        "description": "Field type.",
                        "type": "string"
                      }
                    }
                  },
                  "usage": {
                    "description": "Usage Information about the field.",
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                      "actions",
                      "appHomePages",
                      "dashboards",
                      "defaultReports",
                      "exactForms",
                      "fields",
                      "forms",
                      "notifications",
                      "personalReports",
                      "pipelines",
                      "relationships",
                      "reminders",
                      "reports",
                      "roles",
                      "tableImports",
                      "tableRules",
                      "webhooks"
                    ],
                    "properties": {
                      "actions": {
                        "description": "The number of quickbase actions where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "appHomePages": {
                        "description": "The number of app home pages where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "dashboards": {
                        "required": [
                          "count"
                        ],
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "description": "the number of times a field has been used for the given item."
                          }
                        },
                        "description": "The number of dashboards where the given field is referenced."
                      },
                      "defaultReports": {
                        "description": "The number of default reports where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "exactForms": {
                        "description": "The number of exact forms where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "fields": {
                        "description": "The number of fields where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "forms": {
                        "description": "The number of forms where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "notifications": {
                        "description": "The number of notifications where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "personalReports": {
                        "description": "The number of personal reports where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "pipelines": {
                        "required": [
                          "count"
                        ],
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {
                          "count": {
                            "type": "integer",
                            "description": "the number of times a field has been used for the given item."
                          }
                        },
                        "description": "The number of pipelines where the given field is referenced."
                      },
                      "relationships": {
                        "description": "The number of relationships where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "reminders": {
                        "description": "The number of reminders where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "reports": {
                        "description": "The number of reports where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "roles": {
                        "description": "The number of roles where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "tableImports": {
                        "required": [
                          "count"
                        ],
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "description": "the number of times a field has been used for the given item."
                          }
                        },
                        "description": "The number of table imports where the given field is referenced."
                      },
                      "tableRules": {
                        "required": [
                          "count"
                        ],
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "description": "the number of times a field has been used for the given item."
                          }
                        },
                        "description": "The number of table rules where the given field is referenced."
                      },
                      "webhooks": {
                        "description": "The number of webhooks where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Fields"
        ]
      }
    },
    "/fields/usage/{fieldId}": {
      "get": {
        "description": "Get a single fields usage statistics. This is a summary of the information that can be found in the usage table of field properties.",
        "summary": "Get usage for a field",
        "operationId": "getFieldUsage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table.",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "fieldId",
            "description": "The unique identifier (fid) of the field.",
            "required": true,
            "in": "path",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": [
                {
                  "field": {
                    "id": 6,
                    "name": "name",
                    "type": "Text"
                  },
                  "usage": {
                    "actions": {
                      "count": 0
                    },
                    "appHomePages": {
                      "count": 0
                    },
                    "dashboards": {
                      "count": 2
                    },
                    "defaultReports": {
                      "count": 1
                    },
                    "exactForms": {
                      "count": 0
                    },
                    "fields": {
                      "count": 0
                    },
                    "forms": {
                      "count": 1
                    },
                    "notifications": {
                      "count": 0
                    },
                    "personalReports": {
                      "count": 0
                    },
                    "pipelines": {
                      "count": 1
                    },
                    "relationships": {
                      "count": 0
                    },
                    "reminders": {
                      "count": 0
                    },
                    "reports": {
                      "count": 2
                    },
                    "roles": {
                      "count": 2
                    },
                    "tableImports": {
                      "count": 2
                    },
                    "tableRules": {
                      "count": 1
                    },
                    "webhooks": {
                      "count": 0
                    }
                  }
                }
              ],
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "field",
                  "usage"
                ],
                "properties": {
                  "field": {
                    "description": "Basic information about the field.",
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                      "name",
                      "id",
                      "type"
                    ],
                    "properties": {
                      "name": {
                        "description": "Field name.",
                        "type": "string"
                      },
                      "id": {
                        "description": "Field id.",
                        "type": "integer"
                      },
                      "type": {
                        "description": "Field type.",
                        "type": "string"
                      }
                    }
                  },
                  "usage": {
                    "description": "Usage Information about the field.",
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                      "actions",
                      "appHomePages",
                      "dashboards",
                      "defaultReports",
                      "exactForms",
                      "fields",
                      "forms",
                      "notifications",
                      "personalReports",
                      "pipelines",
                      "relationships",
                      "reminders",
                      "reports",
                      "roles",
                      "tableImports",
                      "tableRules",
                      "webhooks"
                    ],
                    "properties": {
                      "actions": {
                        "description": "The number of quickbase actions where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "appHomePages": {
                        "description": "The number of app home pages where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "dashboards": {
                        "required": [
                          "count"
                        ],
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "description": "the number of times a field has been used for the given item."
                          }
                        },
                        "description": "The number of dashboards where the given field is referenced."
                      },
                      "defaultReports": {
                        "description": "The number of default reports where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "exactForms": {
                        "description": "The number of exact forms where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "fields": {
                        "description": "The number of fields where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "forms": {
                        "description": "The number of forms where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "notifications": {
                        "description": "The number of notifications where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "personalReports": {
                        "description": "The number of personal reports where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "pipelines": {
                        "required": [
                          "count"
                        ],
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {
                          "count": {
                            "type": "integer",
                            "description": "the number of times a field has been used for the given item."
                          }
                        },
                        "description": "The number of pipelines where the given field is referenced."
                      },
                      "relationships": {
                        "description": "The number of relationships where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "reminders": {
                        "description": "The number of reminders where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "reports": {
                        "description": "The number of reports where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "roles": {
                        "description": "The number of roles where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      },
                      "tableImports": {
                        "required": [
                          "count"
                        ],
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "description": "the number of times a field has been used for the given item."
                          }
                        },
                        "description": "The number of table imports where the given field is referenced."
                      },
                      "tableRules": {
                        "required": [
                          "count"
                        ],
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "description": "the number of times a field has been used for the given item."
                          }
                        },
                        "description": "The number of table rules where the given field is referenced."
                      },
                      "webhooks": {
                        "description": "The number of webhooks where the given field is referenced.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "count"
                        ],
                        "properties": {
                          "count": {
                            "description": "the number of times a field has been used for the given item.",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Fields"
        ]
      }
    },
    "/formula/run": {
      "post": {
        "description": "Allows running a formula via an API call. Use this method in custom code to get the value back of a formula without a discrete field on a record.",
        "summary": "Run a formula",
        "operationId": "runFormula",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "description": "The following example will execute a Sum() for '20' and the value in a record with id 1 for the field with label 'NumericField'. Since this API is able to run any type of formula, all results will be returned as a string.",
              "example": {
                "from": "bck7gp3q2",
                "formula": "Sum([NumericField],20)",
                "rid": 1
              },
              "type": "object",
              "additionalProperties": false,
              "required": [
                "formula",
                "from"
              ],
              "properties": {
                "formula": {
                  "description": "The formula to run. This must be a valid Quickbase formula.",
                  "type": "string"
                },
                "rid": {
                  "description": "The record ID to run the formula against. Only necessary for formulas that are run in the context of a record. For example, the formula User() does not need a record ID.",
                  "type": "integer"
                },
                "from": {
                  "description": "The unique identifier (dbid) of the table.",
                  "example": "bck7gp3q2",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "result": "30"
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "result": {
                  "description": "The formula execution result.",
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Formulas"
        ]
      }
    },
    "/records": {
      "post": {
        "operationId": "upsert",
        "summary": "Upsert records in a table",
        "tags": [
          "Records"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpsertRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - all records processed successfully",
            "schema": {
              "$ref": "#/definitions/Upsert200Response"
            }
          },
          "207": {
            "description": "Multi-Status - partial success with some errors",
            "schema": {
              "$ref": "#/definitions/Upsert207Response"
            }
          }
        }
      }
    },
    "/records/query": {
      "post": {
        "operationId": "upsertRecords",
        "summary": "Upsert records (alternative endpoint)",
        "tags": [
          "Records"
        ],
        "parameters": [
          {
            "name": "generated",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Record"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Upsert200Response"
              }
            }
          },
          "207": {
            "description": "Multi-Status (partial success)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Upsert207Response"
              }
            }
          }
        }
      }
    },
    "/auth/temporary/{dbid}": {
      "get": {
        "operationId": "getTempTokenDBID",
        "summary": "Get a temporary authorization token for a specific dbid",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "dbid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetTempTokenDBID200Response"
            }
          }
        }
      }
    },
    "/auth/oauth/token": {
      "post": {
        "description": "Use this endpoint to exchange a SAML assertion for a Quickbase token following [RFC 8693](https://www.rfc-editor.org/rfc/rfc8693.html). Callers can choose to return a token compatible with SCIM, XML, or RESTful APIs. The token duration is determined by the [SAML timeout session time](https://helpv2.quickbase.com/hc/en-us/articles/4570410646420-SAML-assertion-example#:~:text=Setting%20SAML%20timeout%20session%20time). You must be able to create a SAML assertion in your code to use this endpoint. The SAML assertion is verified against the configuration on the realm. Learn more about about [SAML assertions](https://helpv2.quickbase.com/hc/en-us/articles/4570410646420-SAML-assertion-example).",
        "summary": "Exchange an SSO token",
        "operationId": "exchangeSsoToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "example": {
                "grant_type": "urn:ietf:params:oauth:grant-type:token-exchange",
                "requested_token_type": "urn:quickbase:params:oauth:token-type:temp_ticket",
                "subject_token": "PHNhbWxwOlJlc3BvbnNlDQogICAgeG1sbnM6c2FtbHA9bjp...",
                "subject_token_type": "urn:ietf:params:oauth:token-type:saml2"
              },
              "type": "object",
              "additionalProperties": false,
              "required": [
                "grant_type",
                "subject_token",
                "subject_token_type",
                "requested_token_type"
              ],
              "properties": {
                "grant_type": {
                  "type": "string",
                  "description": "The value `urn:ietf:params:oauth:grant-type:token-exchange` indicates that a token exchange is being performed.",
                  "enum": [
                    "urn:ietf:params:oauth:grant-type:token-exchange"
                  ]
                },
                "requested_token_type": {
                  "type": "string",
                  "description": "An identifier for the type of the requested security token. For the RESTful API, use `urn:quickbase:params:oauth:token-type:temp_token`. For the XML or SCIM APIs use `urn:quickbase:params:oauth:token-type:temp_ticket`.",
                  "enum": [
                    "urn:quickbase:params:oauth:token-type:temp_ticket",
                    "urn:quickbase:params:oauth:token-type:temp_token"
                  ]
                },
                "subject_token": {
                  "type": "string",
                  "description": "A security token that represents the identity of the party on behalf of whom the request is being made. For SAML 2.0, the value should be a base64url-encoded SAML 2.0 assertion."
                },
                "subject_token_type": {
                  "type": "string",
                  "description": "An identifier that indicates the type of the security token in the `subject_token` parameter.",
                  "enum": [
                    "urn:ietf:params:oauth:token-type:saml2"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "access_token": "example_token_1NiIsImtpZCI6IjllciJ9w",
                "issued_token_type": "urn:quickbase:params:oauth:token-type:temp_ticket",
                "token_type": "N_A"
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "access_token": {
                  "type": "string",
                  "description": "The security token issued by the authorization server in response to the token exchange request. The identifier `access_token` is used for historical reasons and the issued token need not be an OAuth access token."
                },
                "issued_token_type": {
                  "type": "string",
                  "description": "An identifier for the representation of the issued security token.",
                  "enum": [
                    "urn:quickbase:params:oauth:token-type:temp_ticket",
                    "urn:quickbase:params:oauth:token-type:temp_token"
                  ]
                },
                "token_type": {
                  "type": "string",
                  "description": "Will always return `N_A`",
                  "enum": [
                    "N_A"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/usertoken/clone": {
      "post": {
        "description": "Clones the authenticated user token. All applications associated with that token are automatically associated with the new token.",
        "summary": "Clone a user token",
        "operationId": "cloneUserToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "example": {
                "name": "My cloned user token",
                "description": "Cloned from user token A"
              },
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "description": "The new name for the cloned user token.",
                  "type": "string"
                },
                "description": {
                  "description": "The description for the cloned user token.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "active": true,
                "apps": [
                  {
                    "id": "bpqe82s1",
                    "name": "My first app"
                  },
                  {
                    "id": "bpqe82s2",
                    "name": "My second app"
                  }
                ],
                "lastUsed": "2020-03-27T18:34:12.000Z",
                "description": "Cloned user token",
                "id": 5,
                "name": "My cloned user token",
                "token": "token"
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "active": {
                  "description": "Whether the user token is active.",
                  "type": "boolean"
                },
                "apps": {
                  "description": "The list of apps this user token is assigned to.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "id": {
                        "description": "The unique identifier for this application.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The application's name.",
                        "type": "string"
                      }
                    }
                  }
                },
                "lastUsed": {
                  "description": "The last date this user token was used, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
                  "type": "string"
                },
                "description": {
                  "description": "User Token description.",
                  "type": "string"
                },
                "id": {
                  "description": "User Token id.",
                  "type": "integer"
                },
                "name": {
                  "description": "User Token name.",
                  "type": "string"
                },
                "token": {
                  "description": "User Token value.",
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "UserToken"
        ]
      }
    },
    "/usertoken/transfer": {
      "post": {
        "description": "Transfers the specified user token. Application associations will remain intact. For security, permissions must manually be reconciled.",
        "summary": "Transfer a user token",
        "operationId": "transferUserToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "example": {
                "id": 17658,
                "from": "62341.tr3s",
                "to": "123456.ab1s"
              },
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The id of the user token to transfer"
                },
                "from": {
                  "type": "string",
                  "description": "The id of the user to transfer the user token from"
                },
                "to": {
                  "type": "string",
                  "description": "The id of the user to transfer the user token to"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "active": true,
                "apps": [
                  {
                    "id": "bpqe82s1",
                    "name": "My first app"
                  },
                  {
                    "id": "bpqe82s2",
                    "name": "My second app"
                  }
                ],
                "lastUsed": "2020-03-27T18:34:12.000Z",
                "description": "Transferred user token",
                "id": 5,
                "name": "My transferred user token"
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "active": {
                  "description": "Whether the user token is active.",
                  "type": "boolean"
                },
                "apps": {
                  "description": "The list of apps this user token is assigned to.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "id": {
                        "description": "The unique identifier for this application.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The application's name.",
                        "type": "string"
                      }
                    }
                  }
                },
                "lastUsed": {
                  "description": "The last date this user token was used, in the ISO 8601 time format YYYY-MM-DDThh:mm:ss.sssZ (in UTC time zone).",
                  "type": "string"
                },
                "description": {
                  "description": "User Token description.",
                  "type": "string"
                },
                "id": {
                  "description": "User Token id.",
                  "type": "integer"
                },
                "name": {
                  "description": "User Token name.",
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "UserToken"
        ]
      }
    },
    "/usertoken/deactivate": {
      "post": {
        "description": "Deactivates the authenticated user token. Once this is done, the user token must be reactivated in the user interface.",
        "summary": "Deactivate a user token",
        "operationId": "deactivateUserToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "id": 5
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "description": "The user token id.",
                  "type": "integer"
                }
              }
            }
          }
        },
        "tags": [
          "UserToken"
        ]
      }
    },
    "/usertoken": {
      "delete": {
        "description": "Deletes the authenticated user token. This is not reversible.",
        "summary": "Delete a user token",
        "operationId": "deleteUserToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "id": 5
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "id": {
                  "description": "The user token id.",
                  "type": "integer"
                }
              }
            }
          }
        },
        "tags": [
          "UserToken"
        ]
      }
    },
    "/files/{tableId}/{recordId}/{fieldId}/{versionNumber}": {
      "get": {
        "description": "Downloads the file attachment, with the file attachment content encoded in base64 format. The API response returns the file name in the `Content-Disposition` header. Meta-data about files can be retrieved from the /records and /reports endpoints, where applicable. Use those endpoints to get the necessary information to fetch files.",
        "summary": "Download file",
        "operationId": "downloadFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "description": "The unique identifier of the table.",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "recordId",
            "description": "The unique identifier of the record.",
            "required": true,
            "in": "path",
            "type": "integer"
          },
          {
            "name": "fieldId",
            "description": "The unique identifier of the field.",
            "required": true,
            "in": "path",
            "type": "integer"
          },
          {
            "name": "versionNumber",
            "description": "The file attachment version number.",
            "required": true,
            "in": "path",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/octet-stream",
            "schema": {
              "description": "Base64 encoded file content.",
              "example": "UXVpY2sgQmFzZSBJbmMu"
            }
          }
        },
        "tags": [
          "Files"
        ]
      },
      "delete": {
        "description": "Deletes one file attachment version. Meta-data about files can be retrieved from the /records and /reports endpoints, where applicable. Use those endpoints to get the necessary information to delete file versions.",
        "summary": "Delete file",
        "operationId": "deleteFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "description": "The unique identifier of the table.",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "recordId",
            "description": "The unique identifier of the record.",
            "required": true,
            "in": "path",
            "type": "integer"
          },
          {
            "name": "fieldId",
            "description": "The unique identifier of the field.",
            "required": true,
            "in": "path",
            "type": "integer"
          },
          {
            "name": "versionNumber",
            "description": "The file attachment version number.",
            "required": true,
            "in": "path",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Deleted the File Attachment",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "versionNumber": 1,
                "fileName": "file.pdf",
                "uploaded": "2019-12-18T08:00:00Z",
                "creator": {
                  "email": "jsmith@quickbase.com",
                  "id": "123456.ab1s",
                  "name": "Juliet Smith",
                  "userName": "jsmith"
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "versionNumber": {
                  "description": "The number of deleted version.",
                  "type": "integer"
                },
                "fileName": {
                  "description": "The name of file associated with deleted version.",
                  "type": "string"
                },
                "uploaded": {
                  "description": "The timestamp when the version was originally uploaded.",
                  "type": "string"
                },
                "creator": {
                  "description": "The user that uploaded version.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "name": {
                      "description": "User full name.",
                      "type": "string"
                    },
                    "id": {
                      "description": "User Id.",
                      "type": "string"
                    },
                    "email": {
                      "description": "User email.",
                      "type": "string"
                    },
                    "userName": {
                      "description": "User Name as updated in user properties. Optional, appears if not the same as user email.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Files"
        ]
      }
    },
    "/users": {
      "post": {
        "description": "Get all users in an account or narrowed down list of users filtered by email(s). The returned users may be paginated depending on the user count. The count of the returned users may vary. When `nextPageToken` value in the response is not empty, that indicates that there are more results to be returned, you can use this value to get the next result set ('page').",
        "summary": "Get users",
        "operationId": "getUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "description": "The account id being used to get users. If no value is specified, the first account associated with the requesting user token is chosen.",
            "required": false,
            "in": "query",
            "type": "number"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "x-amf-examples": {
                "Get first page example": {
                  "emails": [
                    "jswilson@domain.com",
                    "jon_doe@domain.com",
                    "sjackson@domain.com"
                  ],
                  "appIds": [
                    "ab3rd3",
                    "23erfd",
                    "xpsd32"
                  ],
                  "nextPageToken": ""
                },
                "Get next page example": {
                  "emails": [
                    "jswilson@domain.com",
                    "sjackson@domain.com"
                  ],
                  "appIds": [
                    "ab3rd3",
                    "23erfd"
                  ],
                  "nextPageToken": "bzw2a9"
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "emails": {
                  "description": "When provided, the returned users will be narrowed down only to the users included in this list.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string",
                    "pattern": "^.+@.+\\..+$",
                    "minLength": 2,
                    "maxLength": 256
                  }
                },
                "appIds": {
                  "description": "When provided, the returned users will be narrowed down only to the users assigned to the app id's provided in this list. The provided app id's should belong to the same account.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                },
                "nextPageToken": {
                  "description": "Next page token used to get the next 'page' of results when available. When this field is empty, the first page is returned.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "x-amf-examples": {
                "All results example": {
                  "users": [
                    {
                      "userName": "jdoe",
                      "firstName": "Jon",
                      "lastName": "Doe",
                      "emailAddress": "jdoe@domain.com",
                      "hashId": "58351651.xc1"
                    },
                    {
                      "userName": "swilson",
                      "firstName": "Simone",
                      "lastName": "Wilson",
                      "emailAddress": "jswilson@domain.com",
                      "hashId": "58351648.xc1"
                    },
                    {
                      "userName": "sjackson",
                      "firstName": "Samuel",
                      "lastName": "Jackson",
                      "emailAddress": "sjackson@domain.com",
                      "hashId": "58351643.xc1"
                    }
                  ],
                  "metadata": {
                    "nextPageToken": ""
                  }
                },
                "Paged results example": {
                  "users": [
                    {
                      "userName": "swilson",
                      "firstName": "Simone",
                      "lastName": "Wilson",
                      "emailAddress": "jswilson@domain.com",
                      "hashId": "58351648.xc1"
                    },
                    {
                      "userName": "sjackson",
                      "firstName": "Samuel",
                      "lastName": "Jackson",
                      "emailAddress": "sjackson@domain.com",
                      "hashId": "58351643.xc1"
                    }
                  ],
                  "metadata": {
                    "nextPageToken": "bzw2ba"
                  }
                }
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "users",
                "metadata"
              ],
              "properties": {
                "users": {
                  "description": "A list of users found in an account with the given criterias",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                      "userName",
                      "firstName",
                      "lastName",
                      "emailAddress",
                      "hashId"
                    ],
                    "properties": {
                      "userName": {
                        "type": "string"
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      },
                      "emailAddress": {
                        "type": "string"
                      },
                      "hashId": {
                        "type": "string"
                      }
                    }
                  }
                },
                "metadata": {
                  "description": "Additional request information",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "nextPageToken"
                  ],
                  "properties": {
                    "nextPageToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/users/deny": {
      "put": {
        "description": "Denies users access to the realm but leaves them listed in groups they have been added to.",
        "summary": "Deny users",
        "operationId": "denyUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "description": "The account id being used to deny users. If no value is specified, the first account associated with the requesting user token is chosen.",
            "required": false,
            "in": "query",
            "type": "number"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "description": "A list of user IDs that need to be denied.",
              "example": [
                "123456.ab1s",
                "423123.vc2d",
                "78910.ba1s"
              ],
              "type": "array",
              "maxItems": 1000,
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "failure": [
                  "423123.vc2d",
                  "78910.ba1s"
                ],
                "success": [
                  "123456.ab1s"
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "failure",
                "success"
              ],
              "properties": {
                "failure": {
                  "description": "A list of users that couldn't be denied. This also includes the ID's of users that are not valid.",
                  "example": [
                    "78910.qwer",
                    "3512.asd1"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "success": {
                  "description": "A list of users that have successfully been denied.",
                  "example": [
                    "123456.ab1s"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/users/deny/{shouldDeleteFromGroups}": {
      "put": {
        "description": "Denies users access to the realm and allows you to remove them from groups.",
        "summary": "Deny and remove users from groups",
        "operationId": "denyUsersAndGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "description": "The account id being used to deny users. If no value is specified, the first account associated with the requesting user token is chosen.",
            "required": false,
            "in": "query",
            "type": "number"
          },
          {
            "name": "shouldDeleteFromGroups",
            "description": "Specifies if the users should also be removed from all groups.",
            "required": true,
            "in": "path",
            "type": "boolean"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "description": "A list of user IDs that need to be denied.",
              "example": [
                "123456.ab1s",
                "423123.vc2d",
                "78910.ba1s"
              ],
              "type": "array",
              "maxItems": 1000,
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "failure": [
                  "423123.vc2d",
                  "78910.ba1s"
                ],
                "success": [
                  "123456.ab1s"
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "failure",
                "success"
              ],
              "properties": {
                "failure": {
                  "description": "A list of users that couldn't be denied. This also includes the ID's of users that are not valid.",
                  "example": [
                    "78910.qwer",
                    "3512.asd1"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "success": {
                  "description": "A list of users that have successfully been denied.",
                  "example": [
                    "123456.ab1s"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/users/undeny": {
      "put": {
        "description": "Grants users that have previously been denied access to the realm.",
        "summary": "Undeny users",
        "operationId": "undenyUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "description": "The account id being used to undeny users. If no value is specified, the first account associated with the requesting user token is chosen.",
            "required": false,
            "in": "query",
            "type": "number"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "description": "A list of user IDs that need to be undenied.",
              "example": [
                "123456.ab1s",
                "423123.vc2d",
                "78910.ba1s"
              ],
              "type": "array",
              "maxItems": 1000,
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "failure": [
                  "423123.vc2d",
                  "78910.ba1s"
                ],
                "success": [
                  "123456.ab1s"
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "failure",
                "success"
              ],
              "properties": {
                "failure": {
                  "description": "A list of users that couldn't be undenied. This also includes the ID's of users that are not valid.",
                  "example": [
                    "78910.qwer",
                    "3512.asd1"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "success": {
                  "description": "A list of users that have successfully been undenied.",
                  "example": [
                    "123456.ab1s"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/groups/{gid}/members": {
      "post": {
        "description": "Adds a list of users to a given group as members.",
        "summary": "Add members",
        "operationId": "addMembersToGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gid",
            "description": "This is the ID of the group being modified.",
            "required": true,
            "in": "path",
            "type": "number"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "description": "A list of user IDs that will be added to a group.",
              "example": [
                "123456.ryyw",
                "423123.b3x5",
                "100000.be8s"
              ],
              "type": "array",
              "maxItems": 1000,
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "description": "The Id and its hash value of the user to be added to a group.",
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "failure": [
                  "123456.ryyw",
                  "423123.b3x5"
                ],
                "success": [
                  "100000.be8s"
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "failure",
                "success"
              ],
              "properties": {
                "failure": {
                  "description": "A list of users that couldn’t be added to the group. This includes a list of IDs that represent invalid users and users who have already been added to the group.",
                  "example": [
                    "423123.b3x5",
                    "123456.ryyw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "success": {
                  "description": "A list of users that have been added to the group successfully.",
                  "example": [
                    "100000.be8s"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "description": "Removes a list of members from a given group.",
        "summary": "Remove members",
        "operationId": "removeMembersFromGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gid",
            "description": "This is the ID of the group being modified.",
            "required": true,
            "in": "path",
            "type": "number"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "description": "A list of user IDs that will be removed from a group.",
              "example": [
                "123456.ryyw",
                "423123.b3x5",
                "100000.be8s"
              ],
              "type": "array",
              "maxItems": 1000,
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "description": "The Id and its hash value of the user to be removed from a group.",
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "failure": [
                  "123456.ryyw",
                  "423123.b3x5"
                ],
                "success": [
                  "100000.be8s"
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "failure",
                "success"
              ],
              "properties": {
                "failure": {
                  "description": "A list of users that couldn’t be removed from the group. This includes a list of IDs that represent invalid users.",
                  "example": [
                    "423123.b3x5",
                    "123456.ryyw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "success": {
                  "description": "A list of users that have been removed from the group successfully.",
                  "example": [
                    "100000.be8s"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/groups/{gid}/managers": {
      "post": {
        "description": "Adds a list of users to a given group as managers.",
        "summary": "Add managers",
        "operationId": "addManagersToGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gid",
            "description": "This is the ID of the group being modified.",
            "required": true,
            "in": "path",
            "type": "number"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "description": "A list of user IDs that will be added to a group.",
              "example": [
                "123456.ryyw",
                "423123.b3x5",
                "100000.be8s"
              ],
              "type": "array",
              "maxItems": 1000,
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "description": "The Id and its hash value of the user to be added to a group.",
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "failure": [
                  "123456.ryyw",
                  "423123.b3x5"
                ],
                "success": [
                  "100000.be8s"
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "failure",
                "success"
              ],
              "properties": {
                "failure": {
                  "description": "A list of users that couldn’t be added to the group. This includes a list of IDs that represent invalid users and users who have already been added to the group.",
                  "example": [
                    "423123.b3x5",
                    "123456.ryyw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "success": {
                  "description": "A list of users that have been added to the group successfully.",
                  "example": [
                    "100000.be8s"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "description": "Removes a list of managers from a given group.",
        "summary": "Remove managers",
        "operationId": "removeManagersFromGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gid",
            "description": "This is the ID of the group being modified.",
            "required": true,
            "in": "path",
            "type": "number"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "description": "A list of user IDs that will be removed from a group.",
              "example": [
                "123456.ryyw",
                "423123.b3x5",
                "100000.be8s"
              ],
              "type": "array",
              "maxItems": 1000,
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "description": "The Id and its hash value of the user to be removed from a group.",
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "failure": [
                  "123456.ryyw",
                  "423123.b3x5"
                ],
                "success": [
                  "100000.be8s"
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "failure",
                "success"
              ],
              "properties": {
                "failure": {
                  "description": "A list of users that couldn’t be removed from the group. This includes a list of IDs that represent invalid users.",
                  "example": [
                    "423123.b3x5",
                    "123456.ryyw"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "success": {
                  "description": "A list of users that have been removed from the group successfully.",
                  "example": [
                    "100000.be8s"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/groups/{gid}/subgroups": {
      "post": {
        "description": "Adds a list of groups to a given group.",
        "summary": "Add child groups",
        "operationId": "addSubgroupsToGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gid",
            "description": "This is the ID of the group being modified.",
            "required": true,
            "in": "path",
            "type": "number"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "description": "A list of group IDs that will be added to a group.",
              "example": [
                "1002.czm8",
                "1003.bar3"
              ],
              "type": "array",
              "maxItems": 1000,
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "description": "The Id and its hash value of the child group to be added to a group.",
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "failure": [
                  "1002.czm8"
                ],
                "success": [
                  "1003.bar3"
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "failure",
                "success"
              ],
              "properties": {
                "failure": {
                  "description": "A list of child groups that couldn’t be added to the group. This includes a list of IDs that represent invalid groups and groups that have already been added to the group.",
                  "example": [
                    "1002.czm8"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "success": {
                  "description": "A list of child groups that have been added to the group successfully.",
                  "example": [
                    "1003.bar3"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "description": "Removes a list of groups from a given group.",
        "summary": "Remove child groups",
        "operationId": "removeSubgroupsFromGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gid",
            "description": "This is the ID of the group being modified.",
            "required": true,
            "in": "path",
            "type": "number"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "description": "A list of group IDs that will be removed from a group.",
              "example": [
                "1002.czm8",
                "1003.bar3"
              ],
              "type": "array",
              "maxItems": 1000,
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "description": "The Id and its hash value of the child group to be removed from a group.",
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "failure": [
                  "1002.czm8"
                ],
                "success": [
                  "1003.bar3"
                ]
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "failure",
                "success"
              ],
              "properties": {
                "failure": {
                  "description": "A list of child groups that couldn’t be removed from the group. This includes a list of IDs that represent invalid groups.",
                  "example": [
                    "1002.czm8"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "success": {
                  "description": "A list of child groups that have been removed from the group successfully.",
                  "example": [
                    "1003.bar3"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/audit": {
      "post": {
        "description": "Gathers the audit logs for a single day from a realm. By default, this API returns 10,000 entries. This can be changed with the numRows parameter. Integrators can iterate through batches to get an entire day's worth of logs. Each realm has a maximum entitlement of querying 1,000 days per year (allowing lookbacks for up to two years). Requests for paginated data do not count towards the annual limit. Transactional rate limits are 10 per 10 seconds.  \n**Note:** This API is available for enterprise users only.",
        "summary": "Get audit logs",
        "operationId": "audit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "example": {
                "date": "2022-05-20",
                "topics": [
                  "login",
                  "login_fail"
                ]
              },
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "nextToken": {
                  "description": "Token specifying start of page. For first page don't supply this.",
                  "example": "6a.f12x",
                  "type": "string"
                },
                "numRows": {
                  "description": "Number of logs to return per page, default is 10000, minimum is 1000, max is 50000.",
                  "example": 10000,
                  "type": "integer"
                },
                "queryId": {
                  "description": "The query id of an audit log request. This id is needed to fetch subsequent paged results of a single query.",
                  "example": "c41aa90e-0db6-4732-8e22-2ef80fe4092a",
                  "type": "string"
                },
                "date": {
                  "description": "The date for which audit logs need to be fetched. This must be date-time only, as YYYY-MM-DD, and a valid date in the past.",
                  "example": "2022-05-23",
                  "type": "string",
                  "format": "date"
                },
                "topics": {
                  "type": "array",
                  "maxItems": 20,
                  "description": "An array that may contain up to 20 [topics](https://resources.quickbase.com/nav/app/budurkasx/action/showpage/2b2941e4-f34d-4d41-9b0e-db790d20e9ab?pageIdV2=quickbase.com-DashboardGroup-15760d74-2243-4ce9-9495-7cc8790f12e7) to filter by. If empty, all topics are returned.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Query ran successfully and has returned the events for the given time period.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "events": [
                  {
                    "firstname": "Jon",
                    "lastname": "Doe",
                    "email": "jdoe@quickbase.com",
                    "ipaddress": "65.219.241.162",
                    "application": "UI",
                    "resourceurl": "https://demo.quickbase.com/db/bpqe82s1",
                    "sessioninfo": "Session ID: 17245317",
                    "useragent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Safari/605.1.15",
                    "topic": "app_dashboard_access",
                    "description": "Jon Doe accessed the app dashboard in app Projects",
                    "id": "I3g8gm2cmh-1",
                    "time": "2020-04-21T14:41:51.886Z"
                  }
                ],
                "nextToken": "6a.f12x",
                "queryId": "797c0726-f8f4-4df9-883f-c7e8cbdf2f77.ALtInpuyQeBoW+fWrAqLrjPGqDqPl++IMb3bOxlmoF4="
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "queryId"
              ],
              "properties": {
                "queryId": {
                  "description": "Query id of the requested audit log.",
                  "type": "string"
                },
                "events": {
                  "description": "All events of the audit log.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true,
                    "required": [
                      "id",
                      "firstname",
                      "lastname",
                      "email",
                      "topic",
                      "time",
                      "ipaddress",
                      "useragent",
                      "application",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "description": "Log ID.",
                        "type": "string"
                      },
                      "firstname": {
                        "description": "User's first name.",
                        "type": "string"
                      },
                      "lastname": {
                        "description": "User's last name.",
                        "type": "string"
                      },
                      "email": {
                        "description": "User's email address.",
                        "type": "string"
                      },
                      "topic": {
                        "description": "What action was taken, such as log in, create app, report access, or table search.",
                        "type": "string"
                      },
                      "time": {
                        "description": "Exact time the action was taken, including date, and time with hour, minutes and seconds. Time zone is the browser time zone.",
                        "type": "string"
                      },
                      "ipaddress": {
                        "description": "The IP address the action was taken from.",
                        "type": "string"
                      },
                      "useragent": {
                        "description": "The browser and OS the action was taken from.",
                        "type": "string"
                      },
                      "application": {
                        "description": "UI for user interface or API for an API call.",
                        "type": "string"
                      },
                      "description": {
                        "description": "A brief description of the action that you can click to see additional details.",
                        "type": "string"
                      },
                      "payloadChanges": {
                        "description": "The data changes that have occured to a field that has been marked as audited.",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "changes",
                          "rid",
                          "changeType",
                          "type"
                        ],
                        "properties": {
                          "changes": {
                            "description": "An object describing the changes that occured on record changes.",
                            "type": "object",
                            "additionalProperties": true,
                            "required": [
                              "current",
                              "previous",
                              "fields"
                            ],
                            "properties": {
                              "current": {
                                "description": "The current value of the fields that have been changed.",
                                "type": "array"
                              },
                              "previous": {
                                "description": "The previous value of the fields that have been changed.",
                                "type": "array"
                              },
                              "fields": {
                                "description": "The list of fields and their types that have been changed.",
                                "type": "array"
                              }
                            }
                          },
                          "rid": {
                            "description": "The recordId that has been edited.",
                            "type": "integer"
                          },
                          "changeType": {
                            "description": "The change type that occured for a record. Could be one of add, edit, delete.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A placeholder for type changes.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "nextToken": {
                  "description": "Token to fetch the next 1000 logs.",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Query still being processed. Pass the queryId back to the API to check for results.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "queryId": "797c0726-f8f4-4df9-883f-c7e8cbdf2f77.ALtInpuyQeBoW+fWrAqLrjPGqDqPl++IMb3bOxlmoF4="
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "queryId"
              ],
              "properties": {
                "queryId": {
                  "description": "Query id of the requested audit log.",
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Audit"
        ]
      }
    },
    "/analytics/reads": {
      "get": {
        "description": "Get user read and integration read summaries for any day in the past.  \n**Note:** This API is available for enterprise users only.",
        "summary": "Get read summaries",
        "operationId": "platformAnalyticReads",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "day",
            "description": "The date for which read summaries need to be fetched. This must be date-time only, as YYYY-MM-DD, and a valid date in the past.",
            "required": false,
            "in": "query",
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "Summaries returned succesfully",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "date": "2022-01-01",
                "reads": {
                  "integrations": {
                    "api": 456,
                    "eoti": 789,
                    "pipelines": 432
                  },
                  "user": 123
                }
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "date",
                "reads"
              ],
              "properties": {
                "date": {
                  "description": "The date of the requested summary.",
                  "type": "string",
                  "format": "date"
                },
                "reads": {
                  "description": "Total reads for the specified date.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "user",
                    "integrations"
                  ],
                  "properties": {
                    "user": {
                      "description": "Total user reads for the realm on the specified date.",
                      "type": "integer"
                    },
                    "integrations": {
                      "description": "Total integration reads for the realm on the specified date.",
                      "type": "object",
                      "additionalProperties": true,
                      "required": [
                        "eoti",
                        "api",
                        "pipelines"
                      ],
                      "properties": {
                        "eoti": {
                          "description": "Total reads by anonymous users for the realm on the specified date.",
                          "type": "integer"
                        },
                        "api": {
                          "description": "Total API reads for the realm on the specified date.",
                          "type": "integer"
                        },
                        "pipelines": {
                          "description": "Total pipeline reads for the realm on the specified date.",
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Platform Analytics"
        ]
      }
    },
    "/analytics/events/summaries": {
      "post": {
        "tags": [
          "Platform Analytics"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the account to query. If no value is specified, the first account matching the provided domain is chosen.",
            "in": "query",
            "name": "accountId",
            "type": "number"
          },
          {
            "in": "body",
            "x-amf-mediaType": "application/json",
            "name": "generated",
            "schema": {
              "example": {
                "start": "2023-12-01T12:00:00.000-05:00",
                "end": "2023-12-31T12:00:00.000-05:00",
                "groupBy": "user",
                "nextToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJvZmZzZXQiOjEwMCwiaWF0IjoxNzA2NzE1OTI3LCJleHAiOjE3MDY4MDIzMjd9.aWGZCv5vJIai0Dw6sVcQ9FT70PHcqWcqP9sGdKBJeco",
                "where": [
                  {
                    "id": "58351651.xc1",
                    "type": "user"
                  },
                  {
                    "id": "bpqe82s1",
                    "type": "app"
                  }
                ]
              },
              "properties": {
                "start": {
                  "description": "The start date and time of the requested summaries in ISO 8601 time format.",
                  "format": "date-time",
                  "type": "string"
                },
                "end": {
                  "description": "The end date and time of the requested summaries in ISO 8601 time format.",
                  "format": "date-time",
                  "type": "string"
                },
                "groupBy": {
                  "description": "How the events should be grouped.",
                  "enum": [
                    "app",
                    "user"
                  ],
                  "type": "string"
                },
                "nextToken": {
                  "description": "A pagination token from a previous response. Used to fetch the next page.",
                  "type": "string"
                },
                "where": {
                  "description": "A list of items to filter events by. Only events which match ALL criteria will be included in the results.",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Id of the item to filter by - the hash uid if filtering a user, or the app id if filtering an app.",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of item to filter by.",
                        "enum": [
                          "app",
                          "user"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "type": "object"
                  },
                  "maxItems": 10,
                  "type": "array"
                }
              },
              "required": [
                "start",
                "end",
                "groupBy"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event summaries returned succesfully",
            "schema": {
              "example": {
                "accountId": "1234",
                "start": "2023-12-01T05:00:00Z",
                "end": "2023-12-31T05:00:00Z",
                "groupBy": "user",
                "where": [
                  {
                    "id": "58351651.xc1",
                    "type": "user"
                  },
                  {
                    "id": "bpqe82s1",
                    "type": "app"
                  }
                ],
                "results": [
                  {
                    "id": "58351651.xc1",
                    "name": "Jon Doe",
                    "eventTypes": [
                      {
                        "billingCategory": "integration",
                        "count": 794,
                        "eventType": "api"
                      },
                      {
                        "billingCategory": "integration",
                        "count": 0,
                        "eventType": "eoti"
                      },
                      {
                        "billingCategory": "integration",
                        "count": 203,
                        "eventType": "stepruns"
                      },
                      {
                        "billingCategory": "user",
                        "count": 0,
                        "eventType": "plugin"
                      },
                      {
                        "billingCategory": "user",
                        "count": 36,
                        "eventType": "appDashboard"
                      },
                      {
                        "billingCategory": "user",
                        "count": 0,
                        "eventType": "tableDashboard"
                      },
                      {
                        "billingCategory": "user",
                        "count": 419,
                        "eventType": "form"
                      },
                      {
                        "billingCategory": "user",
                        "count": 0,
                        "eventType": "report"
                      }
                    ]
                  }
                ],
                "metadata": {
                  "nextToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJvZmZzZXQiOjEwMCwiaWF0IjoxNzA2NzE1OTI3LCJleHAiOjE3MDY4MDIzMjd9.aWGZCv5vJIai0Dw6sVcQ9FT70PHcqWcqP9sGdKBJeco"
                },
                "totals": {
                  "all": 1452,
                  "integration": 997,
                  "user": 455
                }
              },
              "properties": {
                "accountId": {
                  "description": "The ID of the account the events are associated with.",
                  "type": "string"
                },
                "start": {
                  "description": "The start date and time of the requested summaries in ISO 8601 time format.",
                  "format": "date-time",
                  "type": "string"
                },
                "end": {
                  "description": "The end date and time of the requested summaries in ISO 8601 time format.",
                  "format": "date-time",
                  "type": "string"
                },
                "groupBy": {
                  "description": "How the events should be grouped.",
                  "enum": [
                    "app",
                    "user"
                  ],
                  "type": "string"
                },
                "where": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Id of the item to filter by.",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of item to filter by.",
                        "enum": [
                          "app",
                          "user"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "results": {
                  "description": "An array of objects that contains Application/User information and an events object with summaries by event type.",
                  "items": {
                    "properties": {
                      "eventTypes": {
                        "description": "An array of events that contains specific information associated with an Application/User broken down by event type.",
                        "items": {
                          "properties": {
                            "billingCategory": {
                              "description": "Billing category of the event type.",
                              "enum": [
                                "user",
                                "integration"
                              ],
                              "type": "string"
                            },
                            "count": {
                              "description": "Count of events associated with that event type and Application/User.",
                              "type": "integer"
                            },
                            "eventType": {
                              "description": "Event type",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "description": "Id of the Application/User.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the Application/User.",
                        "type": "string"
                      },
                      "totals": {
                        "description": "Totals by billing category for the event grouping.",
                        "properties": {
                          "all": {
                            "type": "number"
                          },
                          "integration": {
                            "type": "number"
                          },
                          "user": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "totals",
                      "eventTypes"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "metadata": {
                  "description": "Additional information about the results that may be helpful.",
                  "properties": {
                    "nextToken": {
                      "description": "Supply this token in a subsequent request to fetch the next page of results.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "nextToken"
                  ],
                  "type": "object"
                },
                "totals": {
                  "description": "Totals by billing category for all queried events.",
                  "properties": {
                    "all": {
                      "type": "number"
                    },
                    "integration": {
                      "type": "number"
                    },
                    "user": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "accountId",
                "start",
                "end",
                "groupBy",
                "where",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "description": "Get event summaries for any span of days up to one year and excluding future dates.  \n**Note:** This API is available for enterprise users only. Data is updated hourly; to ensure accuracy, query dates should be at least one hour in the past. Transactional rate limits are 100 per hour.",
        "operationId": "platformAnalyticEventSummaries",
        "summary": "Get event summaries"
      }
    },
    "/solutions/{solutionId}": {
      "get": {
        "description": "Returns the QBL for the specified solution. Learn more about [QBL syntax](https://help.quickbase.com/hc/en-us/articles/24845511223828-What-is-QBL).  \n We are releasing schema coverage for QBL in stages. See [what's supported today](https://helpv2.quickbase.com/hc/en-us/articles/30119680754068-QBL-version-0-4-overview) in our QBL documentation.",
        "summary": "Export a solution",
        "operationId": "exportSolution",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/x-yaml"
        ],
        "parameters": [
          {
            "name": "solutionId",
            "description": "The unique identifier of a solution",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "qBLVersion",
            "description": "The QBL version to be used for the export. If not specified the default would be used.",
            "required": false,
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/x-yaml",
            "schema": {
              "example": "Solution:\n  Id: 8d2c3333-7d32-4ece-8073-57106c465384\n  Name: Example solution\n  Owner: manager@yourrealm.com\n  ExportDate: 2024-03-25 12:04:05\nVersion: 0.2\nResources:\n  $App_Example_app:\n    Type: QB::Application\n    Properties:\n      Name: Example app\n      Description: \n      AppColor: '#72509a'\n      Manager: manager@yourrealm.com\n      TableOrder: []\n      AppIcon: Application\n      CurrencySymbol: $\n      FiscalYearDesignation: Last\n      FirstDayOfWeek: Sun\n      DateFormat: MM-DD-YYYY\n      FirstMonthOfFiscalYear: Jan\n      CurrencySymbolPosition: Between\n      NumberFormat:\n        SeparatorStyle: CommaGroupingPeriodDecimal\n        SeparatorPlaces: none\n      DefaultViewMode: Auto\n      HideNewUpdatedIcons: false\n      DisableAllUsersSelection: false\n      CanCopyApp: Admin\n      CanExportData: Everyone\n      Searchable: false\n      RequireAppToken: true\n      ShowPerformanceBar: false\n      ShowPerformanceAnalyzer: false\n      GlobalSearchExactMatch: false\n      Utf8DataEncoding: false\n      Timezone: Default\n      Branding:\n        AppHeader:\n          HideQuickbaseStandardMenu: false\n        AppFooter: {}\n      RoleOrder:\n        - !Ref\n          Role: $Role_Viewer\n        - !Ref\n          Role: $Role_Participant\n        - !Ref\n          Role: $Role_Administrator\n    Roles:\n      $Role_Viewer:\n        Type: QB::Application::Role\n        Properties:\n          Name: Viewer\n          Description: \n          Default: false\n          ManageUsers: false\n          EditApp: false\n          DisableAccess: false\n          AppUI:\n            HideSettings: false\n            HideUsers: false\n            HideFavorites: false\n            HideSearch: false\n            HideHelp: false\n            HideTestAs: false\n          TableUI:\n            Global:\n              HideInBar: false\n              HideNewRecord: false\n              HideGridEdit: false\n              HideEmail: false\n              HidePrint: false\n              HideImportExport: false\n              HideSaveSpreadsheet: false\n              HideCreateCustomizeReport: false\n              HidePersonalSettings: false\n      $Role_Participant:\n        Type: QB::Application::Role\n        Properties:\n          Name: Participant\n          Description: \n          Default: true\n          ManageUsers: true\n          EditApp: false\n          DisableAccess: false\n          AppUI:\n            HideSettings: false\n            HideUsers: false\n            HideFavorites: false\n            HideSearch: false\n            HideHelp: false\n            HideTestAs: false\n          TableUI:\n            Global:\n              HideInBar: false\n              HideNewRecord: false\n              HideGridEdit: false\n              HideEmail: false\n              HidePrint: false\n              HideImportExport: false\n              HideSaveSpreadsheet: false\n              HideCreateCustomizeReport: false\n              HidePersonalSettings: false\n      $Role_Administrator:\n        Type: QB::Application::Role\n        Properties:\n          Name: Administrator\n          Description: \n          Default: false\n          ManageUsers: true\n          EditApp: true\n          DisableAccess: false\n          AppUI:\n            HideSettings: false\n            HideUsers: false\n            HideFavorites: false\n            HideSearch: false\n            HideHelp: false\n            HideTestAs: false\n          TableUI:\n            Global:\n              HideInBar: false\n              HideNewRecord: false\n              HideGridEdit: false\n              HideEmail: false\n              HidePrint: false\n              HideImportExport: false\n              HideSaveSpreadsheet: false\n              HideCreateCustomizeReport: false\n              HidePersonalSettings: false"
            }
          },
          "400": {
            "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Bad request.",
                "description": ""
              }
            }
          },
          "404": {
            "description": "Solution does not exist. The supplied solution ID was not found.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Not found.",
                "description": ""
              }
            }
          },
          "401/403": {
            "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Forbidden.",
                "description": ""
              }
            }
          },
          "4xx/5xx": {
            "description": "Non-common error, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Internal server error.",
                "description": ""
              }
            }
          }
        },
        "tags": [
          "Solutions"
        ]
      },
      "put": {
        "description": "Updates the solution using the provided QBL. Learn more about [QBL syntax](https://help.quickbase.com/hc/en-us/articles/24845511223828-What-is-QBL).  \n We are releasing schema coverage for QBL in stages. See [what's supported today](https://helpv2.quickbase.com/hc/en-us/articles/30119680754068-QBL-version-0-4-overview) in our QBL documentation.",
        "summary": "Update a solution",
        "operationId": "updateSolution",
        "consumes": [
          "application/x-yaml"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "solutionId",
            "description": "The unique identifier of a solution",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "generated",
            "description": "The QBL to be used for the update.",
            "x-amf-mediaType": "application/x-yaml",
            "in": "body",
            "schema": {
              "example": "Version: 0.2\nResources:\n  $App_Example_app:\n    Type: QB::Application\n    Properties:\n      Name: Example app\n      Description: \n      AppColor: '#72509a'\n      Manager: manager@yourrealm.com\n      TableOrder: []\n      AppIcon: Application\n      CurrencySymbol: $\n      FiscalYearDesignation: Last\n      FirstDayOfWeek: Sun\n      DateFormat: MM-DD-YYYY\n      FirstMonthOfFiscalYear: Jan\n      CurrencySymbolPosition: Between\n      NumberFormat:\n        SeparatorStyle: CommaGroupingPeriodDecimal\n        SeparatorPlaces: none\n      DefaultViewMode: Auto\n      HideNewUpdatedIcons: false\n      DisableAllUsersSelection: false\n      CanCopyApp: Admin\n      CanExportData: Everyone\n      Searchable: false\n      RequireAppToken: true\n      ShowPerformanceBar: false\n      ShowPerformanceAnalyzer: false\n      GlobalSearchExactMatch: false\n      Utf8DataEncoding: false\n      Timezone: Default\n      Branding:\n        AppHeader:\n          HideQuickbaseStandardMenu: false\n        AppFooter: {}\n      RoleOrder:\n        - !Ref\n          Role: $Role_Viewer\n        - !Ref\n          Role: $Role_Participant\n        - !Ref\n          Role: $Role_Administrator\n    Roles:\n      $Role_Viewer:\n        Type: QB::Application::Role\n        Properties:\n          Name: Viewer\n          Description: \n          Default: false\n          ManageUsers: false\n          EditApp: false\n          DisableAccess: false\n          AppUI:\n            HideSettings: false\n            HideUsers: false\n            HideFavorites: false\n            HideSearch: false\n            HideHelp: false\n            HideTestAs: false\n          TableUI:\n            Global:\n              HideInBar: false\n              HideNewRecord: false\n              HideGridEdit: false\n              HideEmail: false\n              HidePrint: false\n              HideImportExport: false\n              HideSaveSpreadsheet: false\n              HideCreateCustomizeReport: false\n              HidePersonalSettings: false\n      $Role_Participant:\n        Type: QB::Application::Role\n        Properties:\n          Name: Participant\n          Description: \n          Default: true\n          ManageUsers: true\n          EditApp: false\n          DisableAccess: false\n          AppUI:\n            HideSettings: false\n            HideUsers: false\n            HideFavorites: false\n            HideSearch: false\n            HideHelp: false\n            HideTestAs: false\n          TableUI:\n            Global:\n              HideInBar: false\n              HideNewRecord: false\n              HideGridEdit: false\n              HideEmail: false\n              HidePrint: false\n              HideImportExport: false\n              HideSaveSpreadsheet: false\n              HideCreateCustomizeReport: false\n              HidePersonalSettings: false\n      $Role_Administrator:\n        Type: QB::Application::Role\n        Properties:\n          Name: Administrator\n          Description: \n          Default: false\n          ManageUsers: true\n          EditApp: true\n          DisableAccess: false\n          AppUI:\n            HideSettings: false\n            HideUsers: false\n            HideFavorites: false\n            HideSearch: false\n            HideHelp: false\n            HideTestAs: false\n          TableUI:\n            Global:\n              HideInBar: false\n              HideNewRecord: false\n              HideGridEdit: false\n              HideEmail: false\n              HidePrint: false\n              HideImportExport: false\n              HideSaveSpreadsheet: false\n              HideCreateCustomizeReport: false\n              HidePersonalSettings: false"
            }
          },
          {
            "name": "xQBLErrorsAsSuccess",
            "description": "If this header is set to true, the API will return a 207 status code even if there are errors. The errors will be returned in the response body.",
            "required": false,
            "in": "header",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "solutionId": "097aefef-113a-4fc1-9c78-3ecb1003b95c",
                "alias": null,
                "createdResources": {
                  "apps": {}
                },
                "warnings": []
              }
            }
          },
          "400": {
            "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Bad request",
                "description": ""
              }
            }
          },
          "401/403": {
            "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Forbidden",
                "description": ""
              }
            }
          },
          "4xx/5xx": {
            "description": "Non-common error, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Internal server error.",
                "description": ""
              }
            }
          }
        },
        "tags": [
          "Solutions"
        ]
      }
    },
    "/solutions": {
      "post": {
        "description": "Creates a solution using the provided QBL. Learn more about [QBL syntax](https://help.quickbase.com/hc/en-us/articles/24845511223828-What-is-QBL).  \n We are releasing schema coverage for QBL in stages. See [what's supported today](https://helpv2.quickbase.com/hc/en-us/articles/30119680754068-QBL-version-0-4-overview) in our QBL documentation.",
        "summary": "Create a solution",
        "operationId": "createSolution",
        "consumes": [
          "application/x-yaml"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generated",
            "description": "The QBL to be used for the create.",
            "x-amf-mediaType": "application/x-yaml",
            "in": "body",
            "schema": {
              "example": "Version: 0.2\nResources:\n  $App_Example_app:\n    Type: QB::Application\n    Properties:\n      Name: Example app\n      Description: \n      AppColor: '#72509a'\n      Manager: manager@yourrealm.com\n      TableOrder: []\n      AppIcon: Application\n      CurrencySymbol: $\n      FiscalYearDesignation: Last\n      FirstDayOfWeek: Sun\n      DateFormat: MM-DD-YYYY\n      FirstMonthOfFiscalYear: Jan\n      CurrencySymbolPosition: Between\n      NumberFormat:\n        SeparatorStyle: CommaGroupingPeriodDecimal\n        SeparatorPlaces: none\n      DefaultViewMode: Auto\n      HideNewUpdatedIcons: false\n      DisableAllUsersSelection: false\n      CanCopyApp: Admin\n      CanExportData: Everyone\n      Searchable: false\n      RequireAppToken: true\n      ShowPerformanceBar: false\n      ShowPerformanceAnalyzer: false\n      GlobalSearchExactMatch: false\n      Utf8DataEncoding: false\n      Timezone: Default\n      Branding:\n        AppHeader:\n          HideQuickbaseStandardMenu: false\n        AppFooter: {}\n      RoleOrder:\n        - !Ref\n          Role: $Role_Viewer\n        - !Ref\n          Role: $Role_Participant\n        - !Ref\n          Role: $Role_Administrator\n    Roles:\n      $Role_Viewer:\n        Type: QB::Application::Role\n        Properties:\n          Name: Viewer\n          Description: \n          Default: false\n          ManageUsers: false\n          EditApp: false\n          DisableAccess: false\n          AppUI:\n            HideSettings: false\n            HideUsers: false\n            HideFavorites: false\n            HideSearch: false\n            HideHelp: false\n            HideTestAs: false\n          TableUI:\n            Global:\n              HideInBar: false\n              HideNewRecord: false\n              HideGridEdit: false\n              HideEmail: false\n              HidePrint: false\n              HideImportExport: false\n              HideSaveSpreadsheet: false\n              HideCreateCustomizeReport: false\n              HidePersonalSettings: false\n      $Role_Participant:\n        Type: QB::Application::Role\n        Properties:\n          Name: Participant\n          Description: \n          Default: true\n          ManageUsers: true\n          EditApp: false\n          DisableAccess: false\n          AppUI:\n            HideSettings: false\n            HideUsers: false\n            HideFavorites: false\n            HideSearch: false\n            HideHelp: false\n            HideTestAs: false\n          TableUI:\n            Global:\n              HideInBar: false\n              HideNewRecord: false\n              HideGridEdit: false\n              HideEmail: false\n              HidePrint: false\n              HideImportExport: false\n              HideSaveSpreadsheet: false\n              HideCreateCustomizeReport: false\n              HidePersonalSettings: false\n      $Role_Administrator:\n        Type: QB::Application::Role\n        Properties:\n          Name: Administrator\n          Description: \n          Default: false\n          ManageUsers: true\n          EditApp: true\n          DisableAccess: false\n          AppUI:\n            HideSettings: false\n            HideUsers: false\n            HideFavorites: false\n            HideSearch: false\n            HideHelp: false\n            HideTestAs: false\n          TableUI:\n            Global:\n              HideInBar: false\n              HideNewRecord: false\n              HideGridEdit: false\n              HideEmail: false\n              HidePrint: false\n              HideImportExport: false\n              HideSaveSpreadsheet: false\n              HideCreateCustomizeReport: false\n              HidePersonalSettings: false"
            }
          },
          {
            "name": "xQBLErrorsAsSuccess",
            "description": "If this header is set to true, the API will return a 207 status code even if there are errors. The errors will be returned in the response body.",
            "required": false,
            "in": "header",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "solutionId": "097aefef-113a-4fc1-9c78-3ecb1003b95c",
                "alias": null,
                "createdResources": {
                  "apps": {}
                },
                "warnings": []
              }
            }
          },
          "400": {
            "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Bad request.",
                "description": ""
              }
            }
          },
          "401/403": {
            "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Forbidden.",
                "description": ""
              }
            }
          },
          "4xx/5xx": {
            "description": "Non-common error, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Internal server error.",
                "description": ""
              }
            }
          }
        },
        "tags": [
          "Solutions"
        ]
      }
    },
    "/solutions/{solutionId}/torecord": {
      "get": {
        "description": "Exports the solution and outputs the resulting QBL in a new record in the specified table. The QBL will be saved to a file in the file attachment field that is specified. The table cannot have any required fields besides the file attachment field.  \n We are releasing schema coverage for QBL in stages. See [what's supported today](https://helpv2.quickbase.com/hc/en-us/articles/30119680754068-QBL-version-0-4-overview) in our QBL documentation.",
        "summary": "Export solution to record",
        "operationId": "exportSolutionToRecord",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "solutionId",
            "description": "The unique identifier of the solution.",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table.",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "fieldId",
            "description": "The unique identifier (fid) of the field. It needs to be a file attachment field.",
            "required": true,
            "in": "query",
            "type": "int"
          },
          {
            "name": "xQBLErrorsAsSuccess",
            "description": "If this header is set to true, the API will return a 207 status code even if there are errors. The errors will be returned in the response body.",
            "required": false,
            "in": "header",
            "type": "boolean"
          },
          {
            "name": "qBLVersion",
            "description": "The QBL version to be used for the export. If not specified the default would be used.",
            "required": false,
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "record_id": 1,
                "filename": "QBL-0.4-30d92a39-5940-49b6-9eb1-c2966f85a7c0.yaml"
              }
            }
          },
          "400": {
            "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Bad request.",
                "description": ""
              }
            }
          },
          "404": {
            "description": "A resource is missing. For example: The supplied solution or field does not exist.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Not found.",
                "description": ""
              }
            }
          },
          "401/403": {
            "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Forbidden.",
                "description": ""
              }
            }
          },
          "4xx/5xx": {
            "description": "Non-common error, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Internal server error.",
                "description": ""
              }
            }
          }
        },
        "tags": [
          "Solutions"
        ]
      }
    },
    "/solutions/fromrecord": {
      "get": {
        "description": "Creates a solution using the QBL from the specified record.  \n We are releasing schema coverage for QBL in stages. See [what's supported today](https://helpv2.quickbase.com/hc/en-us/articles/30119680754068-QBL-version-0-4-overview) in our QBL documentation.",
        "summary": "Create solution from record",
        "operationId": "createSolutionFromRecord",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table.",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "fieldId",
            "description": "The unique identifier (fid) of the field. It needs to be a file attachment field.",
            "required": true,
            "in": "query",
            "type": "int"
          },
          {
            "name": "recordId",
            "description": "The unique identifier of the record.",
            "required": true,
            "in": "query",
            "type": "int"
          },
          {
            "name": "xQBLErrorsAsSuccess",
            "description": "If this header is set to true, the API will return a 207 status code even if there are errors. The errors will be returned in the response body.",
            "required": false,
            "in": "header",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "solutionId": "f53acd36-1e75-47ed-910c-0ca4fd165a84",
                "alias": null,
                "createdResources": {
                  "apps": {
                    "$App_IT_Total_Management": "bt6i6jc39"
                  },
                  "pipelines": {}
                },
                "warnings": []
              }
            }
          },
          "400": {
            "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Bad request.",
                "description": ""
              }
            }
          },
          "404": {
            "description": "A resource is missing. For example: The supplied solution, field or record does not exist.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Not found.",
                "description": ""
              }
            }
          },
          "401/403": {
            "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Forbidden.",
                "description": ""
              }
            }
          },
          "4xx/5xx": {
            "description": "Non-common error, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Internal server error.",
                "description": ""
              }
            }
          }
        },
        "tags": [
          "Solutions"
        ]
      }
    },
    "/solutions/{solutionId}/fromrecord": {
      "get": {
        "description": "Updates a solution using the QBL from the specified record.  \n We are releasing schema coverage for QBL in stages. See [what's supported today](https://helpv2.quickbase.com/hc/en-us/articles/30119680754068-QBL-version-0-4-overview) in our QBL documentation.",
        "summary": "Update solution from record",
        "operationId": "updateSolutionToRecord",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "solutionId",
            "description": "The unique identifier of the solution.",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table.",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "fieldId",
            "description": "The unique identifier (fid) of the field. It needs to be a file attachment field.",
            "required": true,
            "in": "query",
            "type": "int"
          },
          {
            "name": "recordId",
            "description": "The unique identifier of the record.",
            "required": true,
            "in": "query",
            "type": "int"
          },
          {
            "name": "xQBLErrorsAsSuccess",
            "description": "If this header is set to true, the API will return a 207 status code even if there are errors. The errors will be returned in the response body.",
            "required": false,
            "in": "header",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "solutionId": "acfa89a2-5ec0-4552-ba69-1372e41288ea",
                "alias": null,
                "resources": {
                  "apps": {
                    "$App_IT_Total_Management": "bt6i6jc39"
                  },
                  "pipelines": {}
                },
                "warnings": []
              }
            }
          },
          "400": {
            "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Bad request.",
                "description": ""
              }
            }
          },
          "404": {
            "description": "A resource is missing. For example: The supplied solution, field or record does not exist.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Not found.",
                "description": ""
              }
            }
          },
          "401/403": {
            "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Forbidden.",
                "description": ""
              }
            }
          },
          "4xx/5xx": {
            "description": "Non-common error, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Internal server error.",
                "description": ""
              }
            }
          }
        },
        "tags": [
          "Solutions"
        ]
      }
    },
    "/solutions/{solutionId}/changeset": {
      "put": {
        "description": "Returns a list of changes that would occur if the provided QBL were to be applied. Learn more about [QBL syntax](https://help.quickbase.com/hc/en-us/articles/24845511223828-What-is-QBL).  \n We are releasing schema coverage for QBL in stages. See [what's supported today](https://helpv2.quickbase.com/hc/en-us/articles/30119680754068-QBL-version-0-4-overview) in our QBL documentation.",
        "summary": "List solution changes",
        "operationId": "changesetSolution",
        "consumes": [
          "application/x-yaml"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "solutionId",
            "description": "The unique identifier of the solution.",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "generated",
            "description": "The QBL to be used for the changeset.",
            "x-amf-mediaType": "application/x-yaml",
            "in": "body",
            "schema": {
              "example": "Version: 0.4\nResources:\n  $App_Example_app:\n    Type: QB::Application\n    Properties:\n      Name: Example app\n      Description: \n      AppColor: '#72509a'\n      Manager: manager@yourrealm.com\n      TableOrder: []\n      AppIcon: Application\n      CurrencySymbol: $\n      FiscalYearDesignation: Last\n      FirstDayOfWeek: Sun\n      DateFormat: MM-DD-YYYY\n      FirstMonthOfFiscalYear: Jan\n      CurrencySymbolPosition: Between\n      NumberFormat:\n        SeparatorStyle: CommaGroupingPeriodDecimal\n        SeparatorPlaces: none\n      DefaultViewMode: Auto\n      HideNewUpdatedIcons: false\n      DisableAllUsersSelection: false\n      CanCopyApp: Admin\n      CanExportData: Everyone\n      Searchable: false\n      RequireAppToken: true\n      ShowPerformanceBar: false\n      ShowPerformanceAnalyzer: false\n      GlobalSearchExactMatch: false\n      Utf8DataEncoding: false\n      Timezone: Default\n      Branding:\n        AppHeader:\n          HideQuickbaseStandardMenu: false\n        AppFooter: {}\n      RoleOrder:\n        - !Ref\n          Role: $Role_Viewer\n        - !Ref\n          Role: $Role_Participant\n        - !Ref\n          Role: $Role_Administrator\n    Roles:\n      $Role_Viewer:\n        Type: QB::Application::Role\n        Properties:\n          Name: Viewer\n          Description: \n          Default: false\n          ManageUsers: false\n          EditApp: false\n          DisableAccess: false\n          AppUI:\n            HideSettings: false\n            HideUsers: false\n            HideFavorites: false\n            HideSearch: false\n            HideHelp: false\n            HideTestAs: false\n          TableUI:\n            Global:\n              HideInBar: false\n              HideNewRecord: false\n              HideGridEdit: false\n              HideEmail: false\n              HidePrint: false\n              HideImportExport: false\n              HideSaveSpreadsheet: false\n              HideCreateCustomizeReport: false\n              HidePersonalSettings: false\n      $Role_Participant:\n        Type: QB::Application::Role\n        Properties:\n          Name: Participant\n          Description: \n          Default: true\n          ManageUsers: true\n          EditApp: false\n          DisableAccess: false\n          AppUI:\n            HideSettings: false\n            HideUsers: false\n            HideFavorites: false\n            HideSearch: false\n            HideHelp: false\n            HideTestAs: false\n          TableUI:\n            Global:\n              HideInBar: false\n              HideNewRecord: false\n              HideGridEdit: false\n              HideEmail: false\n              HidePrint: false\n              HideImportExport: false\n              HideSaveSpreadsheet: false\n              HideCreateCustomizeReport: false\n              HidePersonalSettings: false\n      $Role_Administrator:\n        Type: QB::Application::Role\n        Properties:\n          Name: Administrator\n          Description: \n          Default: false\n          ManageUsers: true\n          EditApp: true\n          DisableAccess: false\n          AppUI:\n            HideSettings: false\n            HideUsers: false\n            HideFavorites: false\n            HideSearch: false\n            HideHelp: false\n            HideTestAs: false\n          TableUI:\n            Global:\n              HideInBar: false\n              HideNewRecord: false\n              HideGridEdit: false\n              HideEmail: false\n              HidePrint: false\n              HideImportExport: false\n              HideSaveSpreadsheet: false\n              HideCreateCustomizeReport: false\n              HidePersonalSettings: false"
            }
          },
          {
            "name": "xQBLErrorsAsSuccess",
            "description": "If this header is set to true, the API will return a 207 status code even if there are errors. The errors will be returned in the response body.",
            "required": false,
            "in": "header",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "id": "f53acd36-1e75-47ed-910c-0ca4fd165a84",
                "changes": [
                  {
                    "logicalType": "App",
                    "logicalId": "$App_Example_app",
                    "action": "Add",
                    "path": [
                      "$App_Example_app"
                    ]
                  },
                  {
                    "logicalType": "App",
                    "logicalId": "$App_Simple_Project_Manager",
                    "action": "Remove",
                    "path": [
                      "$App_Simple_Project_Manager"
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Bad request.",
                "description": ""
              }
            }
          },
          "404": {
            "description": "Solution does not exist. The supplied solution ID was not found.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Not found.",
                "description": ""
              }
            }
          },
          "401/403": {
            "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Forbidden.",
                "description": ""
              }
            }
          },
          "4xx/5xx": {
            "description": "Non-common error, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Internal server error.",
                "description": ""
              }
            }
          }
        },
        "tags": [
          "Solutions"
        ]
      }
    },
    "/solutions/{solutionId}/changeset/fromrecord": {
      "get": {
        "description": "Returns a list of changes that would occur if the QBL from the provided record were to be applied.  \n We are releasing schema coverage for QBL in stages. See [what's supported today](https://helpv2.quickbase.com/hc/en-us/articles/30119680754068-QBL-version-0-4-overview) in our QBL documentation.",
        "summary": "List solution changes from record",
        "operationId": "changesetSolutionFromRecord",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "solutionId",
            "description": "The unique identifier of the solution.",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "tableId",
            "description": "The unique identifier (dbid) of the table.",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "fieldId",
            "description": "The unique identifier (fid) of the field. It needs to be a file attachment field.",
            "required": true,
            "in": "query",
            "type": "int"
          },
          {
            "name": "recordId",
            "description": "The unique identifier of the record.",
            "required": true,
            "in": "query",
            "type": "int"
          },
          {
            "name": "xQBLErrorsAsSuccess",
            "description": "If this header is set to true, the API will return a 207 status code even if there are errors. The errors will be returned in the response body.",
            "required": false,
            "in": "header",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "id": "f53acd36-1e75-47ed-910c-0ca4fd165a84",
                "changes": [
                  {
                    "logicalType": "Property",
                    "logicalId": "App::$App_MVP_App_234::Property::Name",
                    "action": "Update",
                    "path": [
                      "$App_MVP_App_234",
                      "Name"
                    ]
                  },
                  {
                    "logicalType": "Table",
                    "logicalId": "$Table_Parents",
                    "action": "Remove",
                    "path": [
                      "$App_MVP_App_234",
                      "$Table_Parents"
                    ]
                  },
                  {
                    "logicalType": "Table",
                    "logicalId": "$Table_Children",
                    "action": "Remove",
                    "path": [
                      "$App_MVP_App_234",
                      "$Table_Children"
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request. For example: Missing required headers, Missing required parameters, Malformed QBL and others. Message should provide more information, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Bad request.",
                "description": ""
              }
            }
          },
          "404": {
            "description": "A resource is missing. For example: The supplied solution, field or record does not exist.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Not found.",
                "description": ""
              }
            }
          },
          "401/403": {
            "description": "Insufficient access. This could be for many reasons such as: User doesn’t have SolutionHub access, User is not the owner or a contributor for the solution, User cannot create apps and others.  Message should provide more information.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Forbidden.",
                "description": ""
              }
            }
          },
          "4xx/5xx": {
            "description": "Non-common error, reach out to support if there’s lack of clarity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "message": "Internal server error.",
                "description": ""
              }
            }
          }
        },
        "tags": [
          "Solutions"
        ]
      }
    },
    "/docTemplates/{templateId}/generate": {
      "get": {
        "tags": [
          "Document Templates"
        ],
        "summary": "Generate a document",
        "description": "Generates a document from a template. This feature is only available on business or enterprise plans.",
        "operationId": "generateDocument",
        "parameters": [
          {
            "name": "templateId",
            "description": "This is the ID of document template.",
            "required": true,
            "in": "path",
            "type": "number"
          },
          {
            "name": "tableId",
            "description": "The unique identifier of the table.",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "recordId",
            "description": "The ID of the record",
            "required": false,
            "in": "query",
            "type": "number"
          },
          {
            "name": "filename",
            "description": "File name for the downloaded file",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "accept",
            "in": "header",
            "description": "The content-type of the response. application/json will return a JSON payload with a base64 encoded file. application/octet-stream will download the file directly.",
            "required": false,
            "type": "string"
          },
          {
            "name": "format",
            "in": "query",
            "description": "The format of the file that is returned. Default is \"pdf\".",
            "type": "string"
          },
          {
            "name": "margin",
            "in": "query",
            "description": "Margin formatted as top right bottom left, separated by spaces. Add to override the value set in the template builder.",
            "required": false,
            "type": "string"
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Unit of measurement for the margin. Default is \"in\". Add to override the value set in the template builder.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size. Default is \"A4\". Add to override the value set in the template builder.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orientation",
            "in": "query",
            "description": "Page orientation. Default is \"portrait\". Add to override the value set in the template builder.",
            "required": false,
            "type": "string"
          },
          {
            "name": "realm",
            "in": "query",
            "description": "Your Quickbase domain, for example demo.quickbase.com",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "fileName": "Document.pdf",
                "data": "data",
                "contentType": "application/pdf"
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "fileName": {
                  "description": "The file name.",
                  "type": "string"
                },
                "data": {
                  "description": "Base64 encoded file content.",
                  "type": "string"
                },
                "contentType": {
                  "description": "The document content type.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "App": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        },
        "dateFormat": {
          "type": "string"
        },
        "hasEveryoneOnTheInternet": {
          "type": "boolean"
        },
        "memoryInfo": {
          "$ref": "#/definitions/AppMemoryInfo"
        },
        "securityProperties": {
          "$ref": "#/definitions/AppSecurityProperties"
        }
      }
    },
    "AppMemoryInfo": {
      "type": "object",
      "properties": {
        "estMemory": {
          "type": "number"
        },
        "estMemoryInclDependentApps": {
          "type": "number"
        }
      }
    },
    "AppSecurityProperties": {
      "type": "object",
      "properties": {
        "allowClone": {
          "type": "boolean"
        },
        "allowExport": {
          "type": "boolean"
        },
        "enableAppTokens": {
          "type": "boolean"
        },
        "hideFromPublic": {
          "type": "boolean"
        },
        "mustBeRealmApproved": {
          "type": "boolean"
        },
        "useIPFilter": {
          "type": "boolean"
        }
      }
    },
    "CreateAppRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The app name. Multiple apps with the same name are allowed in the same realm."
        },
        "assignToken": {
          "type": "boolean",
          "description": "Set to true to assign the app to the user token used to create it. Default is false."
        },
        "description": {
          "type": "string",
          "description": "The description for the app. Defaults to blank if omitted."
        },
        "securityProperties": {
          "$ref": "#/definitions/AppSecurityProperties",
          "description": "Application security properties."
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "value"
            ]
          },
          "description": "App variables (max 10, optional). See About Application Variables."
        }
      }
    },
    "CreateApp200Response": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this application."
        },
        "name": {
          "type": "string",
          "description": "The app name."
        },
        "description": {
          "type": "string",
          "description": "The description for the app."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time and date the app was created (ISO 8601, UTC)."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The time and date the app was last updated (ISO 8601, UTC)."
        },
        "dateFormat": {
          "type": "string",
          "description": "The format used for displaying dates in the app (e.g., MM-DD-YYYY)."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone used for displaying time values (e.g., (UTC-08:00) Pacific Time)."
        },
        "memoryInfo": {
          "$ref": "#/definitions/AppMemoryInfo",
          "description": "Application memory information."
        },
        "hasEveryoneOnTheInternet": {
          "type": "boolean",
          "description": "Indicates if the app includes Everyone On The Internet access."
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "value"
            ]
          },
          "description": "The app variables."
        },
        "dataClassification": {
          "type": "string",
          "description": "The Data Classification label assigned to the app (optional, may be 'None')."
        },
        "securityProperties": {
          "$ref": "#/definitions/AppSecurityProperties",
          "description": "Security properties of the application."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Field": {
      "type": "object",
      "required": [
        "id",
        "label",
        "fieldType"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "label": {
          "type": "string"
        },
        "fieldType": {
          "type": "string"
        },
        "noWrap": {
          "type": "boolean"
        },
        "bold": {
          "type": "boolean"
        },
        "required": {
          "type": "boolean"
        },
        "appearsByDefault": {
          "type": "boolean"
        },
        "findEnabled": {
          "type": "boolean"
        },
        "unique": {
          "type": "boolean"
        },
        "doesDataCopy": {
          "type": "boolean"
        },
        "fieldHelp": {
          "type": "string"
        },
        "audited": {
          "type": "boolean"
        },
        "properties": {
          "$ref": "#/definitions/FieldProperties"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldPermissionsInner"
          }
        }
      }
    },
    "FieldProperties": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "type": "boolean"
        },
        "foreignKey": {
          "type": "boolean"
        },
        "numLines": {
          "type": "integer"
        },
        "maxLength": {
          "type": "integer"
        },
        "appendOnly": {
          "type": "boolean"
        },
        "allowHTML": {
          "type": "boolean"
        },
        "allowMentions": {
          "type": "boolean"
        },
        "sortAsGiven": {
          "type": "boolean"
        },
        "carryChoices": {
          "type": "boolean"
        },
        "allowNewChoices": {
          "type": "boolean"
        },
        "formula": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        }
      }
    },
    "FieldPermissionsInner": {
      "type": "object",
      "properties": {
        "permissionType": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "roleId": {
          "type": "integer"
        }
      }
    },
    "Table": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "defaultSortFieldId": {
          "type": "integer"
        },
        "defaultSortOrder": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "keyFieldId": {
          "type": "integer"
        },
        "nextFieldId": {
          "type": "integer"
        },
        "nextRecordId": {
          "type": "integer"
        },
        "pluralRecordName": {
          "type": "string"
        },
        "singleRecordName": {
          "type": "string"
        },
        "sizeLimit": {
          "type": "string"
        },
        "spaceRemaining": {
          "type": "string"
        },
        "spaceUsed": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Record": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "properties": {
            "value": {
              "type": "any"
            }
          }
        }
      },
      "description": "A record with field ID keys and value objects."
    },
    "UpsertRequest": {
      "type": "object",
      "required": [
        "to"
      ],
      "properties": {
        "to": {
          "type": "string",
          "description": "The table identifier (dbid)."
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Record"
          },
          "description": "Array of records to upsert."
        },
        "mergeFieldId": {
          "type": "integer",
          "description": "The field ID to merge on (optional)."
        },
        "fieldsToReturn": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "Field IDs to return in the response (optional)."
        }
      }
    },
    "Upsert200Response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "any"
                }
              }
            }
          },
          "description": "Array of upserted records with field IDs and values."
        },
        "metadata": {
          "type": "object",
          "properties": {
            "createdRecordIds": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "IDs of newly created records."
            },
            "updatedRecordIds": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "IDs of updated records."
            },
            "unchangedRecordIds": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "IDs of unchanged records."
            },
            "totalNumberOfRecordsProcessed": {
              "type": "integer",
              "description": "Total records processed."
            }
          },
          "required": [
            "totalNumberOfRecordsProcessed"
          ]
        }
      }
    },
    "Upsert207Response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "any"
                }
              }
            }
          },
          "description": "Array of successfully upserted records (may be empty)."
        },
        "metadata": {
          "type": "object",
          "properties": {
            "createdRecordIds": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "updatedRecordIds": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "unchangedRecordIds": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "lineErrors": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Errors by line number (1-based index)."
            },
            "totalNumberOfRecordsProcessed": {
              "type": "integer"
            }
          },
          "required": [
            "totalNumberOfRecordsProcessed"
          ]
        }
      }
    },
    "ReportRunResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      }
    },
    "GetTempTokenDBID200Response": {
      "type": "object",
      "required": [
        "temporaryAuthorization"
      ],
      "properties": {
        "temporaryAuthorization": {
          "type": "string"
        }
      }
    }
  }
}